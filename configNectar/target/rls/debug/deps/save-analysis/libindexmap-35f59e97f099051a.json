{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0","program":"/home/sewdohe/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","indexmap","--edition=2018","/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"std\"","-C","metadata=35f59e97f099051a","-C","extra-filename=-35f59e97f099051a","--out-dir","/home/sewdohe/nvim-config/configNectar/target/rls/debug/deps","-L","dependency=/home/sewdohe/nvim-config/configNectar/target/rls/debug/deps","--extern","hashbrown=/home/sewdohe/nvim-config/configNectar/target/rls/debug/deps/libhashbrown-2c93eb55664df974.rmeta","--cap-lints","allow","--cfg","has_std","--cfg","rustc_1_51","--error-format=json","--sysroot","/home/sewdohe/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/sewdohe/nvim-config/configNectar/target/rls/debug/deps/libindexmap-35f59e97f099051a.rmeta"},"prelude":{"crate_id":{"name":"indexmap","disambiguator":[9853043895886623109,0]},"crate_root":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src","external_crates":[{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[8373705112501149482,0]}},{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[16909867051943430517,0]}},{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[11260902004430380252,0]}},{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[10608756751411298727,0]}},{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","num":5,"id":{"name":"std","disambiguator":[12872056181829019095,0]}},{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4369074810188542311,0]}},{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12333111663820923515,0]}},{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12748886438148098175,0]}},{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[6627577059144635863,0]}},{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15896330838049133250,0]}},{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2582212836281766037,0]}},{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[4723863376138925013,0]}},{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[2482912266844122781,0]}},{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16993901708144586312,0]}},{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[15622067442351408235,0]}},{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[12927959315880918009,0]}},{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[1763799641200411356,0]}},{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[2454364557606196642,0]}},{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[10980657607002924382,0]}},{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","num":20,"id":{"name":"hashbrown","disambiguator":[12355365143733058706,0]}}],"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":92,"byte_end":5459,"line_start":2,"line_end":193,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":45},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":14788,"byte_end":14799,"line_start":6,"line_end":6,"column_start":30,"column_end":41},"alias_span":null,"name":"MutableKeys","value":"","parent":{"krate":0,"index":86}},{"kind":"Use","ref_id":{"krate":0,"index":269},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":15363,"byte_end":15368,"line_start":27,"line_end":27,"column_start":22,"column_end":27},"alias_span":null,"name":"Entry","value":"","parent":{"krate":0,"index":86}},{"kind":"Use","ref_id":{"krate":0,"index":133},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":15370,"byte_end":15383,"line_start":27,"line_end":27,"column_start":29,"column_end":42},"alias_span":null,"name":"OccupiedEntry","value":"","parent":{"krate":0,"index":86}},{"kind":"Use","ref_id":{"krate":0,"index":312},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":15385,"byte_end":15396,"line_start":27,"line_end":27,"column_start":44,"column_end":55},"alias_span":null,"name":"VacantEntry","value":"","parent":{"krate":0,"index":86}},{"kind":"Use","ref_id":{"krate":0,"index":22},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":3606,"byte_end":3616,"line_start":109,"line_end":109,"column_start":28,"column_end":38},"alias_span":null,"name":"Equivalent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":413},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":3638,"byte_end":3646,"line_start":110,"line_end":110,"column_start":21,"column_end":29},"alias_span":null,"name":"IndexMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":924},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":3668,"byte_end":3676,"line_start":111,"line_end":111,"column_start":21,"column_end":29},"alias_span":null,"name":"IndexSet","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":92,"byte_end":5459,"line_start":2,"line_end":193,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":18},{"krate":0,"index":29},{"krate":0,"index":64},{"krate":0,"index":86},{"krate":0,"index":856},{"krate":0,"index":1320},{"krate":0,"index":1323},{"krate":0,"index":1326},{"krate":0,"index":1463},{"krate":0,"index":1466},{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1471},{"krate":0,"index":1472},{"krate":0,"index":1329},{"krate":0,"index":1475},{"krate":0,"index":1481},{"krate":0,"index":1484},{"krate":0,"index":1331},{"krate":0,"index":1336},{"krate":0,"index":1348}],"decl_id":null,"docs":" [`IndexMap`] is a hash table where the iteration order of the key-value\n pairs is independent of the hash values of the keys.","sig":null,"attributes":[{"value":"deny(unsafe_code)","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":92,"byte_end":113,"line_start":2,"line_end":2,"column_start":1,"column_end":22}},{"value":"warn(rust_2018_idioms)","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":114,"byte_end":140,"line_start":3,"line_end":3,"column_start":1,"column_end":27}},{"value":"no_std","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":196,"byte_end":206,"line_start":5,"line_end":5,"column_start":1,"column_end":11}},{"value":"/ [`IndexMap`] is a hash table where the iteration order of the key-value","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":208,"byte_end":283,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ pairs is independent of the hash values of the keys.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":284,"byte_end":340,"line_start":8,"line_end":8,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":341,"byte_end":344,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`] is a corresponding hash set using the same implementation and","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":345,"byte_end":423,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/ with similar properties.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":424,"byte_end":452,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":453,"byte_end":456,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`IndexMap`]: map/struct.IndexMap.html","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":457,"byte_end":499,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"/ [`IndexSet`]: set/struct.IndexSet.html","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":500,"byte_end":542,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":543,"byte_end":546,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":547,"byte_end":550,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ### Feature Highlights","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":551,"byte_end":577,"line_start":17,"line_end":17,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":578,"byte_end":581,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`IndexMap`] and [`IndexSet`] are drop-in compatible with the std `HashMap`","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":582,"byte_end":661,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ and `HashSet`, but they also have some features of note:","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":662,"byte_end":722,"line_start":20,"line_end":20,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":723,"byte_end":726,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ - The ordering semantics (see their documentation for details)","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":727,"byte_end":793,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/ - Sorting methods and the [`.pop()`][IndexMap::pop] methods.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":794,"byte_end":858,"line_start":23,"line_end":23,"column_start":1,"column_end":65}},{"value":"/ - The [`Equivalent`] trait, which offers more flexible equality definitions","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":859,"byte_end":938,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/   between borrowed and owned versions of keys.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":939,"byte_end":989,"line_start":25,"line_end":25,"column_start":1,"column_end":51}},{"value":"/ - The [`MutableKeys`][map::MutableKeys] trait, which gives opt-in mutable","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":990,"byte_end":1067,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/   access to hash map keys.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":1068,"byte_end":1098,"line_start":27,"line_end":27,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":1099,"byte_end":1102,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ### Alternate Hashers","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":1103,"byte_end":1128,"line_start":29,"line_end":29,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":1129,"byte_end":1132,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ [`IndexMap`] and [`IndexSet`] have a default hasher type `S = RandomState`,","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":1133,"byte_end":1212,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ just like the standard `HashMap` and `HashSet`, which is resistant to","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":1213,"byte_end":1286,"line_start":32,"line_end":32,"column_start":1,"column_end":74}},{"value":"/ HashDoS attacks but not the most performant. Type aliases can make it easier","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":1287,"byte_end":1367,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ to use alternate hashers:","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":1368,"byte_end":1397,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":1398,"byte_end":1401,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":1402,"byte_end":1409,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ use fnv::FnvBuildHasher;","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":1410,"byte_end":1438,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/ use fxhash::FxBuildHasher;","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":1439,"byte_end":1469,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/ use indexmap::{IndexMap, IndexSet};","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":1470,"byte_end":1509,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":1510,"byte_end":1513,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ type FnvIndexMap<K, V> = IndexMap<K, V, FnvBuildHasher>;","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":1514,"byte_end":1574,"line_start":41,"line_end":41,"column_start":1,"column_end":61}},{"value":"/ type FnvIndexSet<T> = IndexSet<T, FnvBuildHasher>;","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":1575,"byte_end":1629,"line_start":42,"line_end":42,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":1630,"byte_end":1633,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ type FxIndexMap<K, V> = IndexMap<K, V, FxBuildHasher>;","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":1634,"byte_end":1692,"line_start":44,"line_end":44,"column_start":1,"column_end":59}},{"value":"/ type FxIndexSet<T> = IndexSet<T, FxBuildHasher>;","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":1693,"byte_end":1745,"line_start":45,"line_end":45,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":1746,"byte_end":1749,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ let std: IndexSet<i32> = (0..100).collect();","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":1750,"byte_end":1798,"line_start":47,"line_end":47,"column_start":1,"column_end":49}},{"value":"/ let fnv: FnvIndexSet<i32> = (0..100).collect();","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":1799,"byte_end":1850,"line_start":48,"line_end":48,"column_start":1,"column_end":52}},{"value":"/ let fx: FxIndexSet<i32> = (0..100).collect();","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":1851,"byte_end":1900,"line_start":49,"line_end":49,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(std, fnv);","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":1901,"byte_end":1926,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(std, fx);","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":1927,"byte_end":1951,"line_start":51,"line_end":51,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":1952,"byte_end":1959,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":1960,"byte_end":1963,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ### Rust Version","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":1964,"byte_end":1984,"line_start":54,"line_end":54,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":1985,"byte_end":1988,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ This version of indexmap requires Rust 1.49 or later.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":1989,"byte_end":2046,"line_start":56,"line_end":56,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":2047,"byte_end":2050,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ The indexmap 1.x release series will use a carefully considered version","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":2051,"byte_end":2126,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/ upgrade policy, where in a later 1.x version, we will raise the minimum","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":2127,"byte_end":2202,"line_start":59,"line_end":59,"column_start":1,"column_end":76}},{"value":"/ required Rust version.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":2203,"byte_end":2229,"line_start":60,"line_end":60,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":2230,"byte_end":2233,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## No Standard Library Targets","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":2234,"byte_end":2268,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":2269,"byte_end":2272,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ This crate supports being built without `std`, requiring","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":2273,"byte_end":2333,"line_start":64,"line_end":64,"column_start":1,"column_end":61}},{"value":"/ `alloc` instead. This is enabled automatically when it is detected that","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":2334,"byte_end":2409,"line_start":65,"line_end":65,"column_start":1,"column_end":76}},{"value":"/ `std` is not available. There is no crate feature to enable/disable to","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":2410,"byte_end":2484,"line_start":66,"line_end":66,"column_start":1,"column_end":75}},{"value":"/ trigger this. It can be tested by building for a std-less target.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":2485,"byte_end":2554,"line_start":67,"line_end":67,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":2555,"byte_end":2558,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ - Creating maps and sets using [`new`][IndexMap::new] and","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":2559,"byte_end":2620,"line_start":69,"line_end":69,"column_start":1,"column_end":62}},{"value":"/ [`with_capacity`][IndexMap::with_capacity] is unavailable without `std`.  ","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":2621,"byte_end":2699,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/   Use methods [`IndexMap::default`][def],","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":2700,"byte_end":2745,"line_start":71,"line_end":71,"column_start":1,"column_end":46}},{"value":"/   [`with_hasher`][IndexMap::with_hasher],","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":2746,"byte_end":2791,"line_start":72,"line_end":72,"column_start":1,"column_end":46}},{"value":"/   [`with_capacity_and_hasher`][IndexMap::with_capacity_and_hasher] instead.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":2792,"byte_end":2871,"line_start":73,"line_end":73,"column_start":1,"column_end":80}},{"value":"/   A no-std compatible hasher will be needed as well, for example","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":2872,"byte_end":2940,"line_start":74,"line_end":74,"column_start":1,"column_end":69}},{"value":"/   from the crate `twox-hash`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":2941,"byte_end":2974,"line_start":75,"line_end":75,"column_start":1,"column_end":34}},{"value":"/ - Macros [`indexmap!`] and [`indexset!`] are unavailable without `std`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":2975,"byte_end":3050,"line_start":76,"line_end":76,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":3051,"byte_end":3054,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ [def]: map/struct.IndexMap.html#impl-Default","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":3055,"byte_end":3103,"line_start":78,"line_end":78,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":22},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/equivalent.rs","byte_start":11026,"byte_end":11036,"line_start":13,"line_end":13,"column_start":11,"column_end":21},"name":"Equivalent","qualname":"::equivalent::Equivalent","value":"Equivalent<K: ?Sized>","parent":null,"children":[{"krate":0,"index":24}],"decl_id":null,"docs":" Key equivalence trait.","sig":null,"attributes":[{"value":"/ Key equivalence trait.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/equivalent.rs","byte_start":10636,"byte_end":10662,"line_start":3,"line_end":3,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/equivalent.rs","byte_start":10663,"byte_end":10666,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This trait allows hash table lookup to be customized.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/equivalent.rs","byte_start":10667,"byte_end":10724,"line_start":5,"line_end":5,"column_start":1,"column_end":58}},{"value":"/ It has one blanket implementation that uses the regular `Borrow` solution,","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/equivalent.rs","byte_start":10725,"byte_end":10803,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ just like `HashMap` and `BTreeMap` do, so that you can pass `&str` to lookup","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/equivalent.rs","byte_start":10804,"byte_end":10884,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ into a map with `String` keys and so on.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/equivalent.rs","byte_start":10885,"byte_end":10929,"line_start":8,"line_end":8,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/equivalent.rs","byte_start":10930,"byte_end":10933,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Contract","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/equivalent.rs","byte_start":10934,"byte_end":10948,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/equivalent.rs","byte_start":10949,"byte_end":10952,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The implementor **must** hash like `K`, if it is hashable.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/equivalent.rs","byte_start":10953,"byte_end":11015,"line_start":12,"line_end":12,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/equivalent.rs","byte_start":11124,"byte_end":11134,"line_start":15,"line_end":15,"column_start":8,"column_end":18},"name":"equivalent","qualname":"::equivalent::Equivalent::equivalent","value":"pub fn equivalent(&Self, &K) -> bool","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Compare self to `key` and return `true` if they are equal.\n","sig":null,"attributes":[{"value":"/ Compare self to `key` and return `true` if they are equal.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/equivalent.rs","byte_start":11054,"byte_end":11116,"line_start":14,"line_end":14,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":44},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/mutable_keys.rs","byte_start":11430,"byte_end":11443,"line_start":5,"line_end":5,"column_start":12,"column_end":25},"name":"PrivateMarker","qualname":"::mutable_keys::PrivateMarker","value":"PrivateMarker {  }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":45},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/mutable_keys.rs","byte_start":11993,"byte_end":12004,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"name":"MutableKeys","qualname":"::mutable_keys::MutableKeys","value":"MutableKeys","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":52}],"decl_id":null,"docs":" Opt-in mutable access to keys.","sig":null,"attributes":[{"value":"/ Opt-in mutable access to keys.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/mutable_keys.rs","byte_start":11448,"byte_end":11482,"line_start":7,"line_end":7,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/mutable_keys.rs","byte_start":11483,"byte_end":11486,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ These methods expose `&mut K`, mutable references to the key as it is stored","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/mutable_keys.rs","byte_start":11487,"byte_end":11567,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ in the map.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/mutable_keys.rs","byte_start":11568,"byte_end":11583,"line_start":10,"line_end":10,"column_start":1,"column_end":16}},{"value":"/ You are allowed to modify the keys in the hashmap **if the modification","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/mutable_keys.rs","byte_start":11584,"byte_end":11659,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ does not change the key’s hash and equality**.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/mutable_keys.rs","byte_start":11660,"byte_end":11712,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/mutable_keys.rs","byte_start":11713,"byte_end":11716,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ If keys are modified erroneously, you can no longer look them up.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/mutable_keys.rs","byte_start":11717,"byte_end":11786,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/ This is sound (memory safe) but a logical error hazard (just like","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/mutable_keys.rs","byte_start":11787,"byte_end":11856,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/ implementing PartialEq, Eq, or Hash incorrectly would be).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/mutable_keys.rs","byte_start":11857,"byte_end":11919,"line_start":16,"line_end":16,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/mutable_keys.rs","byte_start":11920,"byte_end":11923,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ `use` this trait to enable its methods for `IndexMap`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/mutable_keys.rs","byte_start":11924,"byte_end":11982,"line_start":18,"line_end":18,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":46},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/mutable_keys.rs","byte_start":12016,"byte_end":12019,"line_start":20,"line_end":20,"column_start":10,"column_end":13},"name":"Key","qualname":"::mutable_keys::MutableKeys::Key","value":"type Key;","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":47},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/mutable_keys.rs","byte_start":12030,"byte_end":12035,"line_start":21,"line_end":21,"column_start":10,"column_end":15},"name":"Value","qualname":"::mutable_keys::MutableKeys::Value","value":"type Value;","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/mutable_keys.rs","byte_start":12107,"byte_end":12120,"line_start":24,"line_end":24,"column_start":8,"column_end":21},"name":"get_full_mut2","qualname":"::mutable_keys::MutableKeys::get_full_mut2","value":"pub fn get_full_mut2<Q: ?Sized>(&mut Self, &Q)\n-> Option<(usize, &mut Self::Key, &mut Self::Value)> where Q: Hash +\nEquivalent<Self::Key>","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" Return item index, mutable reference to key and value\n","sig":null,"attributes":[{"value":"/ Return item index, mutable reference to key and value","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/mutable_keys.rs","byte_start":12042,"byte_end":12099,"line_start":23,"line_end":23,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/mutable_keys.rs","byte_start":12556,"byte_end":12563,"line_start":38,"line_end":38,"column_start":8,"column_end":15},"name":"retain2","qualname":"::mutable_keys::MutableKeys::retain2","value":"pub fn retain2<F>(&mut Self, F) where\nF: FnMut(&mut Self::Key, &mut Self::Value) -> bool","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" Scan through each key-value pair in the map and keep those where the\n closure `keep` returns `true`.","sig":null,"attributes":[{"value":"/ Scan through each key-value pair in the map and keep those where the","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/mutable_keys.rs","byte_start":12284,"byte_end":12356,"line_start":31,"line_end":31,"column_start":5,"column_end":77}},{"value":"/ closure `keep` returns `true`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/mutable_keys.rs","byte_start":12361,"byte_end":12395,"line_start":32,"line_end":32,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/mutable_keys.rs","byte_start":12400,"byte_end":12403,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ The elements are visited in order, and remaining elements keep their","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/mutable_keys.rs","byte_start":12408,"byte_end":12480,"line_start":34,"line_end":34,"column_start":5,"column_end":77}},{"value":"/ order.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/mutable_keys.rs","byte_start":12485,"byte_end":12495,"line_start":35,"line_end":35,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/mutable_keys.rs","byte_start":12500,"byte_end":12503,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/mutable_keys.rs","byte_start":12508,"byte_end":12548,"line_start":37,"line_end":37,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/mutable_keys.rs","byte_start":12855,"byte_end":12871,"line_start":45,"line_end":45,"column_start":8,"column_end":24},"name":"__private_marker","qualname":"::mutable_keys::MutableKeys::__private_marker","value":"pub fn __private_marker(&Self) -> PrivateMarker","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" This method is not useful in itself – it is there to “seal” the trait\n for external implementation, so that we can add methods without\n causing breaking changes.\n","sig":null,"attributes":[{"value":"/ This method is not useful in itself – it is there to “seal” the trait","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/mutable_keys.rs","byte_start":12662,"byte_end":12741,"line_start":42,"line_end":42,"column_start":5,"column_end":78}},{"value":"/ for external implementation, so that we can add methods without","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/mutable_keys.rs","byte_start":12746,"byte_end":12813,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ causing breaking changes.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/mutable_keys.rs","byte_start":12818,"byte_end":12847,"line_start":44,"line_end":44,"column_start":5,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":86},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"map","qualname":"::map","value":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":331},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":338},{"krate":0,"index":341},{"krate":0,"index":344},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":354},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":361},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":368},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":378},{"krate":0,"index":381},{"krate":0,"index":384},{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":397},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":407},{"krate":0,"index":410},{"krate":0,"index":413},{"krate":0,"index":419},{"krate":0,"index":425},{"krate":0,"index":435},{"krate":0,"index":440},{"krate":0,"index":445},{"krate":0,"index":467},{"krate":0,"index":537},{"krate":0,"index":550},{"krate":0,"index":555},{"krate":0,"index":560},{"krate":0,"index":563},{"krate":0,"index":567},{"krate":0,"index":570},{"krate":0,"index":574},{"krate":0,"index":578},{"krate":0,"index":582},{"krate":0,"index":586},{"krate":0,"index":589},{"krate":0,"index":593},{"krate":0,"index":596},{"krate":0,"index":600},{"krate":0,"index":605},{"krate":0,"index":610},{"krate":0,"index":613},{"krate":0,"index":617},{"krate":0,"index":620},{"krate":0,"index":624},{"krate":0,"index":628},{"krate":0,"index":633},{"krate":0,"index":638},{"krate":0,"index":641},{"krate":0,"index":645},{"krate":0,"index":648},{"krate":0,"index":652},{"krate":0,"index":656},{"krate":0,"index":659},{"krate":0,"index":663},{"krate":0,"index":666},{"krate":0,"index":670},{"krate":0,"index":675},{"krate":0,"index":680},{"krate":0,"index":683},{"krate":0,"index":687},{"krate":0,"index":690},{"krate":0,"index":694},{"krate":0,"index":698},{"krate":0,"index":703},{"krate":0,"index":708},{"krate":0,"index":711},{"krate":0,"index":715},{"krate":0,"index":718},{"krate":0,"index":722},{"krate":0,"index":726},{"krate":0,"index":729},{"krate":0,"index":733},{"krate":0,"index":736},{"krate":0,"index":740},{"krate":0,"index":745},{"krate":0,"index":749},{"krate":0,"index":752},{"krate":0,"index":756},{"krate":0,"index":759},{"krate":0,"index":763},{"krate":0,"index":771},{"krate":0,"index":779},{"krate":0,"index":786},{"krate":0,"index":793},{"krate":0,"index":799},{"krate":0,"index":805},{"krate":0,"index":810},{"krate":0,"index":816},{"krate":0,"index":823},{"krate":0,"index":830},{"krate":0,"index":838},{"krate":0,"index":843},{"krate":0,"index":852}],"decl_id":null,"docs":" `IndexMap` is a hash table where the iteration order of the key-value\n pairs is independent of the hash values of the keys.\n","sig":null,"attributes":[{"value":"/ `IndexMap` is a hash table where the iteration order of the key-value","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":14616,"byte_end":14689,"line_start":1,"line_end":1,"column_start":1,"column_end":74}},{"value":"/ pairs is independent of the hash values of the keys.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":14690,"byte_end":14746,"line_start":2,"line_end":2,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":133},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":95754,"byte_end":95767,"line_start":95,"line_end":95,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::map::core::raw::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139}],"decl_id":null,"docs":" A view into an occupied entry in a `IndexMap`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ A view into an occupied entry in a `IndexMap`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":95482,"byte_end":95532,"line_start":89,"line_end":89,"column_start":1,"column_end":51}},{"value":"/ It is part of the [`Entry`] enum.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":95533,"byte_end":95570,"line_start":90,"line_end":90,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":95571,"byte_end":95574,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":95575,"byte_end":95605,"line_start":92,"line_end":92,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":96498,"byte_end":96501,"line_start":112,"line_end":112,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the entry's key in the map.","sig":null,"attributes":[{"value":"/ Gets a reference to the entry's key in the map.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":96168,"byte_end":96219,"line_start":107,"line_end":107,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":96224,"byte_end":96227,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ Note that this is not the key that was used to find the entry. There may be an observable","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":96232,"byte_end":96325,"line_start":109,"line_end":109,"column_start":5,"column_end":98}},{"value":"/ difference if the key type has any distinguishing features outside of `Hash` and `Eq`, like","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":96330,"byte_end":96425,"line_start":110,"line_end":110,"column_start":5,"column_end":100}},{"value":"/ extra fields or the memory address of an allocation.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":96430,"byte_end":96486,"line_start":111,"line_end":111,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":96637,"byte_end":96640,"line_start":117,"line_end":117,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"pub fn get(&Self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the entry's value in the map.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the entry's value in the map.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":96572,"byte_end":96625,"line_start":116,"line_end":116,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":96906,"byte_end":96913,"line_start":125,"line_end":125,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the entry's value in the map.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the entry's value in the map.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":96713,"byte_end":96774,"line_start":121,"line_end":121,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":96779,"byte_end":96782,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ If you need a reference which may outlive the destruction of the","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":96787,"byte_end":96855,"line_start":123,"line_end":123,"column_start":5,"column_end":73}},{"value":"/ `Entry` value, see `into_mut`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":96860,"byte_end":96894,"line_start":124,"line_end":124,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":97325,"byte_end":97330,"line_start":139,"line_end":139,"column_start":12,"column_end":17},"name":"index","qualname":"<OccupiedEntry>::index","value":"pub fn index(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index of the key-value pair\n","sig":null,"attributes":[{"value":"/ Return the index of the key-value pair","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":97257,"byte_end":97299,"line_start":137,"line_end":137,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":97304,"byte_end":97313,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":97600,"byte_end":97608,"line_start":146,"line_end":146,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"pub fn into_mut(Self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Converts into a mutable reference to the entry's value in the map,\n with a lifetime bound to the map itself.\n","sig":null,"attributes":[{"value":"/ Converts into a mutable reference to the entry's value in the map,","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":97469,"byte_end":97539,"line_start":144,"line_end":144,"column_start":5,"column_end":75}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":97544,"byte_end":97588,"line_start":145,"line_end":145,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":98070,"byte_end":98087,"line_start":158,"line_end":158,"column_start":12,"column_end":29},"name":"swap_remove_entry","qualname":"<OccupiedEntry>::swap_remove_entry","value":"pub fn swap_remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key, value pair stored in the map for this entry","sig":null,"attributes":[{"value":"/ Remove and return the key, value pair stored in the map for this entry","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":97718,"byte_end":97792,"line_start":151,"line_end":151,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":97797,"byte_end":97800,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":97805,"byte_end":97877,"line_start":153,"line_end":153,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":97882,"byte_end":97945,"line_start":154,"line_end":154,"column_start":5,"column_end":68}},{"value":"/ the position of what used to be the last element!**","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":97950,"byte_end":98005,"line_start":155,"line_end":155,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":98010,"byte_end":98013,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":98018,"byte_end":98058,"line_start":157,"line_end":157,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":98737,"byte_end":98755,"line_start":172,"line_end":172,"column_start":12,"column_end":30},"name":"shift_remove_entry","qualname":"<OccupiedEntry>::shift_remove_entry","value":"pub fn shift_remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key, value pair stored in the map for this entry","sig":null,"attributes":[{"value":"/ Remove and return the key, value pair stored in the map for this entry","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":98391,"byte_end":98465,"line_start":165,"line_end":165,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":98470,"byte_end":98473,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":98478,"byte_end":98544,"line_start":167,"line_end":167,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":98549,"byte_end":98610,"line_start":168,"line_end":168,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":98615,"byte_end":98672,"line_start":169,"line_end":169,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":98677,"byte_end":98680,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":98685,"byte_end":98725,"line_start":171,"line_end":171,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":273},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":85449,"byte_end":85457,"line_start":455,"line_end":455,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::map::core::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":269},"children":[],"decl_id":null,"docs":" Existing slot with equivalent key.\n","sig":null,"attributes":[{"value":"/ Existing slot with equivalent key.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":85406,"byte_end":85444,"line_start":454,"line_end":454,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":276},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":85540,"byte_end":85546,"line_start":457,"line_end":457,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::map::core::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":269},"children":[],"decl_id":null,"docs":" Vacant slot (no equivalent key in the map).\n","sig":null,"attributes":[{"value":"/ Vacant slot (no equivalent key in the map).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":85488,"byte_end":85535,"line_start":456,"line_end":456,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":269},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":85384,"byte_end":85389,"line_start":453,"line_end":453,"column_start":10,"column_end":15},"name":"Entry","qualname":"::map::core::Entry","value":"pub enum Entry<'a, K, V> { Occupied(OccupiedEntry), Vacant(VacantEntry), }","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":276}],"decl_id":null,"docs":" Entry for an existing key-value pair or a vacant location to\n insert one.\n","sig":null,"attributes":[{"value":"/ Entry for an existing key-value pair or a vacant location to","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":85294,"byte_end":85358,"line_start":451,"line_end":451,"column_start":1,"column_end":65}},{"value":"/ insert one.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":85359,"byte_end":85374,"line_start":452,"line_end":452,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":85869,"byte_end":85878,"line_start":465,"line_end":465,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub fn or_insert(Self, V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Inserts the given default value in the entry if it is vacant and returns a mutable\n reference to it. Otherwise a mutable reference to an already existent value is returned.","sig":null,"attributes":[{"value":"/ Inserts the given default value in the entry if it is vacant and returns a mutable","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":85611,"byte_end":85697,"line_start":461,"line_end":461,"column_start":5,"column_end":91}},{"value":"/ reference to it. Otherwise a mutable reference to an already existent value is returned.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":85702,"byte_end":85794,"line_start":462,"line_end":462,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":85799,"byte_end":85802,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":85807,"byte_end":85857,"line_start":464,"line_end":464,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":86337,"byte_end":86351,"line_start":476,"line_end":476,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"pub fn or_insert_with<F>(Self, F) -> &'a mut V where F: FnOnce() -> V","parent":null,"children":[],"decl_id":null,"docs":" Inserts the result of the `call` function in the entry if it is vacant and returns a mutable\n reference to it. Otherwise a mutable reference to an already existent value is returned.","sig":null,"attributes":[{"value":"/ Inserts the result of the `call` function in the entry if it is vacant and returns a mutable","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":86069,"byte_end":86165,"line_start":472,"line_end":472,"column_start":5,"column_end":101}},{"value":"/ reference to it. Otherwise a mutable reference to an already existent value is returned.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":86170,"byte_end":86262,"line_start":473,"line_end":473,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":86267,"byte_end":86270,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":86275,"byte_end":86325,"line_start":475,"line_end":475,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":86892,"byte_end":86910,"line_start":491,"line_end":491,"column_start":12,"column_end":30},"name":"or_insert_with_key","qualname":"<Entry>::or_insert_with_key","value":"pub fn or_insert_with_key<F>(Self, F) -> &'a mut V where F: FnOnce(&K) -> V","parent":null,"children":[],"decl_id":null,"docs":" Inserts the result of the `call` function with a reference to the entry's key if it is\n vacant, and returns a mutable reference to the new value. Otherwise a mutable reference to\n an already existent value is returned.","sig":null,"attributes":[{"value":"/ Inserts the result of the `call` function with a reference to the entry's key if it is","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":86581,"byte_end":86671,"line_start":486,"line_end":486,"column_start":5,"column_end":95}},{"value":"/ vacant, and returns a mutable reference to the new value. Otherwise a mutable reference to","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":86676,"byte_end":86770,"line_start":487,"line_end":487,"column_start":5,"column_end":99}},{"value":"/ an already existent value is returned.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":86775,"byte_end":86817,"line_start":488,"line_end":488,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":86822,"byte_end":86825,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":86830,"byte_end":86880,"line_start":490,"line_end":490,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":87366,"byte_end":87369,"line_start":506,"line_end":506,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the entry's key, either within the map if occupied,\n or else the new key that was used to find the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the entry's key, either within the map if occupied,","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":87218,"byte_end":87293,"line_start":504,"line_end":504,"column_start":5,"column_end":80}},{"value":"/ or else the new key that was used to find the entry.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":87298,"byte_end":87354,"line_start":505,"line_end":505,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":87621,"byte_end":87626,"line_start":514,"line_end":514,"column_start":12,"column_end":17},"name":"index","qualname":"<Entry>::index","value":"pub fn index(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index where the key-value pair exists or will be inserted.\n","sig":null,"attributes":[{"value":"/ Return the index where the key-value pair exists or will be inserted.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":87536,"byte_end":87609,"line_start":513,"line_end":513,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":87853,"byte_end":87863,"line_start":522,"line_end":522,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<Entry>::and_modify","value":"pub fn and_modify<F>(Self, F) -> Self where F: FnOnce(&mut V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Modifies the entry if it is occupied.\n","sig":null,"attributes":[{"value":"/ Modifies the entry if it is occupied.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":87800,"byte_end":87841,"line_start":521,"line_end":521,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":88375,"byte_end":88385,"line_start":539,"line_end":539,"column_start":12,"column_end":22},"name":"or_default","qualname":"<Entry>::or_default","value":"pub fn or_default(Self) -> &'a mut V where V: Default","parent":null,"children":[],"decl_id":null,"docs":" Inserts a default-constructed value in the entry if it is vacant and returns a mutable\n reference to it. Otherwise a mutable reference to an already existent value is returned.","sig":null,"attributes":[{"value":"/ Inserts a default-constructed value in the entry if it is vacant and returns a mutable","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":88113,"byte_end":88203,"line_start":535,"line_end":535,"column_start":5,"column_end":95}},{"value":"/ reference to it. Otherwise a mutable reference to an already existent value is returned.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":88208,"byte_end":88300,"line_start":536,"line_end":536,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":88305,"byte_end":88308,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":88313,"byte_end":88363,"line_start":538,"line_end":538,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":89180,"byte_end":89186,"line_start":564,"line_end":564,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"pub fn insert(&mut Self, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry to `value`, and returns the entry's old value.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry to `value`, and returns the entry's old value.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":89090,"byte_end":89168,"line_start":563,"line_end":563,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":89429,"byte_end":89435,"line_start":571,"line_end":571,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"pub fn remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Remove the key, value pair stored in the map for this entry, and return the value.","sig":null,"attributes":[{"value":"/ Remove the key, value pair stored in the map for this entry, and return the value.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":89265,"byte_end":89351,"line_start":568,"line_end":568,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":89356,"byte_end":89359,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_remove()`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":89364,"byte_end":89417,"line_start":570,"line_end":570,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":89851,"byte_end":89862,"line_start":582,"line_end":582,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<OccupiedEntry>::swap_remove","value":"pub fn swap_remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Remove the key, value pair stored in the map for this entry, and return the value.","sig":null,"attributes":[{"value":"/ Remove the key, value pair stored in the map for this entry, and return the value.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":89487,"byte_end":89573,"line_start":575,"line_end":575,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":89578,"byte_end":89581,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":89586,"byte_end":89658,"line_start":577,"line_end":577,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":89663,"byte_end":89726,"line_start":578,"line_end":578,"column_start":5,"column_end":68}},{"value":"/ the position of what used to be the last element!**","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":89731,"byte_end":89786,"line_start":579,"line_end":579,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":89791,"byte_end":89794,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":89799,"byte_end":89839,"line_start":581,"line_end":581,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":90280,"byte_end":90292,"line_start":593,"line_end":593,"column_start":12,"column_end":24},"name":"shift_remove","qualname":"<OccupiedEntry>::shift_remove","value":"pub fn shift_remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Remove the key, value pair stored in the map for this entry, and return the value.","sig":null,"attributes":[{"value":"/ Remove the key, value pair stored in the map for this entry, and return the value.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":89922,"byte_end":90008,"line_start":586,"line_end":586,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":90013,"byte_end":90016,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":90021,"byte_end":90087,"line_start":588,"line_end":588,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":90092,"byte_end":90153,"line_start":589,"line_end":589,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":90158,"byte_end":90215,"line_start":590,"line_end":590,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":90220,"byte_end":90223,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":90228,"byte_end":90268,"line_start":592,"line_end":592,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":90511,"byte_end":90523,"line_start":600,"line_end":600,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<OccupiedEntry>::remove_entry","value":"pub fn remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key, value pair stored in the map for this entry","sig":null,"attributes":[{"value":"/ Remove and return the key, value pair stored in the map for this entry","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":90353,"byte_end":90427,"line_start":597,"line_end":597,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":90432,"byte_end":90435,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_remove_entry()`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":90440,"byte_end":90499,"line_start":599,"line_end":599,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":312},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":91014,"byte_end":91025,"line_start":618,"line_end":618,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::map::core::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318}],"decl_id":null,"docs":" A view into a vacant entry in a `IndexMap`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ A view into a vacant entry in a `IndexMap`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":90882,"byte_end":90929,"line_start":614,"line_end":614,"column_start":1,"column_end":48}},{"value":"/ It is part of the [`Entry`] enum.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":90930,"byte_end":90967,"line_start":615,"line_end":615,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":90968,"byte_end":90971,"line_start":616,"line_end":616,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":90972,"byte_end":91002,"line_start":617,"line_end":617,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":91230,"byte_end":91233,"line_start":626,"line_end":626,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key that was used to find the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the key that was used to find the entry.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":91154,"byte_end":91218,"line_start":625,"line_end":625,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":91347,"byte_end":91355,"line_start":631,"line_end":631,"column_start":12,"column_end":20},"name":"into_key","qualname":"<VacantEntry>::into_key","value":"pub fn into_key(Self) -> K","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the key, leaving the entry vacant.\n","sig":null,"attributes":[{"value":"/ Takes ownership of the key, leaving the entry vacant.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":91278,"byte_end":91335,"line_start":630,"line_end":630,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":91472,"byte_end":91477,"line_start":636,"line_end":636,"column_start":12,"column_end":17},"name":"index","qualname":"<VacantEntry>::index","value":"pub fn index(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index where the key-value pair will be inserted.\n","sig":null,"attributes":[{"value":"/ Return the index where the key-value pair will be inserted.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":91397,"byte_end":91460,"line_start":635,"line_end":635,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":91657,"byte_end":91663,"line_start":642,"line_end":642,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"pub fn insert(Self, V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Inserts the entry's key and the given value into the map, and returns a mutable reference\n to the value.\n","sig":null,"attributes":[{"value":"/ Inserts the entry's key and the given value into the map, and returns a mutable reference","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":91530,"byte_end":91623,"line_start":640,"line_end":640,"column_start":5,"column_end":98}},{"value":"/ to the value.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":91628,"byte_end":91645,"line_start":641,"line_end":641,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":413},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":16836,"byte_end":16844,"line_start":71,"line_end":71,"column_start":12,"column_end":20},"name":"IndexMap","qualname":"::map::IndexMap","value":"IndexMap {  }","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":418}],"decl_id":null,"docs":" A hash table where the iteration order of the key-value pairs is independent\n of the hash values of the keys.","sig":null,"attributes":[{"value":"/ A hash table where the iteration order of the key-value pairs is independent","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":15400,"byte_end":15480,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/ of the hash values of the keys.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":15481,"byte_end":15516,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":15517,"byte_end":15520,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ The interface is closely compatible with the standard `HashMap`, but also","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":15521,"byte_end":15598,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/ has additional features.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":15599,"byte_end":15627,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":15628,"byte_end":15631,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Order","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":15632,"byte_end":15643,"line_start":35,"line_end":35,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":15644,"byte_end":15647,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ The key-value pairs have a consistent order that is determined by","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":15648,"byte_end":15717,"line_start":37,"line_end":37,"column_start":1,"column_end":70}},{"value":"/ the sequence of insertion and removal calls on the map. The order does","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":15718,"byte_end":15792,"line_start":38,"line_end":38,"column_start":1,"column_end":75}},{"value":"/ not depend on the keys or the hash function at all.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":15793,"byte_end":15848,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":15849,"byte_end":15852,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ All iterators traverse the map in *the order*.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":15853,"byte_end":15903,"line_start":41,"line_end":41,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":15904,"byte_end":15907,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ The insertion order is preserved, with **notable exceptions** like the","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":15908,"byte_end":15982,"line_start":43,"line_end":43,"column_start":1,"column_end":75}},{"value":"/ `.remove()` or `.swap_remove()` methods. Methods such as `.sort_by()` of","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":15983,"byte_end":16059,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"/ course result in a new order, depending on the sorting order.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":16060,"byte_end":16125,"line_start":45,"line_end":45,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":16126,"byte_end":16129,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Indices","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":16130,"byte_end":16143,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":16144,"byte_end":16147,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The key-value pairs are indexed in a compact range without holes in the","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":16148,"byte_end":16223,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ range `0..self.len()`. For example, the method `.get_full` looks up the","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":16224,"byte_end":16299,"line_start":50,"line_end":50,"column_start":1,"column_end":76}},{"value":"/ index for a key, and the method `.get_index` looks up the key-value pair by","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":16300,"byte_end":16379,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ index.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":16380,"byte_end":16390,"line_start":52,"line_end":52,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":16391,"byte_end":16394,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":16395,"byte_end":16409,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":16410,"byte_end":16413,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":16414,"byte_end":16421,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ use indexmap::IndexMap;","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":16422,"byte_end":16449,"line_start":57,"line_end":57,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":16450,"byte_end":16453,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // count the frequency of each letter in a sentence.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":16454,"byte_end":16510,"line_start":59,"line_end":59,"column_start":1,"column_end":57}},{"value":"/ let mut letters = IndexMap::new();","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":16511,"byte_end":16549,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/ for ch in \"a short treatise on fungi\".chars() {","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":16550,"byte_end":16601,"line_start":61,"line_end":61,"column_start":1,"column_end":52}},{"value":"/     *letters.entry(ch).or_insert(0) += 1;","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":16602,"byte_end":16647,"line_start":62,"line_end":62,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":16648,"byte_end":16653,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":16654,"byte_end":16657,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(letters[&'s'], 2);","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":16658,"byte_end":16691,"line_start":65,"line_end":65,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(letters[&'t'], 3);","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":16692,"byte_end":16725,"line_start":66,"line_end":66,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(letters[&'u'], 1);","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":16726,"byte_end":16759,"line_start":67,"line_end":67,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(letters.get(&'y'), None);","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":16760,"byte_end":16800,"line_start":68,"line_end":68,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":16801,"byte_end":16808,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"cfg(has_std)","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":16809,"byte_end":16824,"line_start":70,"line_end":70,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":18572,"byte_end":18575,"line_start":147,"line_end":147,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexMap<K, V>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map. (Does not allocate.)\n","sig":null,"attributes":[{"value":"/ Create a new map. (Does not allocate.)","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":18504,"byte_end":18546,"line_start":145,"line_end":145,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":18551,"byte_end":18560,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":18802,"byte_end":18815,"line_start":156,"line_end":156,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<IndexMap<K, V>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map with capacity for `n` key-value pairs. (Does not\n allocate if `n` is zero.)","sig":null,"attributes":[{"value":"/ Create a new map with capacity for `n` key-value pairs. (Does not","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":18630,"byte_end":18699,"line_start":151,"line_end":151,"column_start":5,"column_end":74}},{"value":"/ allocate if `n` is zero.)","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":18704,"byte_end":18733,"line_start":152,"line_end":152,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":18738,"byte_end":18741,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":18746,"byte_end":18776,"line_start":154,"line_end":154,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":18781,"byte_end":18790,"line_start":155,"line_end":155,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":19113,"byte_end":19137,"line_start":167,"line_end":167,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<IndexMap<K, V, S>>::with_capacity_and_hasher","value":"pub fn with_capacity_and_hasher(usize, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map with capacity for `n` key-value pairs. (Does not\n allocate if `n` is zero.)","sig":null,"attributes":[{"value":"/ Create a new map with capacity for `n` key-value pairs. (Does not","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":18941,"byte_end":19010,"line_start":162,"line_end":162,"column_start":5,"column_end":74}},{"value":"/ allocate if `n` is zero.)","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":19015,"byte_end":19044,"line_start":163,"line_end":163,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":19049,"byte_end":19052,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":19057,"byte_end":19087,"line_start":165,"line_end":165,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":19092,"byte_end":19101,"line_start":166,"line_end":166,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":19549,"byte_end":19560,"line_start":182,"line_end":182,"column_start":18,"column_end":29},"name":"with_hasher","qualname":"<IndexMap<K, V, S>>::with_hasher","value":"pub const fn with_hasher(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map with `hash_builder`.","sig":null,"attributes":[{"value":"/ Create a new map with `hash_builder`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":19398,"byte_end":19439,"line_start":178,"line_end":178,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":19444,"byte_end":19447,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ This function is `const`, so it","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":19452,"byte_end":19487,"line_start":180,"line_end":180,"column_start":5,"column_end":40}},{"value":"/ can be called in `static` contexts.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":19492,"byte_end":19531,"line_start":181,"line_end":181,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":19735,"byte_end":19743,"line_start":190,"line_end":190,"column_start":12,"column_end":20},"name":"capacity","qualname":"<IndexMap<K, V, S>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time.\n","sig":null,"attributes":[{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":19693,"byte_end":19723,"line_start":189,"line_end":189,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":19864,"byte_end":19870,"line_start":195,"line_end":195,"column_start":12,"column_end":18},"name":"hasher","qualname":"<IndexMap<K, V, S>>::hasher","value":"pub fn hasher(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the map's `BuildHasher`.\n","sig":null,"attributes":[{"value":"/ Return a reference to the map's `BuildHasher`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":19802,"byte_end":19852,"line_start":194,"line_end":194,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":20045,"byte_end":20048,"line_start":203,"line_end":203,"column_start":12,"column_end":15},"name":"len","qualname":"<IndexMap<K, V, S>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of key-value pairs in the map.","sig":null,"attributes":[{"value":"/ Return the number of key-value pairs in the map.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":19924,"byte_end":19976,"line_start":199,"line_end":199,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":19981,"byte_end":19984,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":19989,"byte_end":20019,"line_start":201,"line_end":201,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":20024,"byte_end":20033,"line_start":202,"line_end":202,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":20220,"byte_end":20228,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<IndexMap<K, V, S>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns true if the map contains no elements.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":20102,"byte_end":20151,"line_start":207,"line_end":207,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":20156,"byte_end":20159,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":20164,"byte_end":20194,"line_start":209,"line_end":209,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":20199,"byte_end":20208,"line_start":210,"line_end":210,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":20367,"byte_end":20371,"line_start":216,"line_end":216,"column_start":12,"column_end":16},"name":"iter","qualname":"<IndexMap<K, V, S>>::iter","value":"pub fn iter(&Self) -> Iter<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the key-value pairs of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the key-value pairs of the map, in their order","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":20281,"byte_end":20355,"line_start":215,"line_end":215,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":20565,"byte_end":20573,"line_start":223,"line_end":223,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<IndexMap<K, V, S>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the key-value pairs of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the key-value pairs of the map, in their order","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":20479,"byte_end":20553,"line_start":222,"line_end":222,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":20774,"byte_end":20778,"line_start":230,"line_end":230,"column_start":12,"column_end":16},"name":"keys","qualname":"<IndexMap<K, V, S>>::keys","value":"pub fn keys(&Self) -> Keys<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the keys of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the keys of the map, in their order","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":20699,"byte_end":20762,"line_start":229,"line_end":229,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":20968,"byte_end":20977,"line_start":237,"line_end":237,"column_start":12,"column_end":21},"name":"into_keys","qualname":"<IndexMap<K, V, S>>::into_keys","value":"pub fn into_keys(Self) -> IntoKeys<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an owning iterator over the keys of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an owning iterator over the keys of the map, in their order","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":20886,"byte_end":20956,"line_start":236,"line_end":236,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":21172,"byte_end":21178,"line_start":244,"line_end":244,"column_start":12,"column_end":18},"name":"values","qualname":"<IndexMap<K, V, S>>::values","value":"pub fn values(&Self) -> Values<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the values of the map, in their order","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":21095,"byte_end":21160,"line_start":243,"line_end":243,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":21397,"byte_end":21407,"line_start":252,"line_end":252,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<IndexMap<K, V, S>>::values_mut","value":"pub fn values_mut(&mut Self) -> ValuesMut<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over mutable references to the values of the map,\n in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over mutable references to the values of the map,","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":21290,"byte_end":21362,"line_start":250,"line_end":250,"column_start":5,"column_end":77}},{"value":"/ in their order","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":21367,"byte_end":21385,"line_start":251,"line_end":251,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":21621,"byte_end":21632,"line_start":259,"line_end":259,"column_start":12,"column_end":23},"name":"into_values","qualname":"<IndexMap<K, V, S>>::into_values","value":"pub fn into_values(Self) -> IntoValues<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an owning iterator over the values of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an owning iterator over the values of the map, in their order","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":21537,"byte_end":21609,"line_start":258,"line_end":258,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":21882,"byte_end":21887,"line_start":268,"line_end":268,"column_start":12,"column_end":17},"name":"clear","qualname":"<IndexMap<K, V, S>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove all key-value pairs in the map, while preserving its capacity.","sig":null,"attributes":[{"value":"/ Remove all key-value pairs in the map, while preserving its capacity.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":21754,"byte_end":21827,"line_start":265,"line_end":265,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":21832,"byte_end":21835,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":21840,"byte_end":21870,"line_start":267,"line_end":267,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":22115,"byte_end":22123,"line_start":275,"line_end":275,"column_start":12,"column_end":20},"name":"truncate","qualname":"<IndexMap<K, V, S>>::truncate","value":"pub fn truncate(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shortens the map, keeping the first `len` elements and dropping the rest.","sig":null,"attributes":[{"value":"/ Shortens the map, keeping the first `len` elements and dropping the rest.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":21939,"byte_end":22016,"line_start":272,"line_end":272,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":22021,"byte_end":22024,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ If `len` is greater than the map's current length, this has no effect.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":22029,"byte_end":22103,"line_start":274,"line_end":274,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":22875,"byte_end":22880,"line_start":292,"line_end":292,"column_start":12,"column_end":17},"name":"drain","qualname":"<IndexMap<K, V, S>>::drain","value":"pub fn drain<R>(&mut Self, R) -> Drain<, K, V> where R: RangeBounds<usize>","parent":null,"children":[],"decl_id":null,"docs":" Clears the `IndexMap` in the given index range, returning those\n key-value pairs as a drain iterator.","sig":null,"attributes":[{"value":"/ Clears the `IndexMap` in the given index range, returning those","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":22193,"byte_end":22260,"line_start":279,"line_end":279,"column_start":5,"column_end":72}},{"value":"/ key-value pairs as a drain iterator.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":22265,"byte_end":22305,"line_start":280,"line_end":280,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":22310,"byte_end":22313,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ The range may be any type that implements `RangeBounds<usize>`,","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":22318,"byte_end":22385,"line_start":282,"line_end":282,"column_start":5,"column_end":72}},{"value":"/ including all of the `std::ops::Range*` types, or even a tuple pair of","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":22390,"byte_end":22464,"line_start":283,"line_end":283,"column_start":5,"column_end":79}},{"value":"/ `Bound` start and end values. To drain the map entirely, use `RangeFull`","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":22469,"byte_end":22545,"line_start":284,"line_end":284,"column_start":5,"column_end":81}},{"value":"/ like `map.drain(..)`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":22550,"byte_end":22575,"line_start":285,"line_end":285,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":22580,"byte_end":22583,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ This shifts down all entries following the drained range to fill the","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":22588,"byte_end":22660,"line_start":287,"line_end":287,"column_start":5,"column_end":77}},{"value":"/ gap, and keeps the allocated memory for reuse.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":22665,"byte_end":22715,"line_start":288,"line_end":288,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":22720,"byte_end":22723,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if the starting point is greater than the end point or if","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":22728,"byte_end":22802,"line_start":290,"line_end":290,"column_start":5,"column_end":79}},{"value":"/ the end point is greater than the length of the map.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":22807,"byte_end":22863,"line_start":291,"line_end":291,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":23390,"byte_end":23399,"line_start":308,"line_end":308,"column_start":12,"column_end":21},"name":"split_off","qualname":"<IndexMap<K, V, S>>::split_off","value":"pub fn split_off(&mut Self, usize) -> Self where S: Clone","parent":null,"children":[],"decl_id":null,"docs":" Splits the collection into two at the given index.","sig":null,"attributes":[{"value":"/ Splits the collection into two at the given index.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":23050,"byte_end":23104,"line_start":301,"line_end":301,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":23109,"byte_end":23112,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ Returns a newly allocated map containing the elements in the range","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":23117,"byte_end":23187,"line_start":303,"line_end":303,"column_start":5,"column_end":75}},{"value":"/ `[at, len)`. After the call, the original map will be left containing","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":23192,"byte_end":23265,"line_start":304,"line_end":304,"column_start":5,"column_end":78}},{"value":"/ the elements `[0, at)` with its previous capacity unchanged.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":23270,"byte_end":23334,"line_start":305,"line_end":305,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":23339,"byte_end":23342,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if `at > len`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":23347,"byte_end":23378,"line_start":307,"line_end":307,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":23790,"byte_end":23797,"line_start":327,"line_end":327,"column_start":12,"column_end":19},"name":"reserve","qualname":"<IndexMap<K, V, S>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserve capacity for `additional` more key-value pairs.","sig":null,"attributes":[{"value":"/ Reserve capacity for `additional` more key-value pairs.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":23676,"byte_end":23735,"line_start":324,"line_end":324,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":23740,"byte_end":23743,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":23748,"byte_end":23778,"line_start":326,"line_end":326,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":23990,"byte_end":24003,"line_start":334,"line_end":334,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<IndexMap<K, V, S>>::shrink_to_fit","value":"pub fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the capacity of the map as much as possible.","sig":null,"attributes":[{"value":"/ Shrink the capacity of the map as much as possible.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":23880,"byte_end":23935,"line_start":331,"line_end":331,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":23940,"byte_end":23943,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":23948,"byte_end":23978,"line_start":333,"line_end":333,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":24902,"byte_end":24908,"line_start":357,"line_end":357,"column_start":12,"column_end":18},"name":"insert","qualname":"<IndexMap<K, V, S>>::insert","value":"pub fn insert(&mut Self, K, V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Insert a key-value pair in the map.","sig":null,"attributes":[{"value":"/ Insert a key-value pair in the map.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":24250,"byte_end":24289,"line_start":344,"line_end":344,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":24294,"byte_end":24297,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ If an equivalent key already exists in the map: the key remains and","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":24302,"byte_end":24373,"line_start":346,"line_end":346,"column_start":5,"column_end":76}},{"value":"/ retains in its place in the order, its corresponding value is updated","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":24378,"byte_end":24451,"line_start":347,"line_end":347,"column_start":5,"column_end":78}},{"value":"/ with `value` and the older value is returned inside `Some(_)`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":24456,"byte_end":24522,"line_start":348,"line_end":348,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":24527,"byte_end":24530,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ If no equivalent key existed in the map: the new key-value pair is","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":24535,"byte_end":24605,"line_start":350,"line_end":350,"column_start":5,"column_end":75}},{"value":"/ inserted, last in order, and `None` is returned.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":24610,"byte_end":24662,"line_start":351,"line_end":351,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":24667,"byte_end":24670,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":24675,"byte_end":24725,"line_start":353,"line_end":353,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":24730,"byte_end":24733,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ See also [`entry`](#method.entry) if you you want to insert *or* modify","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":24738,"byte_end":24813,"line_start":355,"line_end":355,"column_start":5,"column_end":80}},{"value":"/ or if you need to get the index of the corresponding key-value pair.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":24818,"byte_end":24890,"line_start":356,"line_end":356,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":25694,"byte_end":25705,"line_start":374,"line_end":374,"column_start":12,"column_end":23},"name":"insert_full","qualname":"<IndexMap<K, V, S>>::insert_full","value":"pub fn insert_full(&mut Self, K, V) -> (usize, Option<V>)","parent":null,"children":[],"decl_id":null,"docs":" Insert a key-value pair in the map, and get their index.","sig":null,"attributes":[{"value":"/ Insert a key-value pair in the map, and get their index.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":25003,"byte_end":25063,"line_start":361,"line_end":361,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":25068,"byte_end":25071,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ If an equivalent key already exists in the map: the key remains and","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":25076,"byte_end":25147,"line_start":363,"line_end":363,"column_start":5,"column_end":76}},{"value":"/ retains in its place in the order, its corresponding value is updated","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":25152,"byte_end":25225,"line_start":364,"line_end":364,"column_start":5,"column_end":78}},{"value":"/ with `value` and the older value is returned inside `(index, Some(_))`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":25230,"byte_end":25305,"line_start":365,"line_end":365,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":25310,"byte_end":25313,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ If no equivalent key existed in the map: the new key-value pair is","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":25318,"byte_end":25388,"line_start":367,"line_end":367,"column_start":5,"column_end":75}},{"value":"/ inserted, last in order, and `(index, None)` is returned.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":25393,"byte_end":25454,"line_start":368,"line_end":368,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":25459,"byte_end":25462,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":25467,"byte_end":25517,"line_start":370,"line_end":370,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":25522,"byte_end":25525,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ See also [`entry`](#method.entry) if you you want to insert *or* modify","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":25530,"byte_end":25605,"line_start":372,"line_end":372,"column_start":5,"column_end":80}},{"value":"/ or if you need to get the index of the corresponding key-value pair.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":25610,"byte_end":25682,"line_start":373,"line_end":373,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":26037,"byte_end":26042,"line_start":383,"line_end":383,"column_start":12,"column_end":17},"name":"entry","qualname":"<IndexMap<K, V, S>>::entry","value":"pub fn entry(&mut Self, K) -> Entry<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Get the given key’s corresponding entry in the map for insertion and/or\n in-place manipulation.","sig":null,"attributes":[{"value":"/ Get the given key’s corresponding entry in the map for insertion and/or","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":25854,"byte_end":25931,"line_start":379,"line_end":379,"column_start":5,"column_end":80}},{"value":"/ in-place manipulation.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":25936,"byte_end":25962,"line_start":380,"line_end":380,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":25967,"byte_end":25970,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":25975,"byte_end":26025,"line_start":382,"line_end":382,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":26292,"byte_end":26304,"line_start":391,"line_end":391,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<IndexMap<K, V, S>>::contains_key","value":"pub fn contains_key<Q: ?Sized>(&Self, &Q) -> bool where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if an equivalent to `key` exists in the map.","sig":null,"attributes":[{"value":"/ Return `true` if an equivalent to `key` exists in the map.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":26165,"byte_end":26227,"line_start":388,"line_end":388,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":26232,"byte_end":26235,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":26240,"byte_end":26280,"line_start":390,"line_end":390,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":26598,"byte_end":26601,"line_start":402,"line_end":402,"column_start":12,"column_end":15},"name":"get","qualname":"<IndexMap<K, V, S>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&V> where Q: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the value stored for `key`, if it is present,\n else `None`.","sig":null,"attributes":[{"value":"/ Return a reference to the value stored for `key`, if it is present,","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":26441,"byte_end":26512,"line_start":398,"line_end":398,"column_start":5,"column_end":76}},{"value":"/ else `None`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":26517,"byte_end":26533,"line_start":399,"line_end":399,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":26538,"byte_end":26541,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":26546,"byte_end":26586,"line_start":401,"line_end":401,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":27040,"byte_end":27053,"line_start":418,"line_end":418,"column_start":12,"column_end":25},"name":"get_key_value","qualname":"<IndexMap<K, V, S>>::get_key_value","value":"pub fn get_key_value<Q: ?Sized>(&Self, &Q) -> Option<(&K, &V)> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Return references to the key-value pair stored for `key`,\n if it is present, else `None`.","sig":null,"attributes":[{"value":"/ Return references to the key-value pair stored for `key`,","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":26875,"byte_end":26936,"line_start":414,"line_end":414,"column_start":5,"column_end":66}},{"value":"/ if it is present, else `None`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":26941,"byte_end":26975,"line_start":415,"line_end":415,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":26980,"byte_end":26983,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":26988,"byte_end":27028,"line_start":417,"line_end":417,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":27395,"byte_end":27403,"line_start":431,"line_end":431,"column_start":12,"column_end":20},"name":"get_full","qualname":"<IndexMap<K, V, S>>::get_full","value":"pub fn get_full<Q: ?Sized>(&Self, &Q) -> Option<(usize, &K, &V)> where\nQ: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Return item index, key and value\n","sig":null,"attributes":[{"value":"/ Return item index, key and value","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":27347,"byte_end":27383,"line_start":430,"line_end":430,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":27818,"byte_end":27830,"line_start":446,"line_end":446,"column_start":12,"column_end":24},"name":"get_index_of","qualname":"<IndexMap<K, V, S>>::get_index_of","value":"pub fn get_index_of<Q: ?Sized>(&Self, &Q) -> Option<usize> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Return item index, if it exists in the map","sig":null,"attributes":[{"value":"/ Return item index, if it exists in the map","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":27707,"byte_end":27753,"line_start":443,"line_end":443,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":27758,"byte_end":27761,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":27766,"byte_end":27806,"line_start":445,"line_end":445,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":28100,"byte_end":28107,"line_start":458,"line_end":458,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<IndexMap<K, V, S>>::get_mut","value":"pub fn get_mut<Q: ?Sized>(&mut Self, &Q) -> Option<&mut V> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":28408,"byte_end":28420,"line_start":470,"line_end":470,"column_start":12,"column_end":24},"name":"get_full_mut","qualname":"<IndexMap<K, V, S>>::get_full_mut","value":"pub fn get_full_mut<Q: ?Sized>(&mut Self, &Q) -> Option<(usize, &K, &mut V)>\nwhere Q: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":29452,"byte_end":29458,"line_start":505,"line_end":505,"column_start":12,"column_end":18},"name":"remove","qualname":"<IndexMap<K, V, S>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return\n its value.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":29131,"byte_end":29191,"line_start":497,"line_end":497,"column_start":5,"column_end":65}},{"value":"/ its value.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":29196,"byte_end":29210,"line_start":498,"line_end":498,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":29215,"byte_end":29218,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_remove(key)`, if you need to","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":29223,"byte_end":29294,"line_start":500,"line_end":500,"column_start":5,"column_end":76}},{"value":"/ preserve the order of the keys in the map, use `.shift_remove(key)`","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":29299,"byte_end":29370,"line_start":501,"line_end":501,"column_start":5,"column_end":76}},{"value":"/ instead.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":29375,"byte_end":29387,"line_start":502,"line_end":502,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":29392,"byte_end":29395,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":29400,"byte_end":29440,"line_start":504,"line_end":504,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":29908,"byte_end":29920,"line_start":519,"line_end":519,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<IndexMap<K, V, S>>::remove_entry","value":"pub fn remove_entry<Q: ?Sized>(&mut Self, &Q) -> Option<(K, V)> where\nQ: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key-value pair equivalent to `key`.","sig":null,"attributes":[{"value":"/ Remove and return the key-value pair equivalent to `key`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":29593,"byte_end":29654,"line_start":512,"line_end":512,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":29659,"byte_end":29662,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_remove_entry(key)`, if you need to","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":29667,"byte_end":29744,"line_start":514,"line_end":514,"column_start":5,"column_end":82}},{"value":"/ preserve the order of the keys in the map, use `.shift_remove_entry(key)`","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":29749,"byte_end":29826,"line_start":515,"line_end":515,"column_start":5,"column_end":82}},{"value":"/ instead.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":29831,"byte_end":29843,"line_start":516,"line_end":516,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":29848,"byte_end":29851,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":29856,"byte_end":29896,"line_start":518,"line_end":518,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":30477,"byte_end":30488,"line_start":536,"line_end":536,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<IndexMap<K, V, S>>::swap_remove","value":"pub fn swap_remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return\n its value.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":30066,"byte_end":30126,"line_start":526,"line_end":526,"column_start":5,"column_end":65}},{"value":"/ its value.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":30131,"byte_end":30145,"line_start":527,"line_end":527,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":30150,"byte_end":30153,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":30158,"byte_end":30230,"line_start":529,"line_end":529,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":30235,"byte_end":30298,"line_start":530,"line_end":530,"column_start":5,"column_end":68}},{"value":"/ the position of what used to be the last element!**","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":30303,"byte_end":30358,"line_start":531,"line_end":531,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":30363,"byte_end":30366,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":30371,"byte_end":30412,"line_start":533,"line_end":533,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":30417,"byte_end":30420,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":30425,"byte_end":30465,"line_start":535,"line_end":535,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":31032,"byte_end":31049,"line_start":552,"line_end":552,"column_start":12,"column_end":29},"name":"swap_remove_entry","qualname":"<IndexMap<K, V, S>>::swap_remove_entry","value":"pub fn swap_remove_entry<Q: ?Sized>(&mut Self, &Q) -> Option<(K, V)> where\nQ: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key-value pair equivalent to `key`.","sig":null,"attributes":[{"value":"/ Remove and return the key-value pair equivalent to `key`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":30639,"byte_end":30700,"line_start":543,"line_end":543,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":30705,"byte_end":30708,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":30713,"byte_end":30785,"line_start":545,"line_end":545,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":30790,"byte_end":30853,"line_start":546,"line_end":546,"column_start":5,"column_end":68}},{"value":"/ the position of what used to be the last element!**","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":30858,"byte_end":30913,"line_start":547,"line_end":547,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":30918,"byte_end":30921,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":30926,"byte_end":30967,"line_start":549,"line_end":549,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":30972,"byte_end":30975,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":30980,"byte_end":31020,"line_start":551,"line_end":551,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":31720,"byte_end":31736,"line_start":572,"line_end":572,"column_start":12,"column_end":28},"name":"swap_remove_full","qualname":"<IndexMap<K, V, S>>::swap_remove_full","value":"pub fn swap_remove_full<Q: ?Sized>(&mut Self, &Q) -> Option<(usize, K, V)>\nwhere Q: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return it and\n the index it had.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return it and","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":31295,"byte_end":31362,"line_start":562,"line_end":562,"column_start":5,"column_end":72}},{"value":"/ the index it had.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":31367,"byte_end":31388,"line_start":563,"line_end":563,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":31393,"byte_end":31396,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":31401,"byte_end":31473,"line_start":565,"line_end":565,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":31478,"byte_end":31541,"line_start":566,"line_end":566,"column_start":5,"column_end":68}},{"value":"/ the position of what used to be the last element!**","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":31546,"byte_end":31601,"line_start":567,"line_end":567,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":31606,"byte_end":31609,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":31614,"byte_end":31655,"line_start":569,"line_end":569,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":31660,"byte_end":31663,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":31668,"byte_end":31708,"line_start":571,"line_end":571,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":32403,"byte_end":32415,"line_start":593,"line_end":593,"column_start":12,"column_end":24},"name":"shift_remove","qualname":"<IndexMap<K, V, S>>::shift_remove","value":"pub fn shift_remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return\n its value.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":31998,"byte_end":32058,"line_start":583,"line_end":583,"column_start":5,"column_end":65}},{"value":"/ its value.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":32063,"byte_end":32077,"line_start":584,"line_end":584,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":32082,"byte_end":32085,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":32090,"byte_end":32156,"line_start":586,"line_end":586,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":32161,"byte_end":32222,"line_start":587,"line_end":587,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":32227,"byte_end":32284,"line_start":588,"line_end":588,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":32289,"byte_end":32292,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":32297,"byte_end":32338,"line_start":590,"line_end":590,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":32343,"byte_end":32346,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":32351,"byte_end":32391,"line_start":592,"line_end":592,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":32954,"byte_end":32972,"line_start":609,"line_end":609,"column_start":12,"column_end":30},"name":"shift_remove_entry","qualname":"<IndexMap<K, V, S>>::shift_remove_entry","value":"pub fn shift_remove_entry<Q: ?Sized>(&mut Self, &Q) -> Option<(K, V)> where\nQ: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key-value pair equivalent to `key`.","sig":null,"attributes":[{"value":"/ Remove and return the key-value pair equivalent to `key`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":32567,"byte_end":32628,"line_start":600,"line_end":600,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":32633,"byte_end":32636,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":32641,"byte_end":32707,"line_start":602,"line_end":602,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":32712,"byte_end":32773,"line_start":603,"line_end":603,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":32778,"byte_end":32835,"line_start":604,"line_end":604,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":32840,"byte_end":32843,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":32848,"byte_end":32889,"line_start":606,"line_end":606,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":32894,"byte_end":32897,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":32902,"byte_end":32942,"line_start":608,"line_end":608,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":33638,"byte_end":33655,"line_start":629,"line_end":629,"column_start":12,"column_end":29},"name":"shift_remove_full","qualname":"<IndexMap<K, V, S>>::shift_remove_full","value":"pub fn shift_remove_full<Q: ?Sized>(&mut Self, &Q) -> Option<(usize, K, V)>\nwhere Q: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return it and\n the index it had.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return it and","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":33219,"byte_end":33286,"line_start":619,"line_end":619,"column_start":5,"column_end":72}},{"value":"/ the index it had.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":33291,"byte_end":33312,"line_start":620,"line_end":620,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":33317,"byte_end":33320,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":33325,"byte_end":33391,"line_start":622,"line_end":622,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":33396,"byte_end":33457,"line_start":623,"line_end":623,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":33462,"byte_end":33519,"line_start":624,"line_end":624,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":33524,"byte_end":33527,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":33532,"byte_end":33573,"line_start":626,"line_end":626,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":33578,"byte_end":33581,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":33586,"byte_end":33626,"line_start":628,"line_end":628,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":34085,"byte_end":34088,"line_start":645,"line_end":645,"column_start":12,"column_end":15},"name":"pop","qualname":"<IndexMap<K, V, S>>::pop","value":"pub fn pop(&mut Self) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the last key-value pair","sig":null,"attributes":[{"value":"/ Remove the last key-value pair","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":33918,"byte_end":33952,"line_start":640,"line_end":640,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":33957,"byte_end":33960,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ This preserves the order of the remaining elements.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":33965,"byte_end":34020,"line_start":642,"line_end":642,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":34025,"byte_end":34028,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":34033,"byte_end":34073,"line_start":644,"line_end":644,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":34431,"byte_end":34437,"line_start":656,"line_end":656,"column_start":12,"column_end":18},"name":"retain","qualname":"<IndexMap<K, V, S>>::retain","value":"pub fn retain<F>(&mut Self, F) where F: FnMut(&K, &mut V) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Scan through each key-value pair in the map and keep those where the\n closure `keep` returns `true`.","sig":null,"attributes":[{"value":"/ Scan through each key-value pair in the map and keep those where the","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":34155,"byte_end":34227,"line_start":649,"line_end":649,"column_start":5,"column_end":77}},{"value":"/ closure `keep` returns `true`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":34232,"byte_end":34266,"line_start":650,"line_end":650,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":34271,"byte_end":34274,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ The elements are visited in order, and remaining elements keep their","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":34279,"byte_end":34351,"line_start":652,"line_end":652,"column_start":5,"column_end":77}},{"value":"/ order.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":34356,"byte_end":34366,"line_start":653,"line_end":653,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":34371,"byte_end":34374,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":34379,"byte_end":34419,"line_start":655,"line_end":655,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":34892,"byte_end":34901,"line_start":673,"line_end":673,"column_start":12,"column_end":21},"name":"sort_keys","qualname":"<IndexMap<K, V, S>>::sort_keys","value":"pub fn sort_keys(&mut Self) where K: Ord","parent":null,"children":[],"decl_id":null,"docs":" Sort the map’s key-value pairs by the default ordering of the keys.","sig":null,"attributes":[{"value":"/ Sort the map’s key-value pairs by the default ordering of the keys.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":34747,"byte_end":34820,"line_start":670,"line_end":670,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":34825,"byte_end":34828,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ See [`sort_by`](Self::sort_by) for details.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":34833,"byte_end":34880,"line_start":672,"line_end":672,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":35491,"byte_end":35498,"line_start":690,"line_end":690,"column_start":12,"column_end":19},"name":"sort_by","qualname":"<IndexMap<K, V, S>>::sort_by","value":"pub fn sort_by<F>(&mut Self, F) where F: FnMut(&K, &V, &K, &V) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort the map’s key-value pairs in place using the comparison\n function `cmp`.","sig":null,"attributes":[{"value":"/ Sort the map’s key-value pairs in place using the comparison","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":35076,"byte_end":35142,"line_start":682,"line_end":682,"column_start":5,"column_end":69}},{"value":"/ function `cmp`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":35147,"byte_end":35166,"line_start":683,"line_end":683,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":35171,"byte_end":35174,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ The comparison function receives two key and value pairs to compare (you","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":35179,"byte_end":35255,"line_start":685,"line_end":685,"column_start":5,"column_end":81}},{"value":"/ can sort by keys or values or their combination as needed).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":35260,"byte_end":35323,"line_start":686,"line_end":686,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":35328,"byte_end":35331,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n log n + c)** time and **O(n)** space where *n* is","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":35336,"byte_end":35407,"line_start":688,"line_end":688,"column_start":5,"column_end":76}},{"value":"/ the length of the map and *c* the capacity. The sort is stable.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":35412,"byte_end":35479,"line_start":689,"line_end":689,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":35901,"byte_end":35910,"line_start":703,"line_end":703,"column_start":12,"column_end":21},"name":"sorted_by","qualname":"<IndexMap<K, V, S>>::sorted_by","value":"pub fn sorted_by<F>(Self, F) -> IntoIter<K, V> where F: FnMut(&K, &V, &K, &V)\n-> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort the key-value pairs of the map and return a by-value iterator of\n the key-value pairs with the result.","sig":null,"attributes":[{"value":"/ Sort the key-value pairs of the map and return a by-value iterator of","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":35735,"byte_end":35808,"line_start":699,"line_end":699,"column_start":5,"column_end":78}},{"value":"/ the key-value pairs with the result.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":35813,"byte_end":35853,"line_start":700,"line_end":700,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":35858,"byte_end":35861,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ The sort is stable.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":35866,"byte_end":35889,"line_start":702,"line_end":702,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":36435,"byte_end":36453,"line_start":718,"line_end":718,"column_start":12,"column_end":30},"name":"sort_unstable_keys","qualname":"<IndexMap<K, V, S>>::sort_unstable_keys","value":"pub fn sort_unstable_keys(&mut Self) where K: Ord","parent":null,"children":[],"decl_id":null,"docs":" Sort the map's key-value pairs by the default ordering of the keys, but\n may not preserve the order of equal elements.","sig":null,"attributes":[{"value":"/ Sort the map's key-value pairs by the default ordering of the keys, but","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":36216,"byte_end":36291,"line_start":714,"line_end":714,"column_start":5,"column_end":80}},{"value":"/ may not preserve the order of equal elements.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":36296,"byte_end":36345,"line_start":715,"line_end":715,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":36350,"byte_end":36353,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ See [`sort_unstable_by`](Self::sort_unstable_by) for details.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":36358,"byte_end":36423,"line_start":717,"line_end":717,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":37086,"byte_end":37102,"line_start":735,"line_end":735,"column_start":12,"column_end":28},"name":"sort_unstable_by","qualname":"<IndexMap<K, V, S>>::sort_unstable_by","value":"pub fn sort_unstable_by<F>(&mut Self, F) where F: FnMut(&K, &V, &K, &V) ->\nOrdering","parent":null,"children":[],"decl_id":null,"docs":" Sort the map's key-value pairs in place using the comparison function `cmp`, but\n may not preserve the order of equal elements.","sig":null,"attributes":[{"value":"/ Sort the map's key-value pairs in place using the comparison function `cmp`, but","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":36637,"byte_end":36721,"line_start":727,"line_end":727,"column_start":5,"column_end":89}},{"value":"/ may not preserve the order of equal elements.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":36726,"byte_end":36775,"line_start":728,"line_end":728,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":36780,"byte_end":36783,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ The comparison function receives two key and value pairs to compare (you","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":36788,"byte_end":36864,"line_start":730,"line_end":730,"column_start":5,"column_end":81}},{"value":"/ can sort by keys or values or their combination as needed).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":36869,"byte_end":36932,"line_start":731,"line_end":731,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":36937,"byte_end":36940,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n log n + c)** time where *n* is","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":36945,"byte_end":36997,"line_start":733,"line_end":733,"column_start":5,"column_end":57}},{"value":"/ the length of the map and *c* is the capacity. The sort is unstable.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":37002,"byte_end":37074,"line_start":734,"line_end":734,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":37530,"byte_end":37548,"line_start":749,"line_end":749,"column_start":12,"column_end":30},"name":"sorted_unstable_by","qualname":"<IndexMap<K, V, S>>::sorted_unstable_by","value":"pub fn sorted_unstable_by<F>(Self, F) -> IntoIter<K, V> where\nF: FnMut(&K, &V, &K, &V) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort the key-value pairs of the map and return a by-value iterator of\n the key-value pairs with the result.","sig":null,"attributes":[{"value":"/ Sort the key-value pairs of the map and return a by-value iterator of","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":37348,"byte_end":37421,"line_start":744,"line_end":744,"column_start":5,"column_end":78}},{"value":"/ the key-value pairs with the result.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":37426,"byte_end":37466,"line_start":745,"line_end":745,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":37471,"byte_end":37474,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ The sort is unstable.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":37479,"byte_end":37504,"line_start":747,"line_end":747,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":37509,"byte_end":37518,"line_start":748,"line_end":748,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":38000,"byte_end":38007,"line_start":763,"line_end":763,"column_start":12,"column_end":19},"name":"reverse","qualname":"<IndexMap<K, V, S>>::reverse","value":"pub fn reverse(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reverses the order of the map’s key-value pairs in place.","sig":null,"attributes":[{"value":"/ Reverses the order of the map’s key-value pairs in place.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":37863,"byte_end":37926,"line_start":760,"line_end":760,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":37931,"byte_end":37934,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time and **O(1)** space.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":37939,"byte_end":37988,"line_start":762,"line_end":762,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":38244,"byte_end":38253,"line_start":774,"line_end":774,"column_start":12,"column_end":21},"name":"get_index","qualname":"<IndexMap<K, V, S>>::get_index","value":"pub fn get_index(&Self, usize) -> Option<(&K, &V)>","parent":null,"children":[],"decl_id":null,"docs":" Get a key-value pair by index","sig":null,"attributes":[{"value":"/ Get a key-value pair by index","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":38096,"byte_end":38129,"line_start":769,"line_end":769,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":38134,"byte_end":38137,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":38142,"byte_end":38189,"line_start":771,"line_end":771,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":38194,"byte_end":38197,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":38202,"byte_end":38232,"line_start":773,"line_end":773,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":38511,"byte_end":38524,"line_start":783,"line_end":783,"column_start":12,"column_end":25},"name":"get_index_mut","qualname":"<IndexMap<K, V, S>>::get_index_mut","value":"pub fn get_index_mut(&mut Self, usize) -> Option<(&mut K, &mut V)>","parent":null,"children":[],"decl_id":null,"docs":" Get a key-value pair by index","sig":null,"attributes":[{"value":"/ Get a key-value pair by index","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":38363,"byte_end":38396,"line_start":778,"line_end":778,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":38401,"byte_end":38404,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":38409,"byte_end":38456,"line_start":780,"line_end":780,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":38461,"byte_end":38464,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":38469,"byte_end":38499,"line_start":782,"line_end":782,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":38741,"byte_end":38746,"line_start":790,"line_end":790,"column_start":12,"column_end":17},"name":"first","qualname":"<IndexMap<K, V, S>>::first","value":"pub fn first(&Self) -> Option<(&K, &V)>","parent":null,"children":[],"decl_id":null,"docs":" Get the first key-value pair","sig":null,"attributes":[{"value":"/ Get the first key-value pair","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":38654,"byte_end":38686,"line_start":787,"line_end":787,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":38691,"byte_end":38694,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":38699,"byte_end":38729,"line_start":789,"line_end":789,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":38960,"byte_end":38969,"line_start":797,"line_end":797,"column_start":12,"column_end":21},"name":"first_mut","qualname":"<IndexMap<K, V, S>>::first_mut","value":"pub fn first_mut(&mut Self) -> Option<(&K, &mut V)>","parent":null,"children":[],"decl_id":null,"docs":" Get the first key-value pair, with mutable access to the value","sig":null,"attributes":[{"value":"/ Get the first key-value pair, with mutable access to the value","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":38839,"byte_end":38905,"line_start":794,"line_end":794,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":38910,"byte_end":38913,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":38918,"byte_end":38948,"line_start":796,"line_end":796,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":39167,"byte_end":39171,"line_start":804,"line_end":804,"column_start":12,"column_end":16},"name":"last","qualname":"<IndexMap<K, V, S>>::last","value":"pub fn last(&Self) -> Option<(&K, &V)>","parent":null,"children":[],"decl_id":null,"docs":" Get the last key-value pair","sig":null,"attributes":[{"value":"/ Get the last key-value pair","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":39081,"byte_end":39112,"line_start":801,"line_end":801,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":39117,"byte_end":39120,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":39125,"byte_end":39155,"line_start":803,"line_end":803,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":39383,"byte_end":39391,"line_start":811,"line_end":811,"column_start":12,"column_end":20},"name":"last_mut","qualname":"<IndexMap<K, V, S>>::last_mut","value":"pub fn last_mut(&mut Self) -> Option<(&K, &mut V)>","parent":null,"children":[],"decl_id":null,"docs":" Get the last key-value pair, with mutable access to the value","sig":null,"attributes":[{"value":"/ Get the last key-value pair, with mutable access to the value","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":39263,"byte_end":39328,"line_start":808,"line_end":808,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":39333,"byte_end":39336,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":39341,"byte_end":39371,"line_start":810,"line_end":810,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":39878,"byte_end":39895,"line_start":824,"line_end":824,"column_start":12,"column_end":29},"name":"swap_remove_index","qualname":"<IndexMap<K, V, S>>::swap_remove_index","value":"pub fn swap_remove_index(&mut Self, usize) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair by index","sig":null,"attributes":[{"value":"/ Remove the key-value pair by index","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":39502,"byte_end":39540,"line_start":815,"line_end":815,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":39545,"byte_end":39548,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":39553,"byte_end":39600,"line_start":817,"line_end":817,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":39605,"byte_end":39608,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":39613,"byte_end":39685,"line_start":819,"line_end":819,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":39690,"byte_end":39753,"line_start":820,"line_end":820,"column_start":5,"column_end":68}},{"value":"/ the position of what used to be the last element!**","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":39758,"byte_end":39813,"line_start":821,"line_end":821,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":39818,"byte_end":39821,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":39826,"byte_end":39866,"line_start":823,"line_end":823,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":40365,"byte_end":40383,"line_start":837,"line_end":837,"column_start":12,"column_end":30},"name":"shift_remove_index","qualname":"<IndexMap<K, V, S>>::shift_remove_index","value":"pub fn shift_remove_index(&mut Self, usize) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair by index","sig":null,"attributes":[{"value":"/ Remove the key-value pair by index","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":39995,"byte_end":40033,"line_start":828,"line_end":828,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":40038,"byte_end":40041,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":40046,"byte_end":40093,"line_start":830,"line_end":830,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":40098,"byte_end":40101,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":40106,"byte_end":40172,"line_start":832,"line_end":832,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":40177,"byte_end":40238,"line_start":833,"line_end":833,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":40243,"byte_end":40300,"line_start":834,"line_end":834,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":40305,"byte_end":40308,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":40313,"byte_end":40353,"line_start":836,"line_end":836,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":40615,"byte_end":40627,"line_start":844,"line_end":844,"column_start":12,"column_end":24},"name":"swap_indices","qualname":"<IndexMap<K, V, S>>::swap_indices","value":"pub fn swap_indices(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Swaps the position of two key-value pairs in the map.","sig":null,"attributes":[{"value":"/ Swaps the position of two key-value pairs in the map.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":40484,"byte_end":40541,"line_start":841,"line_end":841,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":40546,"byte_end":40549,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if `a` or `b` are out of bounds.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":40554,"byte_end":40603,"line_start":843,"line_end":843,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":550},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":40964,"byte_end":40968,"line_start":856,"line_end":856,"column_start":12,"column_end":16},"name":"Keys","qualname":"::map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":554}],"decl_id":null,"docs":" An iterator over the keys of a `IndexMap`.","sig":null,"attributes":[{"value":"/ An iterator over the keys of a `IndexMap`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":40707,"byte_end":40753,"line_start":849,"line_end":849,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":40754,"byte_end":40757,"line_start":850,"line_end":850,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`keys`] method on [`IndexMap`]. See its","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":40758,"byte_end":40834,"line_start":851,"line_end":851,"column_start":1,"column_end":77}},{"value":"/ documentation for more.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":40835,"byte_end":40862,"line_start":852,"line_end":852,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":40863,"byte_end":40866,"line_start":853,"line_end":853,"column_start":1,"column_end":4}},{"value":"/ [`keys`]: struct.IndexMap.html#method.keys","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":40867,"byte_end":40913,"line_start":854,"line_end":854,"column_start":1,"column_end":47}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":40914,"byte_end":40952,"line_start":855,"line_end":855,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":578},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":42068,"byte_end":42076,"line_start":900,"line_end":900,"column_start":12,"column_end":20},"name":"IntoKeys","qualname":"::map::IntoKeys","value":"IntoKeys {  }","parent":null,"children":[{"krate":0,"index":581}],"decl_id":null,"docs":" An owning iterator over the keys of a `IndexMap`.","sig":null,"attributes":[{"value":"/ An owning iterator over the keys of a `IndexMap`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":41789,"byte_end":41842,"line_start":893,"line_end":893,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":41843,"byte_end":41846,"line_start":894,"line_end":894,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_keys`] method on [`IndexMap`].","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":41847,"byte_end":41920,"line_start":895,"line_end":895,"column_start":1,"column_end":74}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":41921,"byte_end":41956,"line_start":896,"line_end":896,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":41957,"byte_end":41960,"line_start":897,"line_end":897,"column_start":1,"column_end":4}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":41961,"byte_end":41999,"line_start":898,"line_end":898,"column_start":1,"column_end":39}},{"value":"/ [`into_keys`]: struct.IndexMap.html#method.into_keys","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":42000,"byte_end":42056,"line_start":899,"line_end":899,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":600},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":42998,"byte_end":43004,"line_start":936,"line_end":936,"column_start":12,"column_end":18},"name":"Values","qualname":"::map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":604}],"decl_id":null,"docs":" An iterator over the values of a `IndexMap`.","sig":null,"attributes":[{"value":"/ An iterator over the values of a `IndexMap`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":42733,"byte_end":42781,"line_start":929,"line_end":929,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":42782,"byte_end":42785,"line_start":930,"line_end":930,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`values`] method on [`IndexMap`]. See its","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":42786,"byte_end":42864,"line_start":931,"line_end":931,"column_start":1,"column_end":79}},{"value":"/ documentation for more.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":42865,"byte_end":42892,"line_start":932,"line_end":932,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":42893,"byte_end":42896,"line_start":933,"line_end":933,"column_start":1,"column_end":4}},{"value":"/ [`values`]: struct.IndexMap.html#method.values","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":42897,"byte_end":42947,"line_start":934,"line_end":934,"column_start":1,"column_end":51}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":42948,"byte_end":42986,"line_start":935,"line_end":935,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":628},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":44116,"byte_end":44125,"line_start":980,"line_end":980,"column_start":12,"column_end":21},"name":"ValuesMut","qualname":"::map::ValuesMut","value":"ValuesMut {  }","parent":null,"children":[{"krate":0,"index":632}],"decl_id":null,"docs":" A mutable iterator over the values of a `IndexMap`.","sig":null,"attributes":[{"value":"/ A mutable iterator over the values of a `IndexMap`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":43832,"byte_end":43887,"line_start":973,"line_end":973,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":43888,"byte_end":43891,"line_start":974,"line_end":974,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`values_mut`] method on [`IndexMap`]. See its","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":43892,"byte_end":43974,"line_start":975,"line_end":975,"column_start":1,"column_end":83}},{"value":"/ documentation for more.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":43975,"byte_end":44002,"line_start":976,"line_end":976,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":44003,"byte_end":44006,"line_start":977,"line_end":977,"column_start":1,"column_end":4}},{"value":"/ [`values_mut`]: struct.IndexMap.html#method.values_mut","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":44007,"byte_end":44065,"line_start":978,"line_end":978,"column_start":1,"column_end":59}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":44066,"byte_end":44104,"line_start":979,"line_end":979,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":648},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":44969,"byte_end":44979,"line_start":1011,"line_end":1011,"column_start":12,"column_end":22},"name":"IntoValues","qualname":"::map::IntoValues","value":"IntoValues {  }","parent":null,"children":[{"krate":0,"index":651}],"decl_id":null,"docs":" An owning iterator over the values of a `IndexMap`.","sig":null,"attributes":[{"value":"/ An owning iterator over the values of a `IndexMap`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":44682,"byte_end":44737,"line_start":1004,"line_end":1004,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":44738,"byte_end":44741,"line_start":1005,"line_end":1005,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_values`] method on [`IndexMap`].","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":44742,"byte_end":44817,"line_start":1006,"line_end":1006,"column_start":1,"column_end":76}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":44818,"byte_end":44853,"line_start":1007,"line_end":1007,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":44854,"byte_end":44857,"line_start":1008,"line_end":1008,"column_start":1,"column_end":4}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":44858,"byte_end":44896,"line_start":1009,"line_end":1009,"column_start":1,"column_end":39}},{"value":"/ [`into_values`]: struct.IndexMap.html#method.into_values","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":44897,"byte_end":44957,"line_start":1010,"line_end":1010,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":670},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":45912,"byte_end":45916,"line_start":1047,"line_end":1047,"column_start":12,"column_end":16},"name":"Iter","qualname":"::map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":674}],"decl_id":null,"docs":" An iterator over the entries of a `IndexMap`.","sig":null,"attributes":[{"value":"/ An iterator over the entries of a `IndexMap`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":45652,"byte_end":45701,"line_start":1040,"line_end":1040,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":45702,"byte_end":45705,"line_start":1041,"line_end":1041,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`IndexMap`]. See its","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":45706,"byte_end":45782,"line_start":1042,"line_end":1042,"column_start":1,"column_end":77}},{"value":"/ documentation for more.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":45783,"byte_end":45810,"line_start":1043,"line_end":1043,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":45811,"byte_end":45814,"line_start":1044,"line_end":1044,"column_start":1,"column_end":4}},{"value":"/ [`iter`]: struct.IndexMap.html#method.iter","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":45815,"byte_end":45861,"line_start":1045,"line_end":1045,"column_start":1,"column_end":47}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":45862,"byte_end":45900,"line_start":1046,"line_end":1046,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":698},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":47020,"byte_end":47027,"line_start":1091,"line_end":1091,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":702}],"decl_id":null,"docs":" A mutable iterator over the entries of a `IndexMap`.","sig":null,"attributes":[{"value":"/ A mutable iterator over the entries of a `IndexMap`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":46741,"byte_end":46797,"line_start":1084,"line_end":1084,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":46798,"byte_end":46801,"line_start":1085,"line_end":1085,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter_mut`] method on [`IndexMap`]. See its","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":46802,"byte_end":46882,"line_start":1086,"line_end":1086,"column_start":1,"column_end":81}},{"value":"/ documentation for more.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":46883,"byte_end":46910,"line_start":1087,"line_end":1087,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":46911,"byte_end":46914,"line_start":1088,"line_end":1088,"column_start":1,"column_end":4}},{"value":"/ [`iter_mut`]: struct.IndexMap.html#method.iter_mut","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":46915,"byte_end":46969,"line_start":1089,"line_end":1089,"column_start":1,"column_end":55}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":46970,"byte_end":47008,"line_start":1090,"line_end":1090,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":718},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":47900,"byte_end":47908,"line_start":1122,"line_end":1122,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":721}],"decl_id":null,"docs":" An owning iterator over the entries of a `IndexMap`.","sig":null,"attributes":[{"value":"/ An owning iterator over the entries of a `IndexMap`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":47579,"byte_end":47635,"line_start":1115,"line_end":1115,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":47636,"byte_end":47639,"line_start":1116,"line_end":1116,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_iter`] method on [`IndexMap`]","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":47640,"byte_end":47712,"line_start":1117,"line_end":1117,"column_start":1,"column_end":73}},{"value":"/ (provided by the `IntoIterator` trait). See its documentation for more.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":47713,"byte_end":47788,"line_start":1118,"line_end":1118,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":47789,"byte_end":47792,"line_start":1119,"line_end":1119,"column_start":1,"column_end":4}},{"value":"/ [`into_iter`]: struct.IndexMap.html#method.into_iter","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":47793,"byte_end":47849,"line_start":1120,"line_end":1120,"column_start":1,"column_end":57}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":47850,"byte_end":47888,"line_start":1121,"line_end":1121,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":740},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":48873,"byte_end":48878,"line_start":1158,"line_end":1158,"column_start":12,"column_end":17},"name":"Drain","qualname":"::map::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":744}],"decl_id":null,"docs":" A draining iterator over the entries of a `IndexMap`.","sig":null,"attributes":[{"value":"/ A draining iterator over the entries of a `IndexMap`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":48602,"byte_end":48659,"line_start":1151,"line_end":1151,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":48660,"byte_end":48663,"line_start":1152,"line_end":1152,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain`] method on [`IndexMap`]. See its","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":48664,"byte_end":48741,"line_start":1153,"line_end":1153,"column_start":1,"column_end":78}},{"value":"/ documentation for more.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":48742,"byte_end":48769,"line_start":1154,"line_end":1154,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":48770,"byte_end":48773,"line_start":1155,"line_end":1155,"column_start":1,"column_end":4}},{"value":"/ [`drain`]: struct.IndexMap.html#method.drain","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":48774,"byte_end":48822,"line_start":1156,"line_end":1156,"column_start":1,"column_end":49}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":48823,"byte_end":48861,"line_start":1157,"line_end":1157,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":856},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"set","qualname":"::set","value":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","parent":null,"children":[{"krate":0,"index":857},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":864},{"krate":0,"index":867},{"krate":0,"index":870},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":884},{"krate":0,"index":887},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":894},{"krate":0,"index":897},{"krate":0,"index":900},{"krate":0,"index":903},{"krate":0,"index":906},{"krate":0,"index":909},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":916},{"krate":0,"index":919},{"krate":0,"index":922},{"krate":0,"index":924},{"krate":0,"index":928},{"krate":0,"index":933},{"krate":0,"index":942},{"krate":0,"index":946},{"krate":0,"index":950},{"krate":0,"index":965},{"krate":0,"index":1037},{"krate":0,"index":1048},{"krate":0,"index":1053},{"krate":0,"index":1056},{"krate":0,"index":1059},{"krate":0,"index":1061},{"krate":0,"index":1064},{"krate":0,"index":1066},{"krate":0,"index":1069},{"krate":0,"index":1073},{"krate":0,"index":1077},{"krate":0,"index":1079},{"krate":0,"index":1082},{"krate":0,"index":1084},{"krate":0,"index":1087},{"krate":0,"index":1090},{"krate":0,"index":1094},{"krate":0,"index":1097},{"krate":0,"index":1099},{"krate":0,"index":1102},{"krate":0,"index":1104},{"krate":0,"index":1107},{"krate":0,"index":1114},{"krate":0,"index":1120},{"krate":0,"index":1126},{"krate":0,"index":1132},{"krate":0,"index":1138},{"krate":0,"index":1144},{"krate":0,"index":1148},{"krate":0,"index":1153},{"krate":0,"index":1156},{"krate":0,"index":1168},{"krate":0,"index":1174},{"krate":0,"index":1181},{"krate":0,"index":1185},{"krate":0,"index":1188},{"krate":0,"index":1192},{"krate":0,"index":1196},{"krate":0,"index":1202},{"krate":0,"index":1209},{"krate":0,"index":1213},{"krate":0,"index":1216},{"krate":0,"index":1220},{"krate":0,"index":1224},{"krate":0,"index":1230},{"krate":0,"index":1241},{"krate":0,"index":1249},{"krate":0,"index":1253},{"krate":0,"index":1258},{"krate":0,"index":1263},{"krate":0,"index":1268},{"krate":0,"index":1278},{"krate":0,"index":1285},{"krate":0,"index":1288},{"krate":0,"index":1292},{"krate":0,"index":1296},{"krate":0,"index":1302},{"krate":0,"index":1308},{"krate":0,"index":1314}],"decl_id":null,"docs":" A hash set implemented using `IndexMap`\n","sig":null,"attributes":[{"value":"/ A hash set implemented using `IndexMap`","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":99058,"byte_end":99101,"line_start":1,"line_end":1,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":924},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":101162,"byte_end":101170,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"name":"IndexSet","qualname":"::set::IndexSet","value":"IndexSet {  }","parent":null,"children":[{"krate":0,"index":927}],"decl_id":null,"docs":" A hash set where the iteration order of the values is independent of their\n hash values.","sig":null,"attributes":[{"value":"/ A hash set where the iteration order of the values is independent of their","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":99556,"byte_end":99634,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ hash values.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":99635,"byte_end":99651,"line_start":22,"line_end":22,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":99652,"byte_end":99655,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The interface is closely compatible with the standard `HashSet`, but also","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":99656,"byte_end":99733,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ has additional features.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":99734,"byte_end":99762,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":99763,"byte_end":99766,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Order","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":99767,"byte_end":99778,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":99779,"byte_end":99782,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The values have a consistent order that is determined by the sequence of","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":99783,"byte_end":99859,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ insertion and removal calls on the set. The order does not depend on the","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":99860,"byte_end":99936,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ values or the hash function at all. Note that insertion order and value","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":99937,"byte_end":100012,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ are not affected if a re-insertion is attempted once an element is","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":100013,"byte_end":100083,"line_start":32,"line_end":32,"column_start":1,"column_end":71}},{"value":"/ already present.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":100084,"byte_end":100104,"line_start":33,"line_end":33,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":100105,"byte_end":100108,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ All iterators traverse the set *in order*.  Set operation iterators like","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":100109,"byte_end":100185,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ `union` produce a concatenated order, as do their matching \"bitwise\"","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":100186,"byte_end":100258,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ operators.  See their documentation for specifics.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":100259,"byte_end":100313,"line_start":37,"line_end":37,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":100314,"byte_end":100317,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The insertion order is preserved, with **notable exceptions** like the","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":100318,"byte_end":100392,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/ `.remove()` or `.swap_remove()` methods. Methods such as `.sort_by()` of","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":100393,"byte_end":100469,"line_start":40,"line_end":40,"column_start":1,"column_end":77}},{"value":"/ course result in a new order, depending on the sorting order.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":100470,"byte_end":100535,"line_start":41,"line_end":41,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":100536,"byte_end":100539,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # Indices","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":100540,"byte_end":100553,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":100554,"byte_end":100557,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ The values are indexed in a compact range without holes in the range","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":100558,"byte_end":100630,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/ `0..self.len()`. For example, the method `.get_full` looks up the index for","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":100631,"byte_end":100710,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/ a value, and the method `.get_index` looks up the value by index.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":100711,"byte_end":100780,"line_start":47,"line_end":47,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":100781,"byte_end":100784,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":100785,"byte_end":100799,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":100800,"byte_end":100803,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":100804,"byte_end":100811,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/ use indexmap::IndexSet;","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":100812,"byte_end":100839,"line_start":52,"line_end":52,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":100840,"byte_end":100843,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ // Collects which letters appear in a sentence.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":100844,"byte_end":100895,"line_start":54,"line_end":54,"column_start":1,"column_end":52}},{"value":"/ let letters: IndexSet<_> = \"a short treatise on fungi\".chars().collect();","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":100896,"byte_end":100973,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":100974,"byte_end":100977,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ assert!(letters.contains(&'s'));","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":100978,"byte_end":101014,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"/ assert!(letters.contains(&'t'));","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":101015,"byte_end":101051,"line_start":58,"line_end":58,"column_start":1,"column_end":37}},{"value":"/ assert!(letters.contains(&'u'));","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":101052,"byte_end":101088,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/ assert!(!letters.contains(&'y'));","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":101089,"byte_end":101126,"line_start":60,"line_end":60,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":101127,"byte_end":101134,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"cfg(has_std)","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":101135,"byte_end":101150,"line_start":62,"line_end":62,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":948},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":102614,"byte_end":102617,"line_start":130,"line_end":130,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexSet<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set. (Does not allocate.)\n","sig":null,"attributes":[{"value":"/ Create a new set. (Does not allocate.)","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":102560,"byte_end":102602,"line_start":129,"line_end":129,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":949},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":102855,"byte_end":102868,"line_start":140,"line_end":140,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<IndexSet<T>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set with capacity for `n` elements.\n (Does not allocate if `n` is zero.)","sig":null,"attributes":[{"value":"/ Create a new set with capacity for `n` elements.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":102704,"byte_end":102756,"line_start":136,"line_end":136,"column_start":5,"column_end":57}},{"value":"/ (Does not allocate if `n` is zero.)","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":102761,"byte_end":102800,"line_start":137,"line_end":137,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":102805,"byte_end":102808,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":102813,"byte_end":102843,"line_start":139,"line_end":139,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":953},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":103155,"byte_end":103179,"line_start":152,"line_end":152,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<IndexSet<T, S>>::with_capacity_and_hasher","value":"pub fn with_capacity_and_hasher(usize, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set with capacity for `n` elements.\n (Does not allocate if `n` is zero.)","sig":null,"attributes":[{"value":"/ Create a new set with capacity for `n` elements.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":103004,"byte_end":103056,"line_start":148,"line_end":148,"column_start":5,"column_end":57}},{"value":"/ (Does not allocate if `n` is zero.)","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":103061,"byte_end":103100,"line_start":149,"line_end":149,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":103105,"byte_end":103108,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":103113,"byte_end":103143,"line_start":151,"line_end":151,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":954},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":103478,"byte_end":103489,"line_start":162,"line_end":162,"column_start":18,"column_end":29},"name":"with_hasher","qualname":"<IndexSet<T, S>>::with_hasher","value":"pub const fn with_hasher(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set with `hash_builder`.","sig":null,"attributes":[{"value":"/ Create a new set with `hash_builder`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":103327,"byte_end":103368,"line_start":158,"line_end":158,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":103373,"byte_end":103376,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ This function is `const`, so it","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":103381,"byte_end":103416,"line_start":160,"line_end":160,"column_start":5,"column_end":40}},{"value":"/ can be called in `static` contexts.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":103421,"byte_end":103460,"line_start":161,"line_end":161,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":955},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":103653,"byte_end":103661,"line_start":169,"line_end":169,"column_start":12,"column_end":20},"name":"capacity","qualname":"<IndexSet<T, S>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time.\n","sig":null,"attributes":[{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":103611,"byte_end":103641,"line_start":168,"line_end":168,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":103781,"byte_end":103787,"line_start":174,"line_end":174,"column_start":12,"column_end":18},"name":"hasher","qualname":"<IndexSet<T, S>>::hasher","value":"pub fn hasher(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the set's `BuildHasher`.\n","sig":null,"attributes":[{"value":"/ Return a reference to the set's `BuildHasher`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":103719,"byte_end":103769,"line_start":173,"line_end":173,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":957},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":103940,"byte_end":103943,"line_start":181,"line_end":181,"column_start":12,"column_end":15},"name":"len","qualname":"<IndexSet<T, S>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of elements in the set.","sig":null,"attributes":[{"value":"/ Return the number of elements in the set.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":103840,"byte_end":103885,"line_start":178,"line_end":178,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":103890,"byte_end":103893,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":103898,"byte_end":103928,"line_start":180,"line_end":180,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":104100,"byte_end":104108,"line_start":188,"line_end":188,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<IndexSet<T, S>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the set contains no elements.","sig":null,"attributes":[{"value":"/ Returns true if the set contains no elements.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":103996,"byte_end":104045,"line_start":185,"line_end":185,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":104050,"byte_end":104053,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":104058,"byte_end":104088,"line_start":187,"line_end":187,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":959},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":104242,"byte_end":104246,"line_start":193,"line_end":193,"column_start":12,"column_end":16},"name":"iter","qualname":"<IndexSet<T, S>>::iter","value":"pub fn iter(&Self) -> Iter<, T>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values of the set, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the values of the set, in their order","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":104165,"byte_end":104230,"line_start":192,"line_end":192,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":104468,"byte_end":104473,"line_start":202,"line_end":202,"column_start":12,"column_end":17},"name":"clear","qualname":"<IndexSet<T, S>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove all elements in the set, while preserving its capacity.","sig":null,"attributes":[{"value":"/ Remove all elements in the set, while preserving its capacity.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":104347,"byte_end":104413,"line_start":199,"line_end":199,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":104418,"byte_end":104421,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":104426,"byte_end":104456,"line_start":201,"line_end":201,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":104700,"byte_end":104708,"line_start":209,"line_end":209,"column_start":12,"column_end":20},"name":"truncate","qualname":"<IndexSet<T, S>>::truncate","value":"pub fn truncate(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shortens the set, keeping the first `len` elements and dropping the rest.","sig":null,"attributes":[{"value":"/ Shortens the set, keeping the first `len` elements and dropping the rest.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":104524,"byte_end":104601,"line_start":206,"line_end":206,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":104606,"byte_end":104609,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ If `len` is greater than the set's current length, this has no effect.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":104614,"byte_end":104688,"line_start":208,"line_end":208,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":962},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":105450,"byte_end":105455,"line_start":226,"line_end":226,"column_start":12,"column_end":17},"name":"drain","qualname":"<IndexSet<T, S>>::drain","value":"pub fn drain<R>(&mut Self, R) -> Drain<, T> where R: RangeBounds<usize>","parent":null,"children":[],"decl_id":null,"docs":" Clears the `IndexSet` in the given index range, returning those values\n as a drain iterator.","sig":null,"attributes":[{"value":"/ Clears the `IndexSet` in the given index range, returning those values","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":104777,"byte_end":104851,"line_start":213,"line_end":213,"column_start":5,"column_end":79}},{"value":"/ as a drain iterator.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":104856,"byte_end":104880,"line_start":214,"line_end":214,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":104885,"byte_end":104888,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ The range may be any type that implements `RangeBounds<usize>`,","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":104893,"byte_end":104960,"line_start":216,"line_end":216,"column_start":5,"column_end":72}},{"value":"/ including all of the `std::ops::Range*` types, or even a tuple pair of","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":104965,"byte_end":105039,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ `Bound` start and end values. To drain the set entirely, use `RangeFull`","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":105044,"byte_end":105120,"line_start":218,"line_end":218,"column_start":5,"column_end":81}},{"value":"/ like `set.drain(..)`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":105125,"byte_end":105150,"line_start":219,"line_end":219,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":105155,"byte_end":105158,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ This shifts down all entries following the drained range to fill the","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":105163,"byte_end":105235,"line_start":221,"line_end":221,"column_start":5,"column_end":77}},{"value":"/ gap, and keeps the allocated memory for reuse.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":105240,"byte_end":105290,"line_start":222,"line_end":222,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":105295,"byte_end":105298,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if the starting point is greater than the end point or if","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":105303,"byte_end":105377,"line_start":224,"line_end":224,"column_start":5,"column_end":79}},{"value":"/ the end point is greater than the length of the set.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":105382,"byte_end":105438,"line_start":225,"line_end":225,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":105966,"byte_end":105975,"line_start":242,"line_end":242,"column_start":12,"column_end":21},"name":"split_off","qualname":"<IndexSet<T, S>>::split_off","value":"pub fn split_off(&mut Self, usize) -> Self where S: Clone","parent":null,"children":[],"decl_id":null,"docs":" Splits the collection into two at the given index.","sig":null,"attributes":[{"value":"/ Splits the collection into two at the given index.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":105626,"byte_end":105680,"line_start":235,"line_end":235,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":105685,"byte_end":105688,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ Returns a newly allocated set containing the elements in the range","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":105693,"byte_end":105763,"line_start":237,"line_end":237,"column_start":5,"column_end":75}},{"value":"/ `[at, len)`. After the call, the original set will be left containing","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":105768,"byte_end":105841,"line_start":238,"line_end":238,"column_start":5,"column_end":78}},{"value":"/ the elements `[0, at)` with its previous capacity unchanged.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":105846,"byte_end":105910,"line_start":239,"line_end":239,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":105915,"byte_end":105918,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if `at > len`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":105923,"byte_end":105954,"line_start":241,"line_end":241,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":968},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":106296,"byte_end":106303,"line_start":260,"line_end":260,"column_start":12,"column_end":19},"name":"reserve","qualname":"<IndexSet<T, S>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserve capacity for `additional` more values.","sig":null,"attributes":[{"value":"/ Reserve capacity for `additional` more values.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":106191,"byte_end":106241,"line_start":257,"line_end":257,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":106246,"byte_end":106249,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":106254,"byte_end":106284,"line_start":259,"line_end":259,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":969},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":106495,"byte_end":106508,"line_start":267,"line_end":267,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<IndexSet<T, S>>::shrink_to_fit","value":"pub fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the capacity of the set as much as possible.","sig":null,"attributes":[{"value":"/ Shrink the capacity of the set as much as possible.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":106385,"byte_end":106440,"line_start":264,"line_end":264,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":106445,"byte_end":106448,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":106453,"byte_end":106483,"line_start":266,"line_end":266,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":970},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":106919,"byte_end":106925,"line_start":279,"line_end":279,"column_start":12,"column_end":18},"name":"insert","qualname":"<IndexSet<T, S>>::insert","value":"pub fn insert(&mut Self, T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Insert the value into the set.","sig":null,"attributes":[{"value":"/ Insert the value into the set.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":106567,"byte_end":106601,"line_start":271,"line_end":271,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":106606,"byte_end":106609,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ If an equivalent item already exists in the set, it returns","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":106614,"byte_end":106677,"line_start":273,"line_end":273,"column_start":5,"column_end":68}},{"value":"/ `false` leaving the original value in the set and without","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":106682,"byte_end":106743,"line_start":274,"line_end":274,"column_start":5,"column_end":66}},{"value":"/ altering its insertion order. Otherwise, it inserts the new","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":106748,"byte_end":106811,"line_start":275,"line_end":275,"column_start":5,"column_end":68}},{"value":"/ item and returns `true`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":106816,"byte_end":106844,"line_start":276,"line_end":276,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":106849,"byte_end":106852,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":106857,"byte_end":106907,"line_start":278,"line_end":278,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":971},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":107463,"byte_end":107474,"line_start":292,"line_end":292,"column_start":12,"column_end":23},"name":"insert_full","qualname":"<IndexSet<T, S>>::insert_full","value":"pub fn insert_full(&mut Self, T) -> (usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Insert the value into the set, and get its index.","sig":null,"attributes":[{"value":"/ Insert the value into the set, and get its index.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":107013,"byte_end":107066,"line_start":283,"line_end":283,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":107071,"byte_end":107074,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ If an equivalent item already exists in the set, it returns","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":107079,"byte_end":107142,"line_start":285,"line_end":285,"column_start":5,"column_end":68}},{"value":"/ the index of the existing item and `false`, leaving the","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":107147,"byte_end":107206,"line_start":286,"line_end":286,"column_start":5,"column_end":64}},{"value":"/ original value in the set and without altering its insertion","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":107211,"byte_end":107275,"line_start":287,"line_end":287,"column_start":5,"column_end":69}},{"value":"/ order. Otherwise, it inserts the new item and returns the index","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":107280,"byte_end":107347,"line_start":288,"line_end":288,"column_start":5,"column_end":72}},{"value":"/ of the inserted item and `true`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":107352,"byte_end":107388,"line_start":289,"line_end":289,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":107393,"byte_end":107396,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":107401,"byte_end":107451,"line_start":291,"line_end":291,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":973},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":107964,"byte_end":107974,"line_start":308,"line_end":308,"column_start":12,"column_end":22},"name":"difference","qualname":"<IndexSet<T, S>>::difference","value":"pub fn difference<'a, S2>(&'a Self, &'a IndexSet<T, S2>) -> Difference where\nS2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values that are in `self` but not `other`.","sig":null,"attributes":[{"value":"/ Return an iterator over the values that are in `self` but not `other`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":107796,"byte_end":107870,"line_start":305,"line_end":305,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":107875,"byte_end":107878,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ Values are produced in the same order that they appear in `self`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":107883,"byte_end":107952,"line_start":307,"line_end":307,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":976},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":108423,"byte_end":108443,"line_start":323,"line_end":323,"column_start":12,"column_end":32},"name":"symmetric_difference","qualname":"<IndexSet<T, S>>::symmetric_difference","value":"pub fn symmetric_difference<'a, S2>(&'a Self, &'a IndexSet<T, S2>)\n-> SymmetricDifference where S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values that are in `self` or `other`,\n but not in both.","sig":null,"attributes":[{"value":"/ Return an iterator over the values that are in `self` or `other`,","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":108179,"byte_end":108248,"line_start":318,"line_end":318,"column_start":5,"column_end":74}},{"value":"/ but not in both.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":108253,"byte_end":108273,"line_start":319,"line_end":319,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":108278,"byte_end":108281,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ Values from `self` are produced in their original order, followed by","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":108286,"byte_end":108358,"line_start":321,"line_end":321,"column_start":5,"column_end":77}},{"value":"/ values from `other` in their original order.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":108363,"byte_end":108411,"line_start":322,"line_end":322,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":108883,"byte_end":108895,"line_start":338,"line_end":338,"column_start":12,"column_end":24},"name":"intersection","qualname":"<IndexSet<T, S>>::intersection","value":"pub fn intersection<'a, S2>(&'a Self, &'a IndexSet<T, S2>) -> Intersection\nwhere S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values that are in both `self` and `other`.","sig":null,"attributes":[{"value":"/ Return an iterator over the values that are in both `self` and `other`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":108714,"byte_end":108789,"line_start":335,"line_end":335,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":108794,"byte_end":108797,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ Values are produced in the same order that they appear in `self`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":108802,"byte_end":108871,"line_start":337,"line_end":337,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":109337,"byte_end":109342,"line_start":352,"line_end":352,"column_start":12,"column_end":17},"name":"union","qualname":"<IndexSet<T, S>>::union","value":"pub fn union<'a, S2>(&'a Self, &'a IndexSet<T, S2>) -> Union where\nS2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over all values that are in `self` or `other`.","sig":null,"attributes":[{"value":"/ Return an iterator over all values that are in `self` or `other`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":109104,"byte_end":109173,"line_start":348,"line_end":348,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":109178,"byte_end":109181,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ Values from `self` are produced in their original order, followed by","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":109186,"byte_end":109258,"line_start":350,"line_end":350,"column_start":5,"column_end":77}},{"value":"/ values that are unique to `other` in their original order.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":109263,"byte_end":109325,"line_start":351,"line_end":351,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":985},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":109676,"byte_end":109684,"line_start":364,"line_end":364,"column_start":12,"column_end":20},"name":"contains","qualname":"<IndexSet<T, S>>::contains","value":"pub fn contains<Q: ?Sized>(&Self, &Q) -> bool where Q: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if an equivalent to `value` exists in the set.","sig":null,"attributes":[{"value":"/ Return `true` if an equivalent to `value` exists in the set.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":109547,"byte_end":109611,"line_start":361,"line_end":361,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":109616,"byte_end":109619,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":109624,"byte_end":109664,"line_start":363,"line_end":363,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":109977,"byte_end":109980,"line_start":375,"line_end":375,"column_start":12,"column_end":15},"name":"get","qualname":"<IndexSet<T, S>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&T> where Q: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the value stored in the set, if it is present,\n else `None`.","sig":null,"attributes":[{"value":"/ Return a reference to the value stored in the set, if it is present,","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":109819,"byte_end":109891,"line_start":371,"line_end":371,"column_start":5,"column_end":77}},{"value":"/ else `None`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":109896,"byte_end":109912,"line_start":372,"line_end":372,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":109917,"byte_end":109920,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":109925,"byte_end":109965,"line_start":374,"line_end":374,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":990},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":110183,"byte_end":110191,"line_start":383,"line_end":383,"column_start":12,"column_end":20},"name":"get_full","qualname":"<IndexSet<T, S>>::get_full","value":"pub fn get_full<Q: ?Sized>(&Self, &Q) -> Option<(usize, &T)> where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Return item index and value\n","sig":null,"attributes":[{"value":"/ Return item index and value","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":110140,"byte_end":110171,"line_start":382,"line_end":382,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":993},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":110421,"byte_end":110433,"line_start":391,"line_end":391,"column_start":12,"column_end":24},"name":"get_index_of","qualname":"<IndexSet<T, S>>::get_index_of","value":"pub fn get_index_of<Q: ?Sized>(&Self, &Q) -> Option<usize> where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Return item index, if it exists in the set\n","sig":null,"attributes":[{"value":"/ Return item index, if it exists in the set","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":110363,"byte_end":110409,"line_start":390,"line_end":390,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":995},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":110776,"byte_end":110783,"line_start":402,"line_end":402,"column_start":12,"column_end":19},"name":"replace","qualname":"<IndexSet<T, S>>::replace","value":"pub fn replace(&mut Self, T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to the set, replacing the existing value, if any, that is\n equal to the given one. Returns the replaced value.","sig":null,"attributes":[{"value":"/ Adds a value to the set, replacing the existing value, if any, that is","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":110577,"byte_end":110651,"line_start":398,"line_end":398,"column_start":5,"column_end":79}},{"value":"/ equal to the given one. Returns the replaced value.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":110656,"byte_end":110711,"line_start":399,"line_end":399,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":110716,"byte_end":110719,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":110724,"byte_end":110764,"line_start":401,"line_end":401,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":111359,"byte_end":111365,"line_start":420,"line_end":420,"column_start":12,"column_end":18},"name":"remove","qualname":"<IndexSet<T, S>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> bool where Q: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set, and return `true` if it was present.","sig":null,"attributes":[{"value":"/ Remove the value from the set, and return `true` if it was present.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":111056,"byte_end":111127,"line_start":414,"line_end":414,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":111132,"byte_end":111135,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_remove(value)`, if you want","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":111140,"byte_end":111210,"line_start":416,"line_end":416,"column_start":5,"column_end":75}},{"value":"/ to preserve the order of the values in the set, use `.shift_remove(value)`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":111215,"byte_end":111294,"line_start":417,"line_end":417,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":111299,"byte_end":111302,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":111307,"byte_end":111347,"line_start":419,"line_end":419,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":999},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":111911,"byte_end":111922,"line_start":436,"line_end":436,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<IndexSet<T, S>>::swap_remove","value":"pub fn swap_remove<Q: ?Sized>(&mut Self, &Q) -> bool where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set, and return `true` if it was present.","sig":null,"attributes":[{"value":"/ Remove the value from the set, and return `true` if it was present.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":111499,"byte_end":111570,"line_start":427,"line_end":427,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":111575,"byte_end":111578,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the value is removed by swapping it with the","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":111583,"byte_end":111656,"line_start":429,"line_end":429,"column_start":5,"column_end":78}},{"value":"/ last element of the set and popping it off. **This perturbs","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":111661,"byte_end":111724,"line_start":430,"line_end":430,"column_start":5,"column_end":68}},{"value":"/ the position of what used to be the last element!**","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":111729,"byte_end":111784,"line_start":431,"line_end":431,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":111789,"byte_end":111792,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ Return `false` if `value` was not in the set.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":111797,"byte_end":111846,"line_start":433,"line_end":433,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":111851,"byte_end":111854,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":111859,"byte_end":111899,"line_start":435,"line_end":435,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":112476,"byte_end":112488,"line_start":452,"line_end":452,"column_start":12,"column_end":24},"name":"shift_remove","qualname":"<IndexSet<T, S>>::shift_remove","value":"pub fn shift_remove<Q: ?Sized>(&mut Self, &Q) -> bool where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set, and return `true` if it was present.","sig":null,"attributes":[{"value":"/ Remove the value from the set, and return `true` if it was present.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":112070,"byte_end":112141,"line_start":443,"line_end":443,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":112146,"byte_end":112149,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the value is removed by shifting all of the","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":112154,"byte_end":112221,"line_start":445,"line_end":445,"column_start":5,"column_end":72}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":112226,"byte_end":112287,"line_start":446,"line_end":446,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":112292,"byte_end":112349,"line_start":447,"line_end":447,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":112354,"byte_end":112357,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ Return `false` if `value` was not in the set.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":112362,"byte_end":112411,"line_start":449,"line_end":449,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":112416,"byte_end":112419,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":112424,"byte_end":112464,"line_start":451,"line_end":451,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1003},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":112974,"byte_end":112978,"line_start":467,"line_end":467,"column_start":12,"column_end":16},"name":"take","qualname":"<IndexSet<T, S>>::take","value":"pub fn take<Q: ?Sized>(&mut Self, &Q) -> Option<T> where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value in the set, if any, that is equal to the\n given one.","sig":null,"attributes":[{"value":"/ Removes and returns the value in the set, if any, that is equal to the","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":112637,"byte_end":112711,"line_start":459,"line_end":459,"column_start":5,"column_end":79}},{"value":"/ given one.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":112716,"byte_end":112730,"line_start":460,"line_end":460,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":112735,"byte_end":112738,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_take(value)`, if you need to","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":112743,"byte_end":112814,"line_start":462,"line_end":462,"column_start":5,"column_end":76}},{"value":"/ preserve the order of the values in the set, use `.shift_take(value)`","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":112819,"byte_end":112892,"line_start":463,"line_end":463,"column_start":5,"column_end":78}},{"value":"/ instead.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":112897,"byte_end":112909,"line_start":464,"line_end":464,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":112914,"byte_end":112917,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":112922,"byte_end":112962,"line_start":466,"line_end":466,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1005},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":113548,"byte_end":113557,"line_start":484,"line_end":484,"column_start":12,"column_end":21},"name":"swap_take","qualname":"<IndexSet<T, S>>::swap_take","value":"pub fn swap_take<Q: ?Sized>(&mut Self, &Q) -> Option<T> where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value in the set, if any, that is equal to the\n given one.","sig":null,"attributes":[{"value":"/ Removes and returns the value in the set, if any, that is equal to the","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":113115,"byte_end":113189,"line_start":474,"line_end":474,"column_start":5,"column_end":79}},{"value":"/ given one.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":113194,"byte_end":113208,"line_start":475,"line_end":475,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":113213,"byte_end":113216,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the value is removed by swapping it with the","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":113221,"byte_end":113294,"line_start":477,"line_end":477,"column_start":5,"column_end":78}},{"value":"/ last element of the set and popping it off. **This perturbs","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":113299,"byte_end":113362,"line_start":478,"line_end":478,"column_start":5,"column_end":68}},{"value":"/ the position of what used to be the last element!**","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":113367,"byte_end":113422,"line_start":479,"line_end":479,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":113427,"byte_end":113430,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `value` was not in the set.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":113435,"byte_end":113483,"line_start":481,"line_end":481,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":113488,"byte_end":113491,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":113496,"byte_end":113536,"line_start":483,"line_end":483,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":114150,"byte_end":114160,"line_start":501,"line_end":501,"column_start":12,"column_end":22},"name":"shift_take","qualname":"<IndexSet<T, S>>::shift_take","value":"pub fn shift_take<Q: ?Sized>(&mut Self, &Q) -> Option<T> where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value in the set, if any, that is equal to the\n given one.","sig":null,"attributes":[{"value":"/ Removes and returns the value in the set, if any, that is equal to the","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":113723,"byte_end":113797,"line_start":491,"line_end":491,"column_start":5,"column_end":79}},{"value":"/ given one.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":113802,"byte_end":113816,"line_start":492,"line_end":492,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":113821,"byte_end":113824,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the value is removed by shifting all of the","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":113829,"byte_end":113896,"line_start":494,"line_end":494,"column_start":5,"column_end":72}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":113901,"byte_end":113962,"line_start":495,"line_end":495,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":113967,"byte_end":114024,"line_start":496,"line_end":496,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":114029,"byte_end":114032,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `value` was not in the set.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":114037,"byte_end":114085,"line_start":498,"line_end":498,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":114090,"byte_end":114093,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":114098,"byte_end":114138,"line_start":500,"line_end":500,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1011},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":114679,"byte_end":114695,"line_start":515,"line_end":515,"column_start":12,"column_end":28},"name":"swap_remove_full","qualname":"<IndexSet<T, S>>::swap_remove_full","value":"pub fn swap_remove_full<Q: ?Sized>(&mut Self, &Q) -> Option<(usize, T)> where\nQ: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set return it and the index it had.","sig":null,"attributes":[{"value":"/ Remove the value from the set return it and the index it had.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":114327,"byte_end":114392,"line_start":508,"line_end":508,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":114397,"byte_end":114400,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the value is removed by swapping it with the","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":114405,"byte_end":114478,"line_start":510,"line_end":510,"column_start":5,"column_end":78}},{"value":"/ last element of the set and popping it off. **This perturbs","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":114483,"byte_end":114546,"line_start":511,"line_end":511,"column_start":5,"column_end":68}},{"value":"/ the position of what used to be the last element!**","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":114551,"byte_end":114606,"line_start":512,"line_end":512,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":114611,"byte_end":114614,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `value` was not in the set.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":114619,"byte_end":114667,"line_start":514,"line_end":514,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":115223,"byte_end":115240,"line_start":529,"line_end":529,"column_start":12,"column_end":29},"name":"shift_remove_full","qualname":"<IndexSet<T, S>>::shift_remove_full","value":"pub fn shift_remove_full<Q: ?Sized>(&mut Self, &Q) -> Option<(usize, T)> where\nQ: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set return it and the index it had.","sig":null,"attributes":[{"value":"/ Remove the value from the set return it and the index it had.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":114877,"byte_end":114942,"line_start":522,"line_end":522,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":114947,"byte_end":114950,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the value is removed by shifting all of the","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":114955,"byte_end":115022,"line_start":524,"line_end":524,"column_start":5,"column_end":72}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":115027,"byte_end":115088,"line_start":525,"line_end":525,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":115093,"byte_end":115150,"line_start":526,"line_end":526,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":115155,"byte_end":115158,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `value` was not in the set.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":115163,"byte_end":115211,"line_start":528,"line_end":528,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":115581,"byte_end":115584,"line_start":541,"line_end":541,"column_start":12,"column_end":15},"name":"pop","qualname":"<IndexSet<T, S>>::pop","value":"pub fn pop(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the last value","sig":null,"attributes":[{"value":"/ Remove the last value","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":115423,"byte_end":115448,"line_start":536,"line_end":536,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":115453,"byte_end":115456,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ This preserves the order of the remaining elements.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":115461,"byte_end":115516,"line_start":538,"line_end":538,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":115521,"byte_end":115524,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":115529,"byte_end":115569,"line_start":540,"line_end":540,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1019},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":115929,"byte_end":115935,"line_start":552,"line_end":552,"column_start":12,"column_end":18},"name":"retain","qualname":"<IndexSet<T, S>>::retain","value":"pub fn retain<F>(&mut Self, F) where F: FnMut(&T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Scan through each value in the set and keep those where the\n closure `keep` returns `true`.","sig":null,"attributes":[{"value":"/ Scan through each value in the set and keep those where the","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":115662,"byte_end":115725,"line_start":545,"line_end":545,"column_start":5,"column_end":68}},{"value":"/ closure `keep` returns `true`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":115730,"byte_end":115764,"line_start":546,"line_end":546,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":115769,"byte_end":115772,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ The elements are visited in order, and remaining elements keep their","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":115777,"byte_end":115849,"line_start":548,"line_end":548,"column_start":5,"column_end":77}},{"value":"/ order.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":115854,"byte_end":115864,"line_start":549,"line_end":549,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":115869,"byte_end":115872,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":115877,"byte_end":115917,"line_start":551,"line_end":551,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1022},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":116197,"byte_end":116201,"line_start":562,"line_end":562,"column_start":12,"column_end":16},"name":"sort","qualname":"<IndexSet<T, S>>::sort","value":"pub fn sort(&mut Self) where T: Ord","parent":null,"children":[],"decl_id":null,"docs":" Sort the set’s values by their default ordering.","sig":null,"attributes":[{"value":"/ Sort the set’s values by their default ordering.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":116071,"byte_end":116125,"line_start":559,"line_end":559,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":116130,"byte_end":116133,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ See [`sort_by`](Self::sort_by) for details.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":116138,"byte_end":116185,"line_start":561,"line_end":561,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1023},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":116458,"byte_end":116465,"line_start":572,"line_end":572,"column_start":12,"column_end":19},"name":"sort_by","qualname":"<IndexSet<T, S>>::sort_by","value":"pub fn sort_by<F>(&mut Self, F) where F: FnMut(&T, &T) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort the set’s values in place using the comparison function `cmp`.","sig":null,"attributes":[{"value":"/ Sort the set’s values in place using the comparison function `cmp`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":116285,"byte_end":116358,"line_start":569,"line_end":569,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":116363,"byte_end":116366,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n log n)** time and **O(n)** space. The sort is stable.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":116371,"byte_end":116446,"line_start":571,"line_end":571,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":116760,"byte_end":116769,"line_start":583,"line_end":583,"column_start":12,"column_end":21},"name":"sorted_by","qualname":"<IndexSet<T, S>>::sorted_by","value":"pub fn sorted_by<F>(Self, F) -> IntoIter<T> where F: FnMut(&T, &T) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort the values of the set and return a by-value iterator of\n the values with the result.","sig":null,"attributes":[{"value":"/ Sort the values of the set and return a by-value iterator of","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":116612,"byte_end":116676,"line_start":579,"line_end":579,"column_start":5,"column_end":69}},{"value":"/ the values with the result.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":116681,"byte_end":116712,"line_start":580,"line_end":580,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":116717,"byte_end":116720,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ The sort is stable.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":116725,"byte_end":116748,"line_start":582,"line_end":582,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":117114,"byte_end":117127,"line_start":595,"line_end":595,"column_start":12,"column_end":25},"name":"sort_unstable","qualname":"<IndexSet<T, S>>::sort_unstable","value":"pub fn sort_unstable(&mut Self) where T: Ord","parent":null,"children":[],"decl_id":null,"docs":" Sort the set's values by their default ordering.","sig":null,"attributes":[{"value":"/ Sort the set's values by their default ordering.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":116972,"byte_end":117024,"line_start":592,"line_end":592,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":117029,"byte_end":117032,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ See [`sort_unstable_by`](Self::sort_unstable_by) for details.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":117037,"byte_end":117102,"line_start":594,"line_end":594,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":117373,"byte_end":117389,"line_start":605,"line_end":605,"column_start":12,"column_end":28},"name":"sort_unstable_by","qualname":"<IndexSet<T, S>>::sort_unstable_by","value":"pub fn sort_unstable_by<F>(&mut Self, F) where F: FnMut(&T, &T) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort the set's values in place using the comparison funtion `cmp`.","sig":null,"attributes":[{"value":"/ Sort the set's values in place using the comparison funtion `cmp`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":117220,"byte_end":117290,"line_start":602,"line_end":602,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":117295,"byte_end":117298,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n log n)** time. The sort is unstable.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":117303,"byte_end":117361,"line_start":604,"line_end":604,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1033},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":117656,"byte_end":117674,"line_start":614,"line_end":614,"column_start":12,"column_end":30},"name":"sorted_unstable_by","qualname":"<IndexSet<T, S>>::sorted_unstable_by","value":"pub fn sorted_unstable_by<F>(Self, F) -> IntoIter<T> where F: FnMut(&T, &T) ->\nOrdering","parent":null,"children":[],"decl_id":null,"docs":" Sort the values of the set and return a by-value iterator of\n the values with the result.\n","sig":null,"attributes":[{"value":"/ Sort the values of the set and return a by-value iterator of","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":117544,"byte_end":117608,"line_start":612,"line_end":612,"column_start":5,"column_end":69}},{"value":"/ the values with the result.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":117613,"byte_end":117644,"line_start":613,"line_end":613,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1036},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":118065,"byte_end":118072,"line_start":629,"line_end":629,"column_start":12,"column_end":19},"name":"reverse","qualname":"<IndexSet<T, S>>::reverse","value":"pub fn reverse(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reverses the order of the set’s values in place.","sig":null,"attributes":[{"value":"/ Reverses the order of the set’s values in place.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":117937,"byte_end":117991,"line_start":626,"line_end":626,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":117996,"byte_end":117999,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time and **O(1)** space.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":118004,"byte_end":118053,"line_start":628,"line_end":628,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1040},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":118293,"byte_end":118302,"line_start":640,"line_end":640,"column_start":12,"column_end":21},"name":"get_index","qualname":"<IndexSet<T, S>>::get_index","value":"pub fn get_index(&Self, usize) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get a value by index","sig":null,"attributes":[{"value":"/ Get a value by index","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":118154,"byte_end":118178,"line_start":635,"line_end":635,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":118183,"byte_end":118186,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":118191,"byte_end":118238,"line_start":637,"line_end":637,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":118243,"byte_end":118246,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":118251,"byte_end":118281,"line_start":639,"line_end":639,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":118487,"byte_end":118492,"line_start":647,"line_end":647,"column_start":12,"column_end":17},"name":"first","qualname":"<IndexSet<T, S>>::first","value":"pub fn first(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get the first value","sig":null,"attributes":[{"value":"/ Get the first value","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":118409,"byte_end":118432,"line_start":644,"line_end":644,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":118437,"byte_end":118440,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":118445,"byte_end":118475,"line_start":646,"line_end":646,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":118659,"byte_end":118663,"line_start":654,"line_end":654,"column_start":12,"column_end":16},"name":"last","qualname":"<IndexSet<T, S>>::last","value":"pub fn last(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get the last value","sig":null,"attributes":[{"value":"/ Get the last value","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":118582,"byte_end":118604,"line_start":651,"line_end":651,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":118609,"byte_end":118612,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":118617,"byte_end":118647,"line_start":653,"line_end":653,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":119120,"byte_end":119137,"line_start":667,"line_end":667,"column_start":12,"column_end":29},"name":"swap_remove_index","qualname":"<IndexSet<T, S>>::swap_remove_index","value":"pub fn swap_remove_index(&mut Self, usize) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value by index","sig":null,"attributes":[{"value":"/ Remove the value by index","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":118752,"byte_end":118781,"line_start":658,"line_end":658,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":118786,"byte_end":118789,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":118794,"byte_end":118841,"line_start":660,"line_end":660,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":118846,"byte_end":118849,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the value is removed by swapping it with the","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":118854,"byte_end":118927,"line_start":662,"line_end":662,"column_start":5,"column_end":78}},{"value":"/ last element of the set and popping it off. **This perturbs","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":118932,"byte_end":118995,"line_start":663,"line_end":663,"column_start":5,"column_end":68}},{"value":"/ the position of what used to be the last element!**","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":119000,"byte_end":119055,"line_start":664,"line_end":664,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":119060,"byte_end":119063,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":119068,"byte_end":119108,"line_start":666,"line_end":666,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1045},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":119610,"byte_end":119628,"line_start":680,"line_end":680,"column_start":12,"column_end":30},"name":"shift_remove_index","qualname":"<IndexSet<T, S>>::shift_remove_index","value":"pub fn shift_remove_index(&mut Self, usize) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value by index","sig":null,"attributes":[{"value":"/ Remove the value by index","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":119248,"byte_end":119277,"line_start":671,"line_end":671,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":119282,"byte_end":119285,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":119290,"byte_end":119337,"line_start":673,"line_end":673,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":119342,"byte_end":119345,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the value is removed by shifting all of the","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":119350,"byte_end":119417,"line_start":675,"line_end":675,"column_start":5,"column_end":72}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":119422,"byte_end":119483,"line_start":676,"line_end":676,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":119488,"byte_end":119545,"line_start":677,"line_end":677,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":119550,"byte_end":119553,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":119558,"byte_end":119598,"line_start":679,"line_end":679,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1047},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":119862,"byte_end":119874,"line_start":687,"line_end":687,"column_start":12,"column_end":24},"name":"swap_indices","qualname":"<IndexSet<T, S>>::swap_indices","value":"pub fn swap_indices(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Swaps the position of two values in the set.","sig":null,"attributes":[{"value":"/ Swaps the position of two values in the set.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":119740,"byte_end":119788,"line_start":684,"line_end":684,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":119793,"byte_end":119796,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if `a` or `b` are out of bounds.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":119801,"byte_end":119850,"line_start":686,"line_end":686,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1053},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":121257,"byte_end":121265,"line_start":739,"line_end":739,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":1055}],"decl_id":null,"docs":" An owning iterator over the items of a `IndexSet`.","sig":null,"attributes":[{"value":"/ An owning iterator over the items of a `IndexSet`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":120938,"byte_end":120992,"line_start":732,"line_end":732,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":120993,"byte_end":120996,"line_start":733,"line_end":733,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_iter`] method on [`IndexSet`]","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":120997,"byte_end":121069,"line_start":734,"line_end":734,"column_start":1,"column_end":73}},{"value":"/ (provided by the `IntoIterator` trait). See its documentation for more.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":121070,"byte_end":121145,"line_start":735,"line_end":735,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":121146,"byte_end":121149,"line_start":736,"line_end":736,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":121150,"byte_end":121188,"line_start":737,"line_end":737,"column_start":1,"column_end":39}},{"value":"/ [`into_iter`]: struct.IndexSet.html#method.into_iter","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":121189,"byte_end":121245,"line_start":738,"line_end":738,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1069},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":122144,"byte_end":122148,"line_start":775,"line_end":775,"column_start":12,"column_end":16},"name":"Iter","qualname":"::set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1072}],"decl_id":null,"docs":" An iterator over the items of a `IndexSet`.","sig":null,"attributes":[{"value":"/ An iterator over the items of a `IndexSet`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":121886,"byte_end":121933,"line_start":768,"line_end":768,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":121934,"byte_end":121937,"line_start":769,"line_end":769,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`IndexSet`].","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":121938,"byte_end":122006,"line_start":770,"line_end":770,"column_start":1,"column_end":69}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":122007,"byte_end":122042,"line_start":771,"line_end":771,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":122043,"byte_end":122046,"line_start":772,"line_end":772,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":122047,"byte_end":122085,"line_start":773,"line_end":773,"column_start":1,"column_end":39}},{"value":"/ [`iter`]: struct.IndexSet.html#method.iter","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":122086,"byte_end":122132,"line_start":774,"line_end":774,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1090},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":123132,"byte_end":123137,"line_start":818,"line_end":818,"column_start":12,"column_end":17},"name":"Drain","qualname":"::set::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":1093}],"decl_id":null,"docs":" A draining iterator over the items of a `IndexSet`.","sig":null,"attributes":[{"value":"/ A draining iterator over the items of a `IndexSet`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":122863,"byte_end":122918,"line_start":811,"line_end":811,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":122919,"byte_end":122922,"line_start":812,"line_end":812,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain`] method on [`IndexSet`].","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":122923,"byte_end":122992,"line_start":813,"line_end":813,"column_start":1,"column_end":70}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":122993,"byte_end":123028,"line_start":814,"line_end":814,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":123029,"byte_end":123032,"line_start":815,"line_end":815,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":123033,"byte_end":123071,"line_start":816,"line_end":816,"column_start":1,"column_end":39}},{"value":"/ [`drain`]: struct.IndexSet.html#method.drain","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":123072,"byte_end":123120,"line_start":817,"line_end":817,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1159},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":126129,"byte_end":126140,"line_start":957,"line_end":957,"column_start":12,"column_end":23},"name":"is_disjoint","qualname":"<IndexSet<T, S>>::is_disjoint","value":"pub fn is_disjoint<S2>(&Self, &IndexSet<T, S2>) -> bool where S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` has no elements in common with `other`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` has no elements in common with `other`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":126049,"byte_end":126117,"line_start":956,"line_end":956,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1163},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":126515,"byte_end":126524,"line_start":969,"line_end":969,"column_start":12,"column_end":21},"name":"is_subset","qualname":"<IndexSet<T, S>>::is_subset","value":"pub fn is_subset<S2>(&Self, &IndexSet<T, S2>) -> bool where S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all elements of `self` are contained in `other`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if all elements of `self` are contained in `other`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":126433,"byte_end":126503,"line_start":968,"line_end":968,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1166},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":126792,"byte_end":126803,"line_start":977,"line_end":977,"column_start":12,"column_end":23},"name":"is_superset","qualname":"<IndexSet<T, S>>::is_superset","value":"pub fn is_superset<S2>(&Self, &IndexSet<T, S2>) -> bool where S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all elements of `other` are contained in `self`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if all elements of `other` are contained in `self`.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":126710,"byte_end":126780,"line_start":976,"line_end":976,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1168},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":127229,"byte_end":127239,"line_start":992,"line_end":992,"column_start":12,"column_end":22},"name":"Difference","qualname":"::set::Difference","value":"Difference {  }","parent":null,"children":[{"krate":0,"index":1172},{"krate":0,"index":1173}],"decl_id":null,"docs":" A lazy iterator producing elements in the difference of `IndexSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the difference of `IndexSet`s.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":126928,"byte_end":127000,"line_start":985,"line_end":985,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":127001,"byte_end":127004,"line_start":986,"line_end":986,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`difference`] method on [`IndexSet`].","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":127005,"byte_end":127079,"line_start":987,"line_end":987,"column_start":1,"column_end":75}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":127080,"byte_end":127115,"line_start":988,"line_end":988,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":127116,"byte_end":127119,"line_start":989,"line_end":989,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":127120,"byte_end":127158,"line_start":990,"line_end":990,"column_start":1,"column_end":39}},{"value":"/ [`difference`]: struct.IndexSet.html#method.difference","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":127159,"byte_end":127217,"line_start":991,"line_end":991,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":1196},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":128891,"byte_end":128903,"line_start":1066,"line_end":1066,"column_start":12,"column_end":24},"name":"Intersection","qualname":"::set::Intersection","value":"Intersection {  }","parent":null,"children":[{"krate":0,"index":1200},{"krate":0,"index":1201}],"decl_id":null,"docs":" A lazy iterator producing elements in the intersection of `IndexSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the intersection of `IndexSet`s.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":128582,"byte_end":128656,"line_start":1059,"line_end":1059,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":128657,"byte_end":128660,"line_start":1060,"line_end":1060,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`intersection`] method on [`IndexSet`].","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":128661,"byte_end":128737,"line_start":1061,"line_end":1061,"column_start":1,"column_end":77}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":128738,"byte_end":128773,"line_start":1062,"line_end":1062,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":128774,"byte_end":128777,"line_start":1063,"line_end":1063,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":128778,"byte_end":128816,"line_start":1064,"line_end":1064,"column_start":1,"column_end":39}},{"value":"/ [`intersection`]: struct.IndexSet.html#method.intersection","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":128817,"byte_end":128879,"line_start":1065,"line_end":1065,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1224},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":130597,"byte_end":130616,"line_start":1140,"line_end":1140,"column_start":12,"column_end":31},"name":"SymmetricDifference","qualname":"::set::SymmetricDifference","value":"SymmetricDifference {  }","parent":null,"children":[{"krate":0,"index":1229}],"decl_id":null,"docs":" A lazy iterator producing elements in the symmetric difference of `IndexSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the symmetric difference of `IndexSet`s.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":130256,"byte_end":130338,"line_start":1133,"line_end":1133,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":130339,"byte_end":130342,"line_start":1134,"line_end":1134,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`symmetric_difference`] method on","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":130343,"byte_end":130413,"line_start":1135,"line_end":1135,"column_start":1,"column_end":71}},{"value":"/ [`IndexSet`]. See its documentation for more.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":130414,"byte_end":130463,"line_start":1136,"line_end":1136,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":130464,"byte_end":130467,"line_start":1137,"line_end":1137,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":130468,"byte_end":130506,"line_start":1138,"line_end":1138,"column_start":1,"column_end":39}},{"value":"/ [`symmetric_difference`]: struct.IndexSet.html#method.symmetric_difference","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":130507,"byte_end":130585,"line_start":1139,"line_end":1139,"column_start":1,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":1263},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":132413,"byte_end":132418,"line_start":1220,"line_end":1220,"column_start":12,"column_end":17},"name":"Union","qualname":"::set::Union","value":"Union {  }","parent":null,"children":[{"krate":0,"index":1267}],"decl_id":null,"docs":" A lazy iterator producing elements in the union of `IndexSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the union of `IndexSet`s.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":132132,"byte_end":132199,"line_start":1213,"line_end":1213,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":132200,"byte_end":132203,"line_start":1214,"line_end":1214,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`union`] method on [`IndexSet`].","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":132204,"byte_end":132273,"line_start":1215,"line_end":1215,"column_start":1,"column_end":70}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":132274,"byte_end":132309,"line_start":1216,"line_end":1216,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":132310,"byte_end":132313,"line_start":1217,"line_end":1217,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":132314,"byte_end":132352,"line_start":1218,"line_end":1218,"column_start":1,"column_end":39}},{"value":"/ [`union`]: struct.IndexSet.html#method.union","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":132353,"byte_end":132401,"line_start":1219,"line_end":1219,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1349},"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":5215,"byte_end":5220,"line_start":186,"line_end":186,"column_start":10,"column_end":15},"name":"Entry","qualname":"::Entries::Entry","value":"type Entry;","parent":{"krate":0,"index":1348},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/equivalent.rs","byte_start":11208,"byte_end":11209,"line_start":18,"line_end":18,"column_start":46,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/mutable_keys.rs","byte_start":13039,"byte_end":13047,"line_start":51,"line_end":51,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":61},{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":92637,"byte_end":92649,"line_start":13,"line_end":13,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":92949,"byte_end":92961,"line_start":21,"line_end":21,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":96010,"byte_end":96023,"line_start":103,"line_end":103,"column_start":40,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":96138,"byte_end":96151,"line_start":106,"line_end":106,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":72213,"byte_end":72225,"line_start":58,"line_end":58,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":72911,"byte_end":72923,"line_start":81,"line_end":81,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":73242,"byte_end":73254,"line_start":94,"line_end":94,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":73757,"byte_end":73769,"line_start":121,"line_end":121,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":267},{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":85589,"byte_end":85594,"line_start":460,"line_end":460,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":88651,"byte_end":88656,"line_start":550,"line_end":550,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":89060,"byte_end":89073,"line_start":562,"line_end":562,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":90634,"byte_end":90647,"line_start":605,"line_end":605,"column_start":51,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":91126,"byte_end":91137,"line_start":624,"line_end":624,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":91840,"byte_end":91851,"line_start":648,"line_end":648,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":17075,"byte_end":17083,"line_start":81,"line_end":81,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":17481,"byte_end":17489,"line_start":100,"line_end":100,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":18013,"byte_end":18021,"line_start":126,"line_end":126,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":18483,"byte_end":18491,"line_start":144,"line_end":144,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":443},{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":18917,"byte_end":18925,"line_start":161,"line_end":161,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":23608,"byte_end":23616,"line_start":319,"line_end":319,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":480},{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":486},{"krate":0,"index":488},{"krate":0,"index":490},{"krate":0,"index":492},{"krate":0,"index":494},{"krate":0,"index":496},{"krate":0,"index":498},{"krate":0,"index":500},{"krate":0,"index":502},{"krate":0,"index":504},{"krate":0,"index":506},{"krate":0,"index":508},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":514},{"krate":0,"index":516},{"krate":0,"index":519},{"krate":0,"index":523},{"krate":0,"index":526},{"krate":0,"index":529},{"krate":0,"index":533},{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":38072,"byte_end":38080,"line_start":768,"line_end":768,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":41062,"byte_end":41066,"line_start":860,"line_end":860,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":559},{"krate":0,"index":1355},{"krate":0,"index":1356},{"krate":0,"index":1357},{"krate":0,"index":1358},{"krate":0,"index":1359},{"krate":0,"index":1360}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":41181,"byte_end":41185,"line_start":866,"line_end":866,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1362},{"krate":0,"index":1363}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":41287,"byte_end":41291,"line_start":870,"line_end":870,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":41395,"byte_end":41399,"line_start":876,"line_end":876,"column_start":30,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":41490,"byte_end":41494,"line_start":879,"line_end":879,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":41646,"byte_end":41650,"line_start":887,"line_end":887,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":42151,"byte_end":42159,"line_start":904,"line_end":904,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":585},{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1369}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":42262,"byte_end":42270,"line_start":910,"line_end":910,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1371},{"krate":0,"index":1372}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":42364,"byte_end":42372,"line_start":914,"line_end":914,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":42472,"byte_end":42480,"line_start":920,"line_end":920,"column_start":30,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":42529,"byte_end":42537,"line_start":922,"line_end":922,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":43087,"byte_end":43093,"line_start":940,"line_end":940,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":609},{"krate":0,"index":1373},{"krate":0,"index":1374},{"krate":0,"index":1375},{"krate":0,"index":1376},{"krate":0,"index":1377},{"krate":0,"index":1378}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":43210,"byte_end":43216,"line_start":946,"line_end":946,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1380},{"krate":0,"index":1381}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":43320,"byte_end":43326,"line_start":950,"line_end":950,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":43430,"byte_end":43436,"line_start":956,"line_end":956,"column_start":30,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":43527,"byte_end":43533,"line_start":959,"line_end":959,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":43687,"byte_end":43693,"line_start":967,"line_end":967,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":627}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":44211,"byte_end":44220,"line_start":984,"line_end":984,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":637},{"krate":0,"index":1382},{"krate":0,"index":1383},{"krate":0,"index":1384},{"krate":0,"index":1385},{"krate":0,"index":1386},{"krate":0,"index":1387}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":44341,"byte_end":44350,"line_start":990,"line_end":990,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1389},{"krate":0,"index":1390}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":44454,"byte_end":44463,"line_start":994,"line_end":994,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":44567,"byte_end":44576,"line_start":1000,"line_end":1000,"column_start":30,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":45054,"byte_end":45064,"line_start":1015,"line_end":1015,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":655},{"krate":0,"index":1391},{"krate":0,"index":1392},{"krate":0,"index":1393},{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1396}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":45169,"byte_end":45179,"line_start":1021,"line_end":1021,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1398},{"krate":0,"index":1399}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":45275,"byte_end":45285,"line_start":1025,"line_end":1025,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":45385,"byte_end":45395,"line_start":1031,"line_end":1031,"column_start":30,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":45444,"byte_end":45454,"line_start":1033,"line_end":1033,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":45999,"byte_end":46003,"line_start":1051,"line_end":1051,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":679},{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":1402},{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1405}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":46124,"byte_end":46128,"line_start":1057,"line_end":1057,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1407},{"krate":0,"index":1408}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":46227,"byte_end":46231,"line_start":1061,"line_end":1061,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":46335,"byte_end":46339,"line_start":1067,"line_end":1067,"column_start":30,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":46430,"byte_end":46434,"line_start":1070,"line_end":1070,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":46598,"byte_end":46602,"line_start":1078,"line_end":1078,"column_start":51,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":47113,"byte_end":47120,"line_start":1095,"line_end":1095,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":707},{"krate":0,"index":1409},{"krate":0,"index":1410},{"krate":0,"index":1411},{"krate":0,"index":1412},{"krate":0,"index":1413},{"krate":0,"index":1414}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":47248,"byte_end":47255,"line_start":1101,"line_end":1101,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1416},{"krate":0,"index":1417}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":47357,"byte_end":47364,"line_start":1105,"line_end":1105,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":47468,"byte_end":47475,"line_start":1111,"line_end":1111,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":47994,"byte_end":48002,"line_start":1126,"line_end":1126,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":725},{"krate":0,"index":1418},{"krate":0,"index":1419},{"krate":0,"index":1420},{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1423}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":48116,"byte_end":48124,"line_start":1132,"line_end":1132,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1425},{"krate":0,"index":1426}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":48224,"byte_end":48232,"line_start":1136,"line_end":1136,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":732}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":48332,"byte_end":48340,"line_start":1142,"line_end":1142,"column_start":30,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":48401,"byte_end":48409,"line_start":1144,"line_end":1144,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":739}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":48969,"byte_end":48974,"line_start":1162,"line_end":1162,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":748},{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":1429},{"krate":0,"index":1430},{"krate":0,"index":1431},{"krate":0,"index":1432}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":49092,"byte_end":49097,"line_start":1168,"line_end":1168,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1434},{"krate":0,"index":1435}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":49201,"byte_end":49206,"line_start":1172,"line_end":1172,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":49310,"byte_end":49315,"line_start":1178,"line_end":1178,"column_start":30,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":49380,"byte_end":49385,"line_start":1180,"line_end":1180,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":50026,"byte_end":50034,"line_start":1203,"line_end":1203,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":50818,"byte_end":50826,"line_start":1235,"line_end":1235,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":791},{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":51994,"byte_end":52002,"line_start":1280,"line_end":1280,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":798}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":53079,"byte_end":53087,"line_start":1322,"line_end":1322,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":803},{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":54181,"byte_end":54189,"line_start":1364,"line_end":1364,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":809}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":54537,"byte_end":54545,"line_start":1375,"line_end":1375,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":55178,"byte_end":55186,"line_start":1395,"line_end":1395,"column_start":50,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":55599,"byte_end":55607,"line_start":1413,"line_end":1413,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":56906,"byte_end":56914,"line_start":1446,"line_end":1446,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":57310,"byte_end":57318,"line_start":1460,"line_end":1460,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":842}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":57538,"byte_end":57546,"line_start":1470,"line_end":1470,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":849}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":57911,"byte_end":57919,"line_start":1487,"line_end":1487,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":101348,"byte_end":101356,"line_start":71,"line_end":71,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":931},{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":101618,"byte_end":101626,"line_start":87,"line_end":87,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":102137,"byte_end":102145,"line_start":113,"line_end":113,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":945}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":102542,"byte_end":102550,"line_start":128,"line_end":128,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":948},{"krate":0,"index":949}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":102983,"byte_end":102991,"line_start":147,"line_end":147,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":106126,"byte_end":106134,"line_start":252,"line_end":252,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":973},{"krate":0,"index":976},{"krate":0,"index":979},{"krate":0,"index":982},{"krate":0,"index":985},{"krate":0,"index":987},{"krate":0,"index":990},{"krate":0,"index":993},{"krate":0,"index":995},{"krate":0,"index":997},{"krate":0,"index":999},{"krate":0,"index":1001},{"krate":0,"index":1003},{"krate":0,"index":1005},{"krate":0,"index":1008},{"krate":0,"index":1011},{"krate":0,"index":1014},{"krate":0,"index":1017},{"krate":0,"index":1019},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1026},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1033},{"krate":0,"index":1036}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":118133,"byte_end":118141,"line_start":634,"line_end":634,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1045},{"krate":0,"index":1047}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":120641,"byte_end":120649,"line_start":720,"line_end":720,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1051},{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":121331,"byte_end":121339,"line_start":743,"line_end":743,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1058},{"krate":0,"index":1436},{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1439},{"krate":0,"index":1440},{"krate":0,"index":1441}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":121436,"byte_end":121444,"line_start":749,"line_end":749,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1443},{"krate":0,"index":1444}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":121532,"byte_end":121540,"line_start":753,"line_end":753,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1063}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":121634,"byte_end":121642,"line_start":759,"line_end":759,"column_start":27,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":121685,"byte_end":121693,"line_start":761,"line_end":761,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":122224,"byte_end":122228,"line_start":779,"line_end":779,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1076},{"krate":0,"index":1445},{"krate":0,"index":1446},{"krate":0,"index":1447},{"krate":0,"index":1448},{"krate":0,"index":1449},{"krate":0,"index":1450}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":122337,"byte_end":122341,"line_start":785,"line_end":785,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1452},{"krate":0,"index":1453}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":122437,"byte_end":122441,"line_start":789,"line_end":789,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1081}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":122539,"byte_end":122543,"line_start":795,"line_end":795,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":122573,"byte_end":122577,"line_start":797,"line_end":797,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1086}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":122723,"byte_end":122727,"line_start":805,"line_end":805,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1089}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":123208,"byte_end":123213,"line_start":822,"line_end":822,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1096},{"krate":0,"index":1454},{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1459}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":123314,"byte_end":123319,"line_start":828,"line_end":828,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1461},{"krate":0,"index":1462}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":123411,"byte_end":123416,"line_start":832,"line_end":832,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1101}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":123514,"byte_end":123519,"line_start":838,"line_end":838,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":123566,"byte_end":123571,"line_start":840,"line_end":840,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":123978,"byte_end":123986,"line_start":856,"line_end":856,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1119}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":124205,"byte_end":124213,"line_start":867,"line_end":867,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1123}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":124557,"byte_end":124565,"line_start":881,"line_end":881,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1130}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":124951,"byte_end":124959,"line_start":899,"line_end":899,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1135}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":125210,"byte_end":125218,"line_start":910,"line_end":910,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1142}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":125463,"byte_end":125471,"line_start":921,"line_end":921,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1147}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":125687,"byte_end":125695,"line_start":933,"line_end":933,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1152}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":125909,"byte_end":125917,"line_start":944,"line_end":944,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":125984,"byte_end":125992,"line_start":951,"line_end":951,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1159},{"krate":0,"index":1163},{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":127337,"byte_end":127347,"line_start":997,"line_end":997,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1178},{"krate":0,"index":1179},{"krate":0,"index":1180}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":127781,"byte_end":127791,"line_start":1018,"line_end":1018,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1184}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":128109,"byte_end":128119,"line_start":1033,"line_end":1033,"column_start":30,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":128200,"byte_end":128210,"line_start":1040,"line_end":1040,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1191}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":128376,"byte_end":128386,"line_start":1049,"line_end":1049,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1195}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":129001,"byte_end":129013,"line_start":1071,"line_end":1071,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1208}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":129446,"byte_end":129458,"line_start":1092,"line_end":1092,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1212}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":129775,"byte_end":129787,"line_start":1107,"line_end":1107,"column_start":30,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":129868,"byte_end":129880,"line_start":1114,"line_end":1114,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1219}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":130048,"byte_end":130060,"line_start":1123,"line_end":1123,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1223}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":130733,"byte_end":130752,"line_start":1144,"line_end":1144,"column_start":34,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1238}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":131207,"byte_end":131226,"line_start":1168,"line_end":1168,"column_start":41,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1245},{"krate":0,"index":1246}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":131574,"byte_end":131593,"line_start":1186,"line_end":1186,"column_start":35,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":131706,"byte_end":131725,"line_start":1194,"line_end":1194,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1257}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":131890,"byte_end":131909,"line_start":1202,"line_end":1202,"column_start":32,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1262}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":132514,"byte_end":132519,"line_start":1224,"line_end":1224,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1274},{"krate":0,"index":1275}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":132942,"byte_end":132947,"line_start":1247,"line_end":1247,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1281},{"krate":0,"index":1282}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":133263,"byte_end":133268,"line_start":1264,"line_end":1264,"column_start":30,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":133349,"byte_end":133354,"line_start":1271,"line_end":1271,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1291}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":133495,"byte_end":133500,"line_start":1279,"line_end":1279,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1295}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":3891,"byte_end":3900,"line_start":120,"line_end":120,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1330}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":4098,"byte_end":4104,"line_start":134,"line_end":134,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1334},{"krate":0,"index":1335}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":4497,"byte_end":4503,"line_start":154,"line_end":154,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1339},{"krate":0,"index":1340},{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1343},{"krate":0,"index":1344},{"krate":0,"index":1345},{"krate":0,"index":1346},{"krate":0,"index":1347}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":3364,"byte_end":3367,"line_start":98,"line_end":98,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":86}},{"kind":"Mod","span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":3377,"byte_end":3380,"line_start":99,"line_end":99,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":856}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/equivalent.rs","byte_start":11208,"byte_end":11209,"line_start":18,"line_end":18,"column_start":46,"column_end":47},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":26},"to":{"krate":0,"index":22}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/mutable_keys.rs","byte_start":13039,"byte_end":13047,"line_start":51,"line_end":51,"column_start":31,"column_end":39},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":413},"to":{"krate":0,"index":45}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":92637,"byte_end":92649,"line_start":13,"line_end":13,"column_start":21,"column_end":33},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":115},"to":{"krate":1,"index":9394}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":92949,"byte_end":92961,"line_start":21,"line_end":21,"column_start":12,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":96010,"byte_end":96023,"line_start":103,"line_end":103,"column_start":40,"column_end":53},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":133},"to":{"krate":1,"index":3028}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core/raw.rs","byte_start":96138,"byte_end":96151,"line_start":106,"line_end":106,"column_start":16,"column_end":29},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":133},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":72213,"byte_end":72225,"line_start":58,"line_end":58,"column_start":22,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":197},"to":{"krate":1,"index":2637}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":72911,"byte_end":72923,"line_start":81,"line_end":81,"column_start":27,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":197},"to":{"krate":1,"index":9394}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":73242,"byte_end":73254,"line_start":94,"line_end":94,"column_start":24,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":197},"to":{"krate":0,"index":1348}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":73757,"byte_end":73769,"line_start":121,"line_end":121,"column_start":12,"column_end":24},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":85589,"byte_end":85594,"line_start":460,"line_end":460,"column_start":16,"column_end":21},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":269},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":88651,"byte_end":88656,"line_start":550,"line_end":550,"column_start":51,"column_end":56},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":269},"to":{"krate":1,"index":9394}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":89060,"byte_end":89073,"line_start":562,"line_end":562,"column_start":12,"column_end":25},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":133},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":90634,"byte_end":90647,"line_start":605,"line_end":605,"column_start":51,"column_end":64},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":133},"to":{"krate":1,"index":9394}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":91126,"byte_end":91137,"line_start":624,"line_end":624,"column_start":16,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map/core.rs","byte_start":91840,"byte_end":91851,"line_start":648,"line_end":648,"column_start":39,"column_end":50},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":312},"to":{"krate":1,"index":9394}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":17075,"byte_end":17083,"line_start":81,"line_end":81,"column_start":25,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":413},"to":{"krate":1,"index":2637}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":17481,"byte_end":17489,"line_start":100,"line_end":100,"column_start":27,"column_end":35},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":413},"to":{"krate":0,"index":1348}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":18013,"byte_end":18021,"line_start":126,"line_end":126,"column_start":30,"column_end":38},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":413},"to":{"krate":1,"index":9394}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":18483,"byte_end":18491,"line_start":144,"line_end":144,"column_start":12,"column_end":20},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":413},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":18917,"byte_end":18925,"line_start":161,"line_end":161,"column_start":15,"column_end":23},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":413},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":23608,"byte_end":23616,"line_start":319,"line_end":319,"column_start":15,"column_end":23},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":413},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":38072,"byte_end":38080,"line_start":768,"line_end":768,"column_start":15,"column_end":23},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":413},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":41062,"byte_end":41066,"line_start":860,"line_end":860,"column_start":29,"column_end":33},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":550},"to":{"krate":1,"index":7646}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":41181,"byte_end":41185,"line_start":866,"line_end":866,"column_start":36,"column_end":40},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":550},"to":{"krate":1,"index":7510}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":41287,"byte_end":41291,"line_start":870,"line_end":870,"column_start":34,"column_end":38},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":550},"to":{"krate":1,"index":7535}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":41395,"byte_end":41399,"line_start":876,"line_end":876,"column_start":30,"column_end":34},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":550},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":41490,"byte_end":41494,"line_start":879,"line_end":879,"column_start":22,"column_end":26},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":550},"to":{"krate":1,"index":2637}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":41646,"byte_end":41650,"line_start":887,"line_end":887,"column_start":39,"column_end":43},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":550},"to":{"krate":1,"index":9394}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":42151,"byte_end":42159,"line_start":904,"line_end":904,"column_start":25,"column_end":33},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":578},"to":{"krate":1,"index":7646}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":42262,"byte_end":42270,"line_start":910,"line_end":910,"column_start":36,"column_end":44},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":578},"to":{"krate":1,"index":7510}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":42364,"byte_end":42372,"line_start":914,"line_end":914,"column_start":34,"column_end":42},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":578},"to":{"krate":1,"index":7535}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":42472,"byte_end":42480,"line_start":920,"line_end":920,"column_start":30,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":578},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":42529,"byte_end":42537,"line_start":922,"line_end":922,"column_start":39,"column_end":47},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":578},"to":{"krate":1,"index":9394}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":43087,"byte_end":43093,"line_start":940,"line_end":940,"column_start":29,"column_end":35},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":600},"to":{"krate":1,"index":7646}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":43210,"byte_end":43216,"line_start":946,"line_end":946,"column_start":36,"column_end":42},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":600},"to":{"krate":1,"index":7510}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":43320,"byte_end":43326,"line_start":950,"line_end":950,"column_start":34,"column_end":40},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":600},"to":{"krate":1,"index":7535}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":43430,"byte_end":43436,"line_start":956,"line_end":956,"column_start":30,"column_end":36},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":600},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":43527,"byte_end":43533,"line_start":959,"line_end":959,"column_start":22,"column_end":28},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":600},"to":{"krate":1,"index":2637}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":43687,"byte_end":43693,"line_start":967,"line_end":967,"column_start":39,"column_end":45},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":600},"to":{"krate":1,"index":9394}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":44211,"byte_end":44220,"line_start":984,"line_end":984,"column_start":29,"column_end":38},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":628},"to":{"krate":1,"index":7646}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":44341,"byte_end":44350,"line_start":990,"line_end":990,"column_start":36,"column_end":45},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":628},"to":{"krate":1,"index":7510}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":44454,"byte_end":44463,"line_start":994,"line_end":994,"column_start":34,"column_end":43},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":628},"to":{"krate":1,"index":7535}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":44567,"byte_end":44576,"line_start":1000,"line_end":1000,"column_start":30,"column_end":39},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":628},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":45054,"byte_end":45064,"line_start":1015,"line_end":1015,"column_start":25,"column_end":35},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":648},"to":{"krate":1,"index":7646}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":45169,"byte_end":45179,"line_start":1021,"line_end":1021,"column_start":36,"column_end":46},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":648},"to":{"krate":1,"index":7510}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":45275,"byte_end":45285,"line_start":1025,"line_end":1025,"column_start":34,"column_end":44},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":648},"to":{"krate":1,"index":7535}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":45385,"byte_end":45395,"line_start":1031,"line_end":1031,"column_start":30,"column_end":40},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":648},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":45444,"byte_end":45454,"line_start":1033,"line_end":1033,"column_start":39,"column_end":49},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":648},"to":{"krate":1,"index":9394}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":45999,"byte_end":46003,"line_start":1051,"line_end":1051,"column_start":29,"column_end":33},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":670},"to":{"krate":1,"index":7646}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":46124,"byte_end":46128,"line_start":1057,"line_end":1057,"column_start":36,"column_end":40},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":670},"to":{"krate":1,"index":7510}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":46227,"byte_end":46231,"line_start":1061,"line_end":1061,"column_start":34,"column_end":38},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":670},"to":{"krate":1,"index":7535}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":46335,"byte_end":46339,"line_start":1067,"line_end":1067,"column_start":30,"column_end":34},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":670},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":46430,"byte_end":46434,"line_start":1070,"line_end":1070,"column_start":22,"column_end":26},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":670},"to":{"krate":1,"index":2637}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":46598,"byte_end":46602,"line_start":1078,"line_end":1078,"column_start":51,"column_end":55},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":670},"to":{"krate":1,"index":9394}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":47113,"byte_end":47120,"line_start":1095,"line_end":1095,"column_start":29,"column_end":36},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":698},"to":{"krate":1,"index":7646}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":47248,"byte_end":47255,"line_start":1101,"line_end":1101,"column_start":36,"column_end":43},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":698},"to":{"krate":1,"index":7510}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":47357,"byte_end":47364,"line_start":1105,"line_end":1105,"column_start":34,"column_end":41},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":698},"to":{"krate":1,"index":7535}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":47468,"byte_end":47475,"line_start":1111,"line_end":1111,"column_start":30,"column_end":37},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":698},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":47994,"byte_end":48002,"line_start":1126,"line_end":1126,"column_start":25,"column_end":33},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":718},"to":{"krate":1,"index":7646}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":48116,"byte_end":48124,"line_start":1132,"line_end":1132,"column_start":36,"column_end":44},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":718},"to":{"krate":1,"index":7510}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":48224,"byte_end":48232,"line_start":1136,"line_end":1136,"column_start":34,"column_end":42},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":718},"to":{"krate":1,"index":7535}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":48332,"byte_end":48340,"line_start":1142,"line_end":1142,"column_start":30,"column_end":38},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":718},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":48401,"byte_end":48409,"line_start":1144,"line_end":1144,"column_start":51,"column_end":59},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":718},"to":{"krate":1,"index":9394}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":48969,"byte_end":48974,"line_start":1162,"line_end":1162,"column_start":25,"column_end":30},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":740},"to":{"krate":1,"index":7646}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":49092,"byte_end":49097,"line_start":1168,"line_end":1168,"column_start":36,"column_end":41},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":740},"to":{"krate":1,"index":7510}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":49201,"byte_end":49206,"line_start":1172,"line_end":1172,"column_start":34,"column_end":39},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":740},"to":{"krate":1,"index":7535}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":49310,"byte_end":49315,"line_start":1178,"line_end":1178,"column_start":30,"column_end":35},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":740},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":49380,"byte_end":49385,"line_start":1180,"line_end":1180,"column_start":51,"column_end":56},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":740},"to":{"krate":1,"index":9394}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":50026,"byte_end":50034,"line_start":1203,"line_end":1203,"column_start":32,"column_end":40},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":413},"to":{"krate":1,"index":7466}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":50818,"byte_end":50826,"line_start":1235,"line_end":1235,"column_start":40,"column_end":48},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":413},"to":{"krate":1,"index":3312}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":51994,"byte_end":52002,"line_start":1280,"line_end":1280,"column_start":43,"column_end":51},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":413},"to":{"krate":1,"index":3316}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":53079,"byte_end":53087,"line_start":1322,"line_end":1322,"column_start":32,"column_end":40},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":413},"to":{"krate":1,"index":3312}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":54181,"byte_end":54189,"line_start":1364,"line_end":1364,"column_start":35,"column_end":43},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":413},"to":{"krate":1,"index":3316}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":54537,"byte_end":54545,"line_start":1375,"line_end":1375,"column_start":40,"column_end":48},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":413},"to":{"krate":1,"index":7462}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":55178,"byte_end":55186,"line_start":1395,"line_end":1395,"column_start":50,"column_end":58},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":413},"to":{"krate":1,"index":2922}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":55599,"byte_end":55607,"line_start":1413,"line_end":1413,"column_start":34,"column_end":42},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":413},"to":{"krate":1,"index":7475}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":56906,"byte_end":56914,"line_start":1446,"line_end":1446,"column_start":46,"column_end":54},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":413},"to":{"krate":1,"index":7475}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":57310,"byte_end":57318,"line_start":1460,"line_end":1460,"column_start":27,"column_end":35},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":413},"to":{"krate":1,"index":2994}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":57538,"byte_end":57546,"line_start":1470,"line_end":1470,"column_start":60,"column_end":68},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":413},"to":{"krate":1,"index":2667}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs","byte_start":57911,"byte_end":57919,"line_start":1487,"line_end":1487,"column_start":22,"column_end":30},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":413},"to":{"krate":1,"index":2672}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":101348,"byte_end":101356,"line_start":71,"line_end":71,"column_start":22,"column_end":30},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":924},"to":{"krate":1,"index":2637}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":101618,"byte_end":101626,"line_start":87,"line_end":87,"column_start":24,"column_end":32},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":924},"to":{"krate":0,"index":1348}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":102137,"byte_end":102145,"line_start":113,"line_end":113,"column_start":27,"column_end":35},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":924},"to":{"krate":1,"index":9394}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":102542,"byte_end":102550,"line_start":128,"line_end":128,"column_start":9,"column_end":17},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":102983,"byte_end":102991,"line_start":147,"line_end":147,"column_start":12,"column_end":20},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":106126,"byte_end":106134,"line_start":252,"line_end":252,"column_start":12,"column_end":20},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":118133,"byte_end":118141,"line_start":634,"line_end":634,"column_start":12,"column_end":20},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":120641,"byte_end":120649,"line_start":720,"line_end":720,"column_start":29,"column_end":37},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":924},"to":{"krate":1,"index":3312}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":121331,"byte_end":121339,"line_start":743,"line_end":743,"column_start":22,"column_end":30},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1053},"to":{"krate":1,"index":7646}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":121436,"byte_end":121444,"line_start":749,"line_end":749,"column_start":33,"column_end":41},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1053},"to":{"krate":1,"index":7510}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":121532,"byte_end":121540,"line_start":753,"line_end":753,"column_start":31,"column_end":39},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1053},"to":{"krate":1,"index":7535}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":121634,"byte_end":121642,"line_start":759,"line_end":759,"column_start":27,"column_end":35},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1053},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":121685,"byte_end":121693,"line_start":761,"line_end":761,"column_start":36,"column_end":44},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1053},"to":{"krate":1,"index":9394}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":122224,"byte_end":122228,"line_start":779,"line_end":779,"column_start":26,"column_end":30},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1069},"to":{"krate":1,"index":7646}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":122337,"byte_end":122341,"line_start":785,"line_end":785,"column_start":33,"column_end":37},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1069},"to":{"krate":1,"index":7510}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":122437,"byte_end":122441,"line_start":789,"line_end":789,"column_start":31,"column_end":35},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1069},"to":{"krate":1,"index":7535}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":122539,"byte_end":122543,"line_start":795,"line_end":795,"column_start":27,"column_end":31},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1069},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":122573,"byte_end":122577,"line_start":797,"line_end":797,"column_start":19,"column_end":23},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1069},"to":{"krate":1,"index":2637}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":122723,"byte_end":122727,"line_start":805,"line_end":805,"column_start":36,"column_end":40},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1069},"to":{"krate":1,"index":9394}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":123208,"byte_end":123213,"line_start":822,"line_end":822,"column_start":22,"column_end":27},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1090},"to":{"krate":1,"index":7646}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":123314,"byte_end":123319,"line_start":828,"line_end":828,"column_start":33,"column_end":38},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1090},"to":{"krate":1,"index":7510}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":123411,"byte_end":123416,"line_start":832,"line_end":832,"column_start":31,"column_end":36},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1090},"to":{"krate":1,"index":7535}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":123514,"byte_end":123519,"line_start":838,"line_end":838,"column_start":27,"column_end":32},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1090},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":123566,"byte_end":123571,"line_start":840,"line_end":840,"column_start":36,"column_end":41},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1090},"to":{"krate":1,"index":9394}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":123978,"byte_end":123986,"line_start":856,"line_end":856,"column_start":29,"column_end":37},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":924},"to":{"krate":1,"index":7466}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":124205,"byte_end":124213,"line_start":867,"line_end":867,"column_start":32,"column_end":40},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":924},"to":{"krate":1,"index":7462}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":124557,"byte_end":124565,"line_start":881,"line_end":881,"column_start":42,"column_end":50},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":924},"to":{"krate":1,"index":2922}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":124951,"byte_end":124959,"line_start":899,"line_end":899,"column_start":26,"column_end":34},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":924},"to":{"krate":1,"index":7475}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":125210,"byte_end":125218,"line_start":910,"line_end":910,"column_start":34,"column_end":42},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":924},"to":{"krate":1,"index":7475}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":125463,"byte_end":125471,"line_start":921,"line_end":921,"column_start":24,"column_end":32},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":924},"to":{"krate":1,"index":2994}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":125687,"byte_end":125695,"line_start":933,"line_end":933,"column_start":48,"column_end":56},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":924},"to":{"krate":1,"index":2667}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":125909,"byte_end":125917,"line_start":944,"line_end":944,"column_start":19,"column_end":27},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":924},"to":{"krate":1,"index":2672}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":125984,"byte_end":125992,"line_start":951,"line_end":951,"column_start":12,"column_end":20},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":127337,"byte_end":127347,"line_start":997,"line_end":997,"column_start":29,"column_end":39},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1168},"to":{"krate":1,"index":7646}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":127781,"byte_end":127791,"line_start":1018,"line_end":1018,"column_start":36,"column_end":46},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1168},"to":{"krate":1,"index":7510}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":128109,"byte_end":128119,"line_start":1033,"line_end":1033,"column_start":30,"column_end":40},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1168},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":128200,"byte_end":128210,"line_start":1040,"line_end":1040,"column_start":22,"column_end":32},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1168},"to":{"krate":1,"index":2637}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":128376,"byte_end":128386,"line_start":1049,"line_end":1049,"column_start":27,"column_end":37},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1168},"to":{"krate":1,"index":9394}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":129001,"byte_end":129013,"line_start":1071,"line_end":1071,"column_start":29,"column_end":41},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1196},"to":{"krate":1,"index":7646}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":129446,"byte_end":129458,"line_start":1092,"line_end":1092,"column_start":36,"column_end":48},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1196},"to":{"krate":1,"index":7510}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":129775,"byte_end":129787,"line_start":1107,"line_end":1107,"column_start":30,"column_end":42},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1196},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":129868,"byte_end":129880,"line_start":1114,"line_end":1114,"column_start":22,"column_end":34},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1196},"to":{"krate":1,"index":2637}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":130048,"byte_end":130060,"line_start":1123,"line_end":1123,"column_start":27,"column_end":39},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1196},"to":{"krate":1,"index":9394}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":130733,"byte_end":130752,"line_start":1144,"line_end":1144,"column_start":34,"column_end":53},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1224},"to":{"krate":1,"index":7646}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":131207,"byte_end":131226,"line_start":1168,"line_end":1168,"column_start":41,"column_end":60},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1224},"to":{"krate":1,"index":7510}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":131574,"byte_end":131593,"line_start":1186,"line_end":1186,"column_start":35,"column_end":54},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1224},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":131706,"byte_end":131725,"line_start":1194,"line_end":1194,"column_start":27,"column_end":46},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1224},"to":{"krate":1,"index":2637}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":131890,"byte_end":131909,"line_start":1202,"line_end":1202,"column_start":32,"column_end":51},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1224},"to":{"krate":1,"index":9394}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":132514,"byte_end":132519,"line_start":1224,"line_end":1224,"column_start":29,"column_end":34},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1263},"to":{"krate":1,"index":7646}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":132942,"byte_end":132947,"line_start":1247,"line_end":1247,"column_start":36,"column_end":41},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1263},"to":{"krate":1,"index":7510}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":133263,"byte_end":133268,"line_start":1264,"line_end":1264,"column_start":30,"column_end":35},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1263},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":133349,"byte_end":133354,"line_start":1271,"line_end":1271,"column_start":22,"column_end":27},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1263},"to":{"krate":1,"index":2637}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/set.rs","byte_start":133495,"byte_end":133500,"line_start":1279,"line_end":1279,"column_start":27,"column_end":32},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1263},"to":{"krate":1,"index":9394}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":3891,"byte_end":3900,"line_start":120,"line_end":120,"column_start":6,"column_end":15},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1463},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":4098,"byte_end":4104,"line_start":134,"line_end":134,"column_start":22,"column_end":28},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1475},"to":{"krate":1,"index":2637}},{"span":{"file_name":"/home/sewdohe/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/lib.rs","byte_start":4497,"byte_end":4503,"line_start":154,"line_end":154,"column_start":12,"column_end":18},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1475},"to":{"krate":4294967295,"index":4294967295}}]}