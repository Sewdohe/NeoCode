{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2","program":"C:\\Users\\ifEls\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","textwrap","--edition=2018","C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=9cd5efc12e0ef02a","-C","extra-filename=-9cd5efc12e0ef02a","--out-dir","c:\\Users\\ifEls\\Code\\nvim-config\\configNectar\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\ifEls\\Code\\nvim-config\\configNectar\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\ifEls\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\ifEls\\Code\\nvim-config\\configNectar\\target\\rls\\debug\\deps\\libtextwrap-9cd5efc12e0ef02a.rmeta"},"prelude":{"crate_id":{"name":"textwrap","disambiguator":[5612278515454842469,0]},"crate_root":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src","external_crates":[{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[5748888646060736057,0]}},{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[11647781593125135854,0]}},{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13810207351280985286,0]}},{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10856308035441163175,0]}},{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15195352194256834944,0]}},{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[8936219983177082535,0]}},{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9514052684633617057,0]}},{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11173665669995955307,0]}},{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[11489992985031151541,0]}},{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16828784558795307081,0]}},{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[10060143980449217236,0]}},{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[14817981415011782061,0]}},{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[16087529398371340149,0]}}],"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":0,"byte_end":72303,"line_start":1,"line_end":2135,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":8},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":6270,"byte_end":6276,"line_start":189,"line_end":189,"column_start":29,"column_end":35},"alias_span":null,"name":"dedent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":6306,"byte_end":6312,"line_start":190,"line_end":190,"column_start":29,"column_end":35},"alias_span":null,"name":"indent","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":0,"byte_end":72303,"line_start":1,"line_end":2135,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":43},{"krate":0,"index":78},{"krate":0,"index":115},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":265},{"krate":0,"index":277},{"krate":0,"index":283},{"krate":0,"index":147},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":163},{"krate":0,"index":177},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":190},{"krate":0,"index":197},{"krate":0,"index":203}],"decl_id":null,"docs":" The textwrap library provides functions for word wrapping and\n indenting text.","sig":null,"attributes":[{"value":"/ The textwrap library provides functions for word wrapping and","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":0,"byte_end":65,"line_start":1,"line_end":1,"column_start":1,"column_end":66}},{"value":"/ indenting text.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":66,"byte_end":85,"line_start":2,"line_end":2,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":86,"byte_end":89,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ # Wrapping Text","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":90,"byte_end":109,"line_start":4,"line_end":4,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":110,"byte_end":113,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Wrapping text can be very useful in command-line programs where","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":114,"byte_end":181,"line_start":6,"line_end":6,"column_start":1,"column_end":68}},{"value":"/ you want to format dynamic output nicely so it looks good in a","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":182,"byte_end":248,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"/ terminal. A quick example:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":249,"byte_end":279,"line_start":8,"line_end":8,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":280,"byte_end":283,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":284,"byte_end":297,"line_start":10,"line_end":10,"column_start":1,"column_end":14}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":298,"byte_end":313,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/     let text = \"textwrap: a small library for wrapping text.\";","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":314,"byte_end":380,"line_start":12,"line_end":12,"column_start":1,"column_end":67}},{"value":"/     println!(\"{}\", textwrap::fill(text, 18));","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":381,"byte_end":430,"line_start":13,"line_end":13,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":431,"byte_end":436,"line_start":14,"line_end":14,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":437,"byte_end":444,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":445,"byte_end":448,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ When you run this program, it will display the following output:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":449,"byte_end":517,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":518,"byte_end":521,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":522,"byte_end":533,"line_start":19,"line_end":19,"column_start":1,"column_end":12}},{"value":"/ textwrap: a small","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":534,"byte_end":555,"line_start":20,"line_end":20,"column_start":1,"column_end":22}},{"value":"/ library for","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":556,"byte_end":571,"line_start":21,"line_end":21,"column_start":1,"column_end":16}},{"value":"/ wrapping text.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":572,"byte_end":590,"line_start":22,"line_end":22,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":591,"byte_end":598,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":599,"byte_end":602,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ If you enable the `hyphenation` Cargo feature, you can get","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":603,"byte_end":665,"line_start":25,"line_end":25,"column_start":1,"column_end":63}},{"value":"/ automatic hyphenation for a number of languages:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":666,"byte_end":718,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":719,"byte_end":722,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":723,"byte_end":736,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/ # #[cfg(feature = \"hyphenation\")]","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":737,"byte_end":774,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/ use hyphenation::{Language, Load, Standard};","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":775,"byte_end":823,"line_start":30,"line_end":30,"column_start":1,"column_end":49}},{"value":"/ use textwrap::{fill, Options};","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":824,"byte_end":858,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":859,"byte_end":862,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # #[cfg(feature = \"hyphenation\")]","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":863,"byte_end":900,"line_start":33,"line_end":33,"column_start":1,"column_end":38}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":901,"byte_end":916,"line_start":34,"line_end":34,"column_start":1,"column_end":16}},{"value":"/     let text = \"textwrap: a small library for wrapping text.\";","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":917,"byte_end":983,"line_start":35,"line_end":35,"column_start":1,"column_end":67}},{"value":"/     let dictionary = Standard::from_embedded(Language::EnglishUS).unwrap();","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":984,"byte_end":1063,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/     let options = Options::new(18).word_splitter(dictionary);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":1064,"byte_end":1129,"line_start":37,"line_end":37,"column_start":1,"column_end":66}},{"value":"/     println!(\"{}\", fill(text, &options));","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":1130,"byte_end":1175,"line_start":38,"line_end":38,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":1176,"byte_end":1181,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":1182,"byte_end":1185,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # #[cfg(not(feature = \"hyphenation\"))]","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":1186,"byte_end":1228,"line_start":41,"line_end":41,"column_start":1,"column_end":43}},{"value":"/ # fn main() { }","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":1229,"byte_end":1248,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":1249,"byte_end":1256,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":1257,"byte_end":1260,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ The program will now output:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":1261,"byte_end":1293,"line_start":45,"line_end":45,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":1294,"byte_end":1297,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":1298,"byte_end":1309,"line_start":47,"line_end":47,"column_start":1,"column_end":12}},{"value":"/ textwrap: a small","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":1310,"byte_end":1331,"line_start":48,"line_end":48,"column_start":1,"column_end":22}},{"value":"/ library for wrap-","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":1332,"byte_end":1353,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/ ping text.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":1354,"byte_end":1368,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":1369,"byte_end":1376,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":1377,"byte_end":1380,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ See also the [`unfill`] and [`refill`] functions which allow you to","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":1381,"byte_end":1452,"line_start":53,"line_end":53,"column_start":1,"column_end":72}},{"value":"/ manipulate already wrapped text.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":1453,"byte_end":1489,"line_start":54,"line_end":54,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":1490,"byte_end":1493,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ## Wrapping Strings at Compile Time","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":1494,"byte_end":1533,"line_start":56,"line_end":56,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":1534,"byte_end":1537,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ If your strings are known at compile time, please take a look at","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":1538,"byte_end":1606,"line_start":58,"line_end":58,"column_start":1,"column_end":69}},{"value":"/ the procedural macros from the [textwrap-macros] crate.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":1607,"byte_end":1666,"line_start":59,"line_end":59,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":1667,"byte_end":1670,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ## Displayed Width vs Byte Size","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":1671,"byte_end":1706,"line_start":61,"line_end":61,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":1707,"byte_end":1710,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ To word wrap text, one must know the width of each word so one can","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":1711,"byte_end":1781,"line_start":63,"line_end":63,"column_start":1,"column_end":71}},{"value":"/ know when to break lines. This library will by default measure the","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":1782,"byte_end":1852,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ width of text using the _displayed width_, not the size in bytes.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":1853,"byte_end":1922,"line_start":65,"line_end":65,"column_start":1,"column_end":70}},{"value":"/ The `unicode-width` Cargo feature controls this.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":1923,"byte_end":1975,"line_start":66,"line_end":66,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":1976,"byte_end":1979,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ This is important for non-ASCII text. ASCII characters such as `a`","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":1980,"byte_end":2050,"line_start":68,"line_end":68,"column_start":1,"column_end":71}},{"value":"/ and `!` are simple and take up one column each. This means that","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":2051,"byte_end":2118,"line_start":69,"line_end":69,"column_start":1,"column_end":68}},{"value":"/ the displayed width is equal to the string length in bytes.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":2119,"byte_end":2182,"line_start":70,"line_end":70,"column_start":1,"column_end":64}},{"value":"/ However, non-ASCII characters and symbols take up more than one","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":2183,"byte_end":2250,"line_start":71,"line_end":71,"column_start":1,"column_end":68}},{"value":"/ byte when UTF-8 encoded: `é` is `0xc3 0xa9` (two bytes) and `⚙` is","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":2251,"byte_end":2324,"line_start":72,"line_end":72,"column_start":1,"column_end":71}},{"value":"/ `0xe2 0x9a 0x99` (three bytes) in UTF-8, respectively.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":2325,"byte_end":2383,"line_start":73,"line_end":73,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":2384,"byte_end":2387,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ This is why we take care to use the displayed width instead of the","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":2388,"byte_end":2458,"line_start":75,"line_end":75,"column_start":1,"column_end":71}},{"value":"/ byte count when computing line lengths. All functions in this","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":2459,"byte_end":2524,"line_start":76,"line_end":76,"column_start":1,"column_end":66}},{"value":"/ library handle Unicode characters like this when the","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":2525,"byte_end":2581,"line_start":77,"line_end":77,"column_start":1,"column_end":57}},{"value":"/ `unicode-width` Cargo feature is enabled (it is enabled by","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":2582,"byte_end":2644,"line_start":78,"line_end":78,"column_start":1,"column_end":63}},{"value":"/ default).","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":2645,"byte_end":2658,"line_start":79,"line_end":79,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":2659,"byte_end":2662,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ # Indentation and Dedentation","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":2663,"byte_end":2696,"line_start":81,"line_end":81,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":2697,"byte_end":2700,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ The textwrap library also offers functions for adding a prefix to","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":2701,"byte_end":2770,"line_start":83,"line_end":83,"column_start":1,"column_end":70}},{"value":"/ every line of a string and to remove leading whitespace. As an","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":2771,"byte_end":2837,"line_start":84,"line_end":84,"column_start":1,"column_end":67}},{"value":"/ example, the [`indent`] function allows you to turn lines of text","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":2838,"byte_end":2907,"line_start":85,"line_end":85,"column_start":1,"column_end":70}},{"value":"/ into a bullet list:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":2908,"byte_end":2931,"line_start":86,"line_end":86,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":2932,"byte_end":2935,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":2936,"byte_end":2943,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"/ let before = \"\\","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":2944,"byte_end":2963,"line_start":89,"line_end":89,"column_start":1,"column_end":20}},{"value":"/ foo","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":2964,"byte_end":2971,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ bar","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":2972,"byte_end":2979,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ baz","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":2980,"byte_end":2987,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ \";","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":2988,"byte_end":2994,"line_start":93,"line_end":93,"column_start":1,"column_end":7}},{"value":"/ let after = \"\\","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":2995,"byte_end":3013,"line_start":94,"line_end":94,"column_start":1,"column_end":19}},{"value":"/ * foo","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":3014,"byte_end":3023,"line_start":95,"line_end":95,"column_start":1,"column_end":10}},{"value":"/ * bar","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":3024,"byte_end":3033,"line_start":96,"line_end":96,"column_start":1,"column_end":10}},{"value":"/ * baz","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":3034,"byte_end":3043,"line_start":97,"line_end":97,"column_start":1,"column_end":10}},{"value":"/ \";","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":3044,"byte_end":3050,"line_start":98,"line_end":98,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(textwrap::indent(before, \"* \"), after);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":3051,"byte_end":3105,"line_start":99,"line_end":99,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":3106,"byte_end":3113,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":3114,"byte_end":3117,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ Removing leading whitespace is done with [`dedent`]:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":3118,"byte_end":3174,"line_start":102,"line_end":102,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":3175,"byte_end":3178,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":3179,"byte_end":3186,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"/ let before = \"","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":3187,"byte_end":3205,"line_start":105,"line_end":105,"column_start":1,"column_end":19}},{"value":"/     Some","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":3206,"byte_end":3218,"line_start":106,"line_end":106,"column_start":1,"column_end":13}},{"value":"/       indented","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":3219,"byte_end":3237,"line_start":107,"line_end":107,"column_start":1,"column_end":19}},{"value":"/         text","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":3238,"byte_end":3254,"line_start":108,"line_end":108,"column_start":1,"column_end":17}},{"value":"/ \";","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":3255,"byte_end":3261,"line_start":109,"line_end":109,"column_start":1,"column_end":7}},{"value":"/ let after = \"","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":3262,"byte_end":3279,"line_start":110,"line_end":110,"column_start":1,"column_end":18}},{"value":"/ Some","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":3280,"byte_end":3288,"line_start":111,"line_end":111,"column_start":1,"column_end":9}},{"value":"/   indented","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":3289,"byte_end":3303,"line_start":112,"line_end":112,"column_start":1,"column_end":15}},{"value":"/     text","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":3304,"byte_end":3316,"line_start":113,"line_end":113,"column_start":1,"column_end":13}},{"value":"/ \";","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":3317,"byte_end":3323,"line_start":114,"line_end":114,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(textwrap::dedent(before), after);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":3324,"byte_end":3372,"line_start":115,"line_end":115,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":3373,"byte_end":3380,"line_start":116,"line_end":116,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":3381,"byte_end":3384,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ # Cargo Features","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":3385,"byte_end":3405,"line_start":118,"line_end":118,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":3406,"byte_end":3409,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ The textwrap library can be slimmed down as needed via a number of","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":3410,"byte_end":3480,"line_start":120,"line_end":120,"column_start":1,"column_end":71}},{"value":"/ Cargo features. This means you only pay for the features you","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":3481,"byte_end":3545,"line_start":121,"line_end":121,"column_start":1,"column_end":65}},{"value":"/ actually use.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":3546,"byte_end":3563,"line_start":122,"line_end":122,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":3564,"byte_end":3567,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The full dependency graph, where dashed lines indicate optional","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":3568,"byte_end":3635,"line_start":124,"line_end":124,"column_start":1,"column_end":68}},{"value":"/ dependencies, is shown below:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":3636,"byte_end":3669,"line_start":125,"line_end":125,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":3670,"byte_end":3673,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ <img src=\"https://raw.githubusercontent.com/mgeisler/textwrap/master/images/textwrap-0.14.2.svg\">","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":3674,"byte_end":3775,"line_start":127,"line_end":127,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":3776,"byte_end":3779,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ ## Default Features","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":3780,"byte_end":3803,"line_start":129,"line_end":129,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":3804,"byte_end":3807,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ These features are enabled by default:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":3808,"byte_end":3850,"line_start":131,"line_end":131,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":3851,"byte_end":3854,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ * `unicode-linebreak`: enables finding words using the","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":3855,"byte_end":3913,"line_start":133,"line_end":133,"column_start":1,"column_end":59}},{"value":"/   [unicode-linebreak] crate, which implements the line breaking","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":3914,"byte_end":3981,"line_start":134,"line_end":134,"column_start":1,"column_end":68}},{"value":"/   algorithm described in [Unicode Standard Annex","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":3982,"byte_end":4034,"line_start":135,"line_end":135,"column_start":1,"column_end":53}},{"value":"/   #14](https://www.unicode.org/reports/tr14/).","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":4035,"byte_end":4085,"line_start":136,"line_end":136,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":4086,"byte_end":4089,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/   This feature can be disabled if you are happy to find words","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":4090,"byte_end":4155,"line_start":138,"line_end":138,"column_start":1,"column_end":66}},{"value":"/   separated by ASCII space characters only. People wrapping text","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":4156,"byte_end":4224,"line_start":139,"line_end":139,"column_start":1,"column_end":69}},{"value":"/   with emojis or East-Asian characters will want most likely want","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":4225,"byte_end":4294,"line_start":140,"line_end":140,"column_start":1,"column_end":70}},{"value":"/   to enable this feature. See the","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":4295,"byte_end":4332,"line_start":141,"line_end":141,"column_start":1,"column_end":38}},{"value":"/   [`word_separators::WordSeparator`] trait for details.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":4333,"byte_end":4392,"line_start":142,"line_end":142,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":4393,"byte_end":4396,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ * `unicode-width`: enables correct width computation of non-ASCII","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":4397,"byte_end":4466,"line_start":144,"line_end":144,"column_start":1,"column_end":70}},{"value":"/   characters via the [unicode-width] crate. Without this feature,","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":4467,"byte_end":4536,"line_start":145,"line_end":145,"column_start":1,"column_end":70}},{"value":"/   every [`char`] is 1 column wide, except for emojis which are 2","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":4537,"byte_end":4605,"line_start":146,"line_end":146,"column_start":1,"column_end":69}},{"value":"/   columns wide. See the [`core::display_width`] function for","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":4606,"byte_end":4670,"line_start":147,"line_end":147,"column_start":1,"column_end":65}},{"value":"/   details.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":4671,"byte_end":4685,"line_start":148,"line_end":148,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":4686,"byte_end":4689,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/   This feature can be disabled if you only need to wrap ASCII","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":4690,"byte_end":4755,"line_start":150,"line_end":150,"column_start":1,"column_end":66}},{"value":"/   text, or if the functions in [`core`] are used directly with","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":4756,"byte_end":4822,"line_start":151,"line_end":151,"column_start":1,"column_end":67}},{"value":"/   [`core::Fragment`]s for which the widths have been computed in","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":4823,"byte_end":4891,"line_start":152,"line_end":152,"column_start":1,"column_end":69}},{"value":"/   other ways.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":4892,"byte_end":4909,"line_start":153,"line_end":153,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":4910,"byte_end":4913,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ * `smawk`: enables linear-time wrapping of the whole paragraph via","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":4914,"byte_end":4984,"line_start":155,"line_end":155,"column_start":1,"column_end":71}},{"value":"/   the [smawk] crate. See the [`wrap_algorithms::wrap_optimal_fit`]","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":4985,"byte_end":5055,"line_start":156,"line_end":156,"column_start":1,"column_end":71}},{"value":"/   function for details on the optimal-fit algorithm.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":5056,"byte_end":5112,"line_start":157,"line_end":157,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":5113,"byte_end":5116,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/   This feature can be disabled if you only ever intend to use","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":5117,"byte_end":5182,"line_start":159,"line_end":159,"column_start":1,"column_end":66}},{"value":"/   [`wrap_algorithms::wrap_first_fit`].","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":5183,"byte_end":5225,"line_start":160,"line_end":160,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":5226,"byte_end":5229,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ ## Optional Features","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":5230,"byte_end":5254,"line_start":162,"line_end":162,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":5255,"byte_end":5258,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ These Cargo features enable new functionality:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":5259,"byte_end":5309,"line_start":164,"line_end":164,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":5310,"byte_end":5313,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ * `terminal_size`: enables automatic detection of the terminal","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":5314,"byte_end":5380,"line_start":166,"line_end":166,"column_start":1,"column_end":67}},{"value":"/   width via the [terminal_size] crate. See the","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":5381,"byte_end":5431,"line_start":167,"line_end":167,"column_start":1,"column_end":51}},{"value":"/   [`Options::with_termwidth`] constructor for details.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":5432,"byte_end":5490,"line_start":168,"line_end":168,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":5491,"byte_end":5494,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ * `hyphenation`: enables language-sensitive hyphenation via the","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":5495,"byte_end":5562,"line_start":170,"line_end":170,"column_start":1,"column_end":68}},{"value":"/   [hyphenation] crate. See the [`word_splitters::WordSplitter`] trait for details.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":5563,"byte_end":5649,"line_start":171,"line_end":171,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":5650,"byte_end":5653,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ [unicode-linebreak]: https://docs.rs/unicode-linebreak/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":5654,"byte_end":5713,"line_start":173,"line_end":173,"column_start":1,"column_end":60}},{"value":"/ [unicode-width]: https://docs.rs/unicode-width/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":5714,"byte_end":5765,"line_start":174,"line_end":174,"column_start":1,"column_end":52}},{"value":"/ [smawk]: https://docs.rs/smawk/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":5766,"byte_end":5801,"line_start":175,"line_end":175,"column_start":1,"column_end":36}},{"value":"/ [textwrap-macros]: https://docs.rs/textwrap-macros/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":5802,"byte_end":5857,"line_start":176,"line_end":176,"column_start":1,"column_end":56}},{"value":"/ [terminal_size]: https://docs.rs/terminal_size/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":5858,"byte_end":5909,"line_start":177,"line_end":177,"column_start":1,"column_end":52}},{"value":"/ [hyphenation]: https://docs.rs/hyphenation/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":5910,"byte_end":5957,"line_start":178,"line_end":178,"column_start":1,"column_end":48}},{"value":"forbid(unsafe_code)","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":6018,"byte_end":6041,"line_start":181,"line_end":181,"column_start":1,"column_end":24}},{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":6097,"byte_end":6119,"line_start":182,"line_end":182,"column_start":1,"column_end":23}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":6120,"byte_end":6159,"line_start":183,"line_end":183,"column_start":1,"column_end":40}},{"value":"allow(clippy :: redundant_field_names)","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":6160,"byte_end":6200,"line_start":184,"line_end":184,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":7},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":73734,"byte_end":73740,"line_start":52,"line_end":52,"column_start":8,"column_end":14},"name":"indent","qualname":"::indentation::indent","value":"pub fn indent(&str, &str) -> String","parent":null,"children":[],"decl_id":null,"docs":" Indent each line by the given prefix.","sig":null,"attributes":[{"value":"/ Indent each line by the given prefix.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":72499,"byte_end":72540,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":72541,"byte_end":72544,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":72545,"byte_end":72559,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":72560,"byte_end":72563,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":72564,"byte_end":72571,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ use textwrap::indent;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":72572,"byte_end":72597,"line_start":12,"line_end":12,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":72598,"byte_end":72601,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(indent(\"First line.\\nSecond line.\\n\", \"  \"),","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":72602,"byte_end":72661,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/            \"  First line.\\n  Second line.\\n\");","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":72662,"byte_end":72712,"line_start":15,"line_end":15,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":72713,"byte_end":72720,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":72721,"byte_end":72724,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ When indenting, trailing whitespace is stripped from the prefix.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":72725,"byte_end":72793,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ This means that empty lines remain empty afterwards:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":72794,"byte_end":72850,"line_start":19,"line_end":19,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":72851,"byte_end":72854,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":72855,"byte_end":72862,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ use textwrap::indent;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":72863,"byte_end":72888,"line_start":22,"line_end":22,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":72889,"byte_end":72892,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(indent(\"First line.\\n\\n\\nSecond line.\\n\", \"  \"),","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":72893,"byte_end":72956,"line_start":24,"line_end":24,"column_start":1,"column_end":64}},{"value":"/            \"  First line.\\n\\n\\n  Second line.\\n\");","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":72957,"byte_end":73011,"line_start":25,"line_end":25,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":73012,"byte_end":73019,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":73020,"byte_end":73023,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Notice how `\"\\n\\n\\n\"` remained as `\"\\n\\n\\n\"`.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":73024,"byte_end":73073,"line_start":28,"line_end":28,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":73074,"byte_end":73077,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This feature is useful when you want to indent text and have a","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":73078,"byte_end":73144,"line_start":30,"line_end":30,"column_start":1,"column_end":67}},{"value":"/ space between your prefix and the text. In this case, you _don't_","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":73145,"byte_end":73214,"line_start":31,"line_end":31,"column_start":1,"column_end":70}},{"value":"/ want a trailing space on empty lines:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":73215,"byte_end":73256,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":73257,"byte_end":73260,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":73261,"byte_end":73268,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ use textwrap::indent;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":73269,"byte_end":73294,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":73295,"byte_end":73298,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(indent(\"foo = 123\\n\\nprint(foo)\\n\", \"# \"),","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":73299,"byte_end":73356,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/            \"# foo = 123\\n#\\n# print(foo)\\n\");","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":73357,"byte_end":73406,"line_start":38,"line_end":38,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":73407,"byte_end":73414,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":73415,"byte_end":73418,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Notice how `\"\\n\\n\"` became `\"\\n#\\n\"` instead of `\"\\n# \\n\"` which","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":73419,"byte_end":73487,"line_start":41,"line_end":41,"column_start":1,"column_end":69}},{"value":"/ would have trailing whitespace.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":73488,"byte_end":73523,"line_start":42,"line_end":42,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":73524,"byte_end":73527,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Leading and trailing whitespace coming from the text itself is","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":73528,"byte_end":73594,"line_start":44,"line_end":44,"column_start":1,"column_end":67}},{"value":"/ kept unchanged:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":73595,"byte_end":73614,"line_start":45,"line_end":45,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":73615,"byte_end":73618,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":73619,"byte_end":73626,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ use textwrap::indent;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":73627,"byte_end":73652,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":73653,"byte_end":73656,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(indent(\" \\t  Foo   \", \"->\"), \"-> \\t  Foo   \");","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":73657,"byte_end":73718,"line_start":50,"line_end":50,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":73719,"byte_end":73726,"line_start":51,"line_end":51,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":8},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":74959,"byte_end":74965,"line_start":95,"line_end":95,"column_start":8,"column_end":14},"name":"dedent","qualname":"::indentation::dedent","value":"pub fn dedent(&str) -> String","parent":null,"children":[],"decl_id":null,"docs":" Removes common leading whitespace from each line.","sig":null,"attributes":[{"value":"/ Removes common leading whitespace from each line.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":74570,"byte_end":74623,"line_start":77,"line_end":77,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":74624,"byte_end":74627,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ This function will look at each non-empty line and determine the","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":74628,"byte_end":74696,"line_start":79,"line_end":79,"column_start":1,"column_end":69}},{"value":"/ maximum amount of whitespace that can be removed from all lines:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":74697,"byte_end":74765,"line_start":80,"line_end":80,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":74766,"byte_end":74769,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":74770,"byte_end":74777,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/ use textwrap::dedent;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":74778,"byte_end":74803,"line_start":83,"line_end":83,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":74804,"byte_end":74807,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(dedent(\"","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":74808,"byte_end":74831,"line_start":85,"line_end":85,"column_start":1,"column_end":24}},{"value":"/     1st line","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":74832,"byte_end":74848,"line_start":86,"line_end":86,"column_start":1,"column_end":17}},{"value":"/       2nd line","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":74849,"byte_end":74867,"line_start":87,"line_end":87,"column_start":1,"column_end":19}},{"value":"/     3rd line","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":74868,"byte_end":74884,"line_start":88,"line_end":88,"column_start":1,"column_end":17}},{"value":"/ \"), \"","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":74885,"byte_end":74894,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/ 1st line","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":74895,"byte_end":74907,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"/   2nd line","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":74908,"byte_end":74922,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/ 3rd line","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":74923,"byte_end":74935,"line_start":92,"line_end":92,"column_start":1,"column_end":13}},{"value":"/ \");","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":74936,"byte_end":74943,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\indentation.rs","byte_start":74944,"byte_end":74951,"line_start":94,"line_end":94,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":16},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"word_separators","qualname":"::word_separators","value":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","parent":null,"children":[{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":33},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":215},{"krate":0,"index":39}],"decl_id":null,"docs":" Functionality for finding words.","sig":null,"attributes":[{"value":"/ Functionality for finding words.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":80579,"byte_end":80615,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":80616,"byte_end":80619,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ In order to wrap text, we need to know where the legal break","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":80620,"byte_end":80684,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/ points are, i.e., where the words of the text are. This means that","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":80685,"byte_end":80755,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/ we need to define what a \"word\" is.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":80756,"byte_end":80795,"line_start":5,"line_end":5,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":80796,"byte_end":80799,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ A simple approach is to simply split the text on whitespace, but","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":80800,"byte_end":80868,"line_start":7,"line_end":7,"column_start":1,"column_end":69}},{"value":"/ this does not work for East-Asian languages such as Chinese or","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":80869,"byte_end":80935,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/ Japanese where there are no spaces between words. Breaking a long","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":80936,"byte_end":81005,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/ sequence of emojis is another example where line breaks might be","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":81006,"byte_end":81074,"line_start":10,"line_end":10,"column_start":1,"column_end":69}},{"value":"/ wanted even if there are no whitespace to be found.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":81075,"byte_end":81130,"line_start":11,"line_end":11,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":81131,"byte_end":81134,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The [`WordSeparator`] trait is responsible for determining where","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":81135,"byte_end":81203,"line_start":13,"line_end":13,"column_start":1,"column_end":69}},{"value":"/ there words are in a line of text. Please refer to the trait and","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":81204,"byte_end":81272,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/ the structs which implement it for more information.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":81273,"byte_end":81329,"line_start":15,"line_end":15,"column_start":1,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":20},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":82248,"byte_end":82261,"line_start":41,"line_end":41,"column_start":11,"column_end":24},"name":"WordSeparator","qualname":"::word_separators::WordSeparator","value":"WordSeparator: WordSeparatorClone + std::fmt::Debug","parent":null,"children":[{"krate":0,"index":21}],"decl_id":null,"docs":" Describes where words occur in a line of text.","sig":null,"attributes":[{"value":"/ Describes where words occur in a line of text.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":81437,"byte_end":81487,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":81488,"byte_end":81491,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The simplest approach is say that words are separated by one or","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":81492,"byte_end":81559,"line_start":23,"line_end":23,"column_start":1,"column_end":68}},{"value":"/ more ASCII spaces (`' '`). This works for Western languages","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":81560,"byte_end":81623,"line_start":24,"line_end":24,"column_start":1,"column_end":64}},{"value":"/ without emojis. A more complex approach is to use the Unicode line","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":81624,"byte_end":81694,"line_start":25,"line_end":25,"column_start":1,"column_end":71}},{"value":"/ breaking algorithm, which finds break points in non-ASCII text.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":81695,"byte_end":81762,"line_start":26,"line_end":26,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":81763,"byte_end":81766,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ The line breaks occur between words, please see the","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":81767,"byte_end":81822,"line_start":28,"line_end":28,"column_start":1,"column_end":56}},{"value":"/ [`WordSplitter`](crate::word_splitters::WordSplitter) trait for","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":81823,"byte_end":81890,"line_start":29,"line_end":29,"column_start":1,"column_end":68}},{"value":"/ options of how to handle hyphenation of individual words.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":81891,"byte_end":81952,"line_start":30,"line_end":30,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":81953,"byte_end":81956,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":81957,"byte_end":81971,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":81972,"byte_end":81975,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":81976,"byte_end":81983,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ use textwrap::core::Word;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":81984,"byte_end":82013,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/ use textwrap::word_separators::{WordSeparator, AsciiSpace};","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":82014,"byte_end":82077,"line_start":36,"line_end":36,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":82078,"byte_end":82081,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let words = AsciiSpace.find_words(\"Hello World!\").collect::<Vec<_>>();","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":82082,"byte_end":82156,"line_start":38,"line_end":38,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(words, vec![Word::from(\"Hello \"), Word::from(\"World!\")]);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":82157,"byte_end":82229,"line_start":39,"line_end":39,"column_start":1,"column_end":73}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":82230,"byte_end":82237,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":82572,"byte_end":82582,"line_start":46,"line_end":46,"column_start":8,"column_end":18},"name":"find_words","qualname":"::word_separators::WordSeparator::find_words","value":"pub fn find_words<'a>(&Self, &'a str) -> Box<dyn Iterator<Item = Word> + 'a>","parent":{"krate":0,"index":20},"children":[],"decl_id":null,"docs":" Find all words in `line`.\n","sig":null,"attributes":[{"value":"/ Find all words in `line`.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":82535,"byte_end":82564,"line_start":45,"line_end":45,"column_start":5,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":82930,"byte_end":82948,"line_start":54,"line_end":54,"column_start":11,"column_end":29},"name":"WordSeparatorClone","qualname":"::word_separators::WordSeparatorClone","value":"WordSeparatorClone","parent":null,"children":[{"krate":0,"index":24}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":82958,"byte_end":82967,"line_start":55,"line_end":55,"column_start":8,"column_end":17},"name":"clone_box","qualname":"::word_separators::WordSeparatorClone::clone_box","value":"pub fn clone_box(&Self) -> Box<dyn WordSeparator>","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":83647,"byte_end":83657,"line_start":80,"line_end":80,"column_start":12,"column_end":22},"name":"AsciiSpace","qualname":"::word_separators::AsciiSpace","value":"","parent":null,"children":[],"decl_id":null,"docs":" Find words by splitting on regions of `' '` characters.\n","sig":null,"attributes":[{"value":"/ Find words by splitting on regions of `' '` characters.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":83537,"byte_end":83596,"line_start":78,"line_end":78,"column_start":1,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"word_splitters","qualname":"::word_splitters","value":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":63},{"krate":0,"index":217},{"krate":0,"index":219},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":65},{"krate":0,"index":224},{"krate":0,"index":226},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":67},{"krate":0,"index":71}],"decl_id":null,"docs":" Word splitting functionality.","sig":null,"attributes":[{"value":"/ Word splitting functionality.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":94594,"byte_end":94627,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":94628,"byte_end":94631,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ To wrap text into lines, long words sometimes need to be split","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":94632,"byte_end":94698,"line_start":3,"line_end":3,"column_start":1,"column_end":67}},{"value":"/ across lines. The [`WordSplitter`] trait defines this","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":94699,"byte_end":94756,"line_start":4,"line_end":4,"column_start":1,"column_end":58}},{"value":"/ functionality. [`HyphenSplitter`] is the default implementation of","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":94757,"byte_end":94827,"line_start":5,"line_end":5,"column_start":1,"column_end":71}},{"value":"/ this treat: it will simply split words on existing hyphens.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":94828,"byte_end":94891,"line_start":6,"line_end":6,"column_start":1,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":54},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":96067,"byte_end":96079,"line_start":40,"line_end":40,"column_start":11,"column_end":23},"name":"WordSplitter","qualname":"::word_splitters::WordSplitter","value":"WordSplitter: WordSplitterClone + std::fmt::Debug","parent":null,"children":[{"krate":0,"index":55}],"decl_id":null,"docs":" The `WordSplitter` trait describes where words can be split.","sig":null,"attributes":[{"value":"/ The `WordSplitter` trait describes where words can be split.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":94956,"byte_end":95020,"line_start":12,"line_end":12,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":95021,"byte_end":95024,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ If the textwrap crate has been compiled with the `hyphenation`","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":95025,"byte_end":95091,"line_start":14,"line_end":14,"column_start":1,"column_end":67}},{"value":"/ Cargo feature enabled, you will find an implementation of","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":95092,"byte_end":95153,"line_start":15,"line_end":15,"column_start":1,"column_end":62}},{"value":"/ `WordSplitter` by the `hyphenation::Standard` struct. Use this","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":95154,"byte_end":95220,"line_start":16,"line_end":16,"column_start":1,"column_end":67}},{"value":"/ struct for language-aware hyphenation:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":95221,"byte_end":95263,"line_start":17,"line_end":17,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":95264,"byte_end":95267,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":95268,"byte_end":95275,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ #[cfg(feature = \"hyphenation\")]","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":95276,"byte_end":95311,"line_start":20,"line_end":20,"column_start":1,"column_end":36}},{"value":"/ {","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":95312,"byte_end":95317,"line_start":21,"line_end":21,"column_start":1,"column_end":6}},{"value":"/     use hyphenation::{Language, Load, Standard};","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":95318,"byte_end":95370,"line_start":22,"line_end":22,"column_start":1,"column_end":53}},{"value":"/     use textwrap::{wrap, Options};","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":95371,"byte_end":95409,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":95410,"byte_end":95413,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/     let text = \"Oxidation is the loss of electrons.\";","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":95414,"byte_end":95471,"line_start":25,"line_end":25,"column_start":1,"column_end":58}},{"value":"/     let dictionary = Standard::from_embedded(Language::EnglishUS).unwrap();","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":95472,"byte_end":95551,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/     let options = Options::new(8).word_splitter(dictionary);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":95552,"byte_end":95616,"line_start":27,"line_end":27,"column_start":1,"column_end":65}},{"value":"/     assert_eq!(wrap(text, &options), vec![\"Oxida-\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":95617,"byte_end":95672,"line_start":28,"line_end":28,"column_start":1,"column_end":56}},{"value":"/                                           \"tion is\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":95673,"byte_end":95729,"line_start":29,"line_end":29,"column_start":1,"column_end":57}},{"value":"/                                           \"the loss\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":95730,"byte_end":95787,"line_start":30,"line_end":30,"column_start":1,"column_end":58}},{"value":"/                                           \"of elec-\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":95788,"byte_end":95845,"line_start":31,"line_end":31,"column_start":1,"column_end":58}},{"value":"/                                           \"trons.\"]);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":95846,"byte_end":95903,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":95904,"byte_end":95909,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":95910,"byte_end":95917,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":95918,"byte_end":95921,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Please see the documentation for the [hyphenation] crate for more","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":95922,"byte_end":95991,"line_start":36,"line_end":36,"column_start":1,"column_end":70}},{"value":"/ details.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":95992,"byte_end":96004,"line_start":37,"line_end":37,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":96005,"byte_end":96008,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [hyphenation]: https://docs.rs/hyphenation/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":96009,"byte_end":96056,"line_start":39,"line_end":39,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":96757,"byte_end":96769,"line_start":55,"line_end":55,"column_start":8,"column_end":20},"name":"split_points","qualname":"::word_splitters::WordSplitter::split_points","value":"pub fn split_points(&Self, &str) -> Vec<usize>","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Return all possible indices where `word` can be split.","sig":null,"attributes":[{"value":"/ Return all possible indices where `word` can be split.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":96123,"byte_end":96181,"line_start":41,"line_end":41,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":96186,"byte_end":96189,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ The indices returned must be in range `0..word.len()`. They","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":96194,"byte_end":96257,"line_start":43,"line_end":43,"column_start":5,"column_end":68}},{"value":"/ should point to the index _after_ the split point, i.e., after","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":96262,"byte_end":96328,"line_start":44,"line_end":44,"column_start":5,"column_end":71}},{"value":"/ `-` if splitting on hyphens. This way, `word.split_at(idx)`","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":96333,"byte_end":96396,"line_start":45,"line_end":45,"column_start":5,"column_end":68}},{"value":"/ will break the word into two well-formed pieces.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":96401,"byte_end":96453,"line_start":46,"line_end":46,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":96458,"byte_end":96461,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":96466,"byte_end":96480,"line_start":48,"line_end":48,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":96485,"byte_end":96488,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":96493,"byte_end":96500,"line_start":50,"line_end":50,"column_start":5,"column_end":12}},{"value":"/ use textwrap::word_splitters::{HyphenSplitter, NoHyphenation, WordSplitter};","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":96505,"byte_end":96585,"line_start":51,"line_end":51,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(NoHyphenation.split_points(\"cannot-be-split\"), vec![]);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":96590,"byte_end":96660,"line_start":52,"line_end":52,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(HyphenSplitter.split_points(\"can-be-split\"), vec![4, 7]);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":96665,"byte_end":96737,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":96742,"byte_end":96749,"line_start":54,"line_end":54,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":97079,"byte_end":97096,"line_start":63,"line_end":63,"column_start":11,"column_end":28},"name":"WordSplitterClone","qualname":"::word_splitters::WordSplitterClone","value":"WordSplitterClone","parent":null,"children":[{"krate":0,"index":57}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":97106,"byte_end":97115,"line_start":64,"line_end":64,"column_start":8,"column_end":17},"name":"clone_box","qualname":"::word_splitters::WordSplitterClone::clone_box","value":"pub fn clone_box(&Self) -> Box<dyn WordSplitter>","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":98033,"byte_end":98046,"line_start":99,"line_end":99,"column_start":12,"column_end":25},"name":"NoHyphenation","qualname":"::word_splitters::NoHyphenation","value":"","parent":null,"children":[],"decl_id":null,"docs":" Use this as a [`Options.word_splitter`] to avoid any kind of\n hyphenation:","sig":null,"attributes":[{"value":"/ Use this as a [`Options.word_splitter`] to avoid any kind of","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":97587,"byte_end":97651,"line_start":85,"line_end":85,"column_start":1,"column_end":65}},{"value":"/ hyphenation:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":97652,"byte_end":97668,"line_start":86,"line_end":86,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":97669,"byte_end":97672,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":97673,"byte_end":97680,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"/ use textwrap::{wrap, Options};","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":97681,"byte_end":97715,"line_start":89,"line_end":89,"column_start":1,"column_end":35}},{"value":"/ use textwrap::word_splitters::NoHyphenation;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":97716,"byte_end":97764,"line_start":90,"line_end":90,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":97765,"byte_end":97768,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ let options = Options::new(8).word_splitter(NoHyphenation);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":97769,"byte_end":97832,"line_start":92,"line_end":92,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(wrap(\"foo bar-baz\", &options),","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":97833,"byte_end":97878,"line_start":93,"line_end":93,"column_start":1,"column_end":46}},{"value":"/            vec![\"foo\", \"bar-baz\"]);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":97879,"byte_end":97918,"line_start":94,"line_end":94,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":97919,"byte_end":97926,"line_start":95,"line_end":95,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":97927,"byte_end":97930,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ [`Options.word_splitter`]: super::Options::word_splitter","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":97931,"byte_end":97991,"line_start":97,"line_end":97,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":98505,"byte_end":98519,"line_start":115,"line_end":115,"column_start":12,"column_end":26},"name":"HyphenSplitter","qualname":"::word_splitters::HyphenSplitter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Simple and default way to split words: splitting on existing\n hyphens only.","sig":null,"attributes":[{"value":"/ Simple and default way to split words: splitting on existing","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":98251,"byte_end":98315,"line_start":109,"line_end":109,"column_start":1,"column_end":65}},{"value":"/ hyphens only.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":98316,"byte_end":98333,"line_start":110,"line_end":110,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":98334,"byte_end":98337,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ You probably don't need to use this type since it's already used","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":98338,"byte_end":98406,"line_start":112,"line_end":112,"column_start":1,"column_end":69}},{"value":"/ by default by [`Options::new`](super::Options::new).","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":98407,"byte_end":98463,"line_start":113,"line_end":113,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":100909,"byte_end":100920,"line_start":185,"line_end":185,"column_start":8,"column_end":19},"name":"split_words","qualname":"::word_splitters::split_words","value":"pub fn split_words<'a, I, WordSplit>(I, &'a WordSplit) -> /*impl Trait*/ where\nI: IntoIterator<Item = Word>, WordSplit: WordSplitter","parent":null,"children":[],"decl_id":null,"docs":" Split words into smaller words according to the split points given\n by `word_splitter`.","sig":null,"attributes":[{"value":"/ Split words into smaller words according to the split points given","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":100089,"byte_end":100159,"line_start":161,"line_end":161,"column_start":1,"column_end":71}},{"value":"/ by `word_splitter`.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":100160,"byte_end":100183,"line_start":162,"line_end":162,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":100184,"byte_end":100187,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ Note that we split all words, regardless of their length. This is","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":100188,"byte_end":100257,"line_start":164,"line_end":164,"column_start":1,"column_end":70}},{"value":"/ to more cleanly separate the business of splitting (including","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":100258,"byte_end":100323,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ automatic hyphenation) from the business of word wrapping.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":100324,"byte_end":100386,"line_start":166,"line_end":166,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":100387,"byte_end":100390,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":100391,"byte_end":100405,"line_start":168,"line_end":168,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":100406,"byte_end":100409,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":100410,"byte_end":100417,"line_start":170,"line_end":170,"column_start":1,"column_end":8}},{"value":"/ use textwrap::core::Word;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":100418,"byte_end":100447,"line_start":171,"line_end":171,"column_start":1,"column_end":30}},{"value":"/ use textwrap::word_splitters::{split_words, NoHyphenation, HyphenSplitter};","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":100448,"byte_end":100527,"line_start":172,"line_end":172,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":100528,"byte_end":100531,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":100532,"byte_end":100547,"line_start":174,"line_end":174,"column_start":1,"column_end":16}},{"value":"/     split_words(vec![Word::from(\"foo-bar\")], &HyphenSplitter).collect::<Vec<_>>(),","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":100548,"byte_end":100634,"line_start":175,"line_end":175,"column_start":1,"column_end":87}},{"value":"/     vec![Word::from(\"foo-\"), Word::from(\"bar\")]","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":100635,"byte_end":100686,"line_start":176,"line_end":176,"column_start":1,"column_end":52}},{"value":"/ );","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":100687,"byte_end":100693,"line_start":177,"line_end":177,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":100694,"byte_end":100697,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ // The NoHyphenation splitter ignores the '-':","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":100698,"byte_end":100748,"line_start":179,"line_end":179,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":100749,"byte_end":100764,"line_start":180,"line_end":180,"column_start":1,"column_end":16}},{"value":"/     split_words(vec![Word::from(\"foo-bar\")], &NoHyphenation).collect::<Vec<_>>(),","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":100765,"byte_end":100850,"line_start":181,"line_end":181,"column_start":1,"column_end":86}},{"value":"/     vec![Word::from(\"foo-bar\")]","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":100851,"byte_end":100886,"line_start":182,"line_end":182,"column_start":1,"column_end":36}},{"value":"/ );","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":100887,"byte_end":100893,"line_start":183,"line_end":183,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":100894,"byte_end":100901,"line_start":184,"line_end":184,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":78},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"wrap_algorithms","qualname":"::wrap_algorithms","value":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":95},{"krate":0,"index":100},{"krate":0,"index":231},{"krate":0,"index":233},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":107},{"krate":0,"index":111}],"decl_id":null,"docs":" Word wrapping algorithms.","sig":null,"attributes":[{"value":"/ Word wrapping algorithms.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":104427,"byte_end":104456,"line_start":1,"line_end":1,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":104457,"byte_end":104460,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ After a text has been broken into words (or [`Fragment`]s), one","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":104461,"byte_end":104528,"line_start":3,"line_end":3,"column_start":1,"column_end":68}},{"value":"/ now has to decide how to break the fragments into lines. The","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":104529,"byte_end":104593,"line_start":4,"line_end":4,"column_start":1,"column_end":65}},{"value":"/ simplest algorithm for this is implemented by [`wrap_first_fit`]:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":104594,"byte_end":104663,"line_start":5,"line_end":5,"column_start":1,"column_end":70}},{"value":"/ it uses no look-ahead and simply adds fragments to the line as","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":104664,"byte_end":104730,"line_start":6,"line_end":6,"column_start":1,"column_end":67}},{"value":"/ long as they fit. However, this can lead to poor line breaks if a","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":104731,"byte_end":104800,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/ large fragment almost-but-not-quite fits on a line. When that","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":104801,"byte_end":104866,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"/ happens, the fragment is moved to the next line and it will leave","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":104867,"byte_end":104936,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/ behind a large gap. A more advanced algorithm, implemented by","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":104937,"byte_end":105002,"line_start":10,"line_end":10,"column_start":1,"column_end":66}},{"value":"/ [`wrap_optimal_fit`], will take this into account. The optimal-fit","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":105003,"byte_end":105073,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/ algorithm considers all possible line breaks and will attempt to","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":105074,"byte_end":105142,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"/ minimize the gaps left behind by overly short lines.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":105143,"byte_end":105199,"line_start":13,"line_end":13,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":105200,"byte_end":105203,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ While both algorithms run in linear time, the first-fit algorithm","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":105204,"byte_end":105273,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/ is about 4 times faster than the optimal-fit algorithm.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":105274,"byte_end":105333,"line_start":16,"line_end":16,"column_start":1,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":105866,"byte_end":105879,"line_start":32,"line_end":32,"column_start":11,"column_end":24},"name":"WrapAlgorithm","qualname":"::wrap_algorithms::WrapAlgorithm","value":"WrapAlgorithm: WrapAlgorithmClone + std::fmt::Debug","parent":null,"children":[{"krate":0,"index":87}],"decl_id":null,"docs":" Describes how to wrap words into lines.","sig":null,"attributes":[{"value":"/ Describes how to wrap words into lines.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":105494,"byte_end":105537,"line_start":25,"line_end":25,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":105538,"byte_end":105541,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ The simplest approach is to wrap words one word at a time. This is","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":105542,"byte_end":105612,"line_start":27,"line_end":27,"column_start":1,"column_end":71}},{"value":"/ implemented by [`FirstFit`]. If the `smawk` Cargo feature is","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":105613,"byte_end":105677,"line_start":28,"line_end":28,"column_start":1,"column_end":65}},{"value":"/ enabled, a more complex algorithm is available, implemented by","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":105678,"byte_end":105744,"line_start":29,"line_end":29,"column_start":1,"column_end":67}},{"value":"/ [`OptimalFit`], which will look at an entire paragraph at a time","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":105745,"byte_end":105813,"line_start":30,"line_end":30,"column_start":1,"column_end":69}},{"value":"/ in order to find optimal line breaks.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":105814,"byte_end":105855,"line_start":31,"line_end":31,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":106243,"byte_end":106247,"line_start":40,"line_end":40,"column_start":8,"column_end":12},"name":"wrap","qualname":"::wrap_algorithms::WrapAlgorithm::wrap","value":"pub fn wrap<'a, 'b>(&Self, &'b [Word], &'b [usize]) -> Vec<&'b [Word]>","parent":{"krate":0,"index":86},"children":[],"decl_id":null,"docs":" Wrap words according to line widths.","sig":null,"attributes":[{"value":"/ Wrap words according to line widths.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":105924,"byte_end":105964,"line_start":33,"line_end":33,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":105969,"byte_end":105972,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The `line_widths` slice gives the target line width for each","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":105977,"byte_end":106041,"line_start":35,"line_end":35,"column_start":5,"column_end":69}},{"value":"/ line (the last slice element is repeated as necessary). This","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":106046,"byte_end":106110,"line_start":36,"line_end":36,"column_start":5,"column_end":69}},{"value":"/ can be used to implement hanging indentation.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":106115,"byte_end":106164,"line_start":37,"line_end":37,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":106169,"byte_end":106172,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ Please see the implementors of the trait for examples.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":106177,"byte_end":106235,"line_start":39,"line_end":39,"column_start":5,"column_end":63}}]},{"kind":"Trait","id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":106613,"byte_end":106631,"line_start":48,"line_end":48,"column_start":11,"column_end":29},"name":"WrapAlgorithmClone","qualname":"::wrap_algorithms::WrapAlgorithmClone","value":"WrapAlgorithmClone","parent":null,"children":[{"krate":0,"index":91}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":106641,"byte_end":106650,"line_start":49,"line_end":49,"column_start":8,"column_end":17},"name":"clone_box","qualname":"::wrap_algorithms::WrapAlgorithmClone::clone_box","value":"pub fn clone_box(&Self) -> Box<dyn WrapAlgorithm>","parent":{"krate":0,"index":90},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":107502,"byte_end":107510,"line_start":78,"line_end":78,"column_start":12,"column_end":20},"name":"FirstFit","qualname":"::wrap_algorithms::FirstFit","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrap words using a fast and simple algorithm.","sig":null,"attributes":[{"value":"/ Wrap words using a fast and simple algorithm.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":107240,"byte_end":107289,"line_start":72,"line_end":72,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":107290,"byte_end":107293,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ This algorithm uses no look-ahead when finding line breaks.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":107294,"byte_end":107357,"line_start":74,"line_end":74,"column_start":1,"column_end":64}},{"value":"/ Implemented by [`wrap_first_fit`], please see that function for","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":107358,"byte_end":107425,"line_start":75,"line_end":75,"column_start":1,"column_end":68}},{"value":"/ details and examples.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":107426,"byte_end":107451,"line_start":76,"line_end":76,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":113592,"byte_end":113606,"line_start":233,"line_end":233,"column_start":8,"column_end":22},"name":"wrap_first_fit","qualname":"::wrap_algorithms::wrap_first_fit","value":"pub fn wrap_first_fit<'a, 'b, T: Fragment>(&'a [T], &'b [usize])\n-> Vec<&'a [T]>","parent":null,"children":[],"decl_id":null,"docs":" Wrap abstract fragments into lines with a first-fit algorithm.","sig":null,"attributes":[{"value":"/ Wrap abstract fragments into lines with a first-fit algorithm.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":107714,"byte_end":107780,"line_start":87,"line_end":87,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":107781,"byte_end":107784,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ The `line_widths` slice gives the target line width for each line","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":107785,"byte_end":107854,"line_start":89,"line_end":89,"column_start":1,"column_end":70}},{"value":"/ (the last slice element is repeated as necessary). This can be","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":107855,"byte_end":107921,"line_start":90,"line_end":90,"column_start":1,"column_end":67}},{"value":"/ used to implement hanging indentation.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":107922,"byte_end":107964,"line_start":91,"line_end":91,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":107965,"byte_end":107968,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ The fragments must already have been split into the desired","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":107969,"byte_end":108032,"line_start":93,"line_end":93,"column_start":1,"column_end":64}},{"value":"/ widths, this function will not (and cannot) attempt to split them","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":108033,"byte_end":108102,"line_start":94,"line_end":94,"column_start":1,"column_end":70}},{"value":"/ further when arranging them into lines.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":108103,"byte_end":108146,"line_start":95,"line_end":95,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":108147,"byte_end":108150,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ # First-Fit Algorithm","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":108151,"byte_end":108176,"line_start":97,"line_end":97,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":108177,"byte_end":108180,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ This implements a simple “greedy” algorithm: accumulate fragments","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":108181,"byte_end":108254,"line_start":99,"line_end":99,"column_start":1,"column_end":70}},{"value":"/ one by one and when a fragment no longer fits, start a new line.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":108255,"byte_end":108323,"line_start":100,"line_end":100,"column_start":1,"column_end":69}},{"value":"/ There is no look-ahead, we simply take first fit of the fragments","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":108324,"byte_end":108393,"line_start":101,"line_end":101,"column_start":1,"column_end":70}},{"value":"/ we find.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":108394,"byte_end":108406,"line_start":102,"line_end":102,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":108407,"byte_end":108410,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ While fast and predictable, this algorithm can produce poor line","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":108411,"byte_end":108479,"line_start":104,"line_end":104,"column_start":1,"column_end":69}},{"value":"/ breaks when a long fragment is moved to a new line, leaving behind","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":108480,"byte_end":108550,"line_start":105,"line_end":105,"column_start":1,"column_end":71}},{"value":"/ a large gap:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":108551,"byte_end":108567,"line_start":106,"line_end":106,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":108568,"byte_end":108571,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":108572,"byte_end":108579,"line_start":108,"line_end":108,"column_start":1,"column_end":8}},{"value":"/ use textwrap::core::Word;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":108580,"byte_end":108609,"line_start":109,"line_end":109,"column_start":1,"column_end":30}},{"value":"/ use textwrap::wrap_algorithms;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":108610,"byte_end":108644,"line_start":110,"line_end":110,"column_start":1,"column_end":35}},{"value":"/ use textwrap::word_separators::{AsciiSpace, WordSeparator};","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":108645,"byte_end":108708,"line_start":111,"line_end":111,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":108709,"byte_end":108712,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ // Helper to convert wrapped lines to a Vec<String>.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":108713,"byte_end":108769,"line_start":113,"line_end":113,"column_start":1,"column_end":57}},{"value":"/ fn lines_to_strings(lines: Vec<&[Word<'_>]>) -> Vec<String> {","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":108770,"byte_end":108835,"line_start":114,"line_end":114,"column_start":1,"column_end":66}},{"value":"/     lines.iter().map(|line| {","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":108836,"byte_end":108869,"line_start":115,"line_end":115,"column_start":1,"column_end":34}},{"value":"/         line.iter().map(|word| &**word).collect::<Vec<_>>().join(\" \")","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":108870,"byte_end":108943,"line_start":116,"line_end":116,"column_start":1,"column_end":74}},{"value":"/     }).collect::<Vec<_>>()","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":108944,"byte_end":108974,"line_start":117,"line_end":117,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":108975,"byte_end":108980,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":108981,"byte_end":108984,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ let text = \"These few words will unfortunately not wrap nicely.\";","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":108985,"byte_end":109054,"line_start":120,"line_end":120,"column_start":1,"column_end":70}},{"value":"/ let words = AsciiSpace.find_words(text).collect::<Vec<_>>();","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":109055,"byte_end":109119,"line_start":121,"line_end":121,"column_start":1,"column_end":65}},{"value":"/ assert_eq!(lines_to_strings(wrap_algorithms::wrap_first_fit(&words, &[15])),","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":109120,"byte_end":109200,"line_start":122,"line_end":122,"column_start":1,"column_end":81}},{"value":"/            vec![\"These few words\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":109201,"byte_end":109239,"line_start":123,"line_end":123,"column_start":1,"column_end":39}},{"value":"/                 \"will\",  // <-- short line","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":109240,"byte_end":109286,"line_start":124,"line_end":124,"column_start":1,"column_end":47}},{"value":"/                 \"unfortunately\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":109287,"byte_end":109323,"line_start":125,"line_end":125,"column_start":1,"column_end":37}},{"value":"/                 \"not wrap\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":109324,"byte_end":109355,"line_start":126,"line_end":126,"column_start":1,"column_end":32}},{"value":"/                 \"nicely.\"]);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":109356,"byte_end":109388,"line_start":127,"line_end":127,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":109389,"byte_end":109392,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ // We can avoid the short line if we look ahead:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":109393,"byte_end":109445,"line_start":129,"line_end":129,"column_start":1,"column_end":53}},{"value":"/ #[cfg(feature = \"smawk\")]","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":109446,"byte_end":109475,"line_start":130,"line_end":130,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(lines_to_strings(wrap_algorithms::wrap_optimal_fit(&words, &[15])),","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":109476,"byte_end":109558,"line_start":131,"line_end":131,"column_start":1,"column_end":83}},{"value":"/            vec![\"These few\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":109559,"byte_end":109591,"line_start":132,"line_end":132,"column_start":1,"column_end":33}},{"value":"/                 \"words will\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":109592,"byte_end":109625,"line_start":133,"line_end":133,"column_start":1,"column_end":34}},{"value":"/                 \"unfortunately\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":109626,"byte_end":109662,"line_start":134,"line_end":134,"column_start":1,"column_end":37}},{"value":"/                 \"not wrap\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":109663,"byte_end":109694,"line_start":135,"line_end":135,"column_start":1,"column_end":32}},{"value":"/                 \"nicely.\"]);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":109695,"byte_end":109727,"line_start":136,"line_end":136,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":109728,"byte_end":109735,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":109736,"byte_end":109739,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ The [`wrap_optimal_fit`] function was used above to get better","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":109740,"byte_end":109806,"line_start":139,"line_end":139,"column_start":1,"column_end":67}},{"value":"/ line breaks. It uses an advanced algorithm which tries to avoid","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":109807,"byte_end":109874,"line_start":140,"line_end":140,"column_start":1,"column_end":68}},{"value":"/ short lines. This function is about 4 times faster than","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":109875,"byte_end":109934,"line_start":141,"line_end":141,"column_start":1,"column_end":60}},{"value":"/ [`wrap_optimal_fit`].","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":109935,"byte_end":109960,"line_start":142,"line_end":142,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":109961,"byte_end":109964,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":109965,"byte_end":109979,"line_start":144,"line_end":144,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":109980,"byte_end":109983,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ Imagine you're building a house site and you have a number of","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":109984,"byte_end":110049,"line_start":146,"line_end":146,"column_start":1,"column_end":66}},{"value":"/ tasks you need to execute. Things like pour foundation, complete","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":110050,"byte_end":110118,"line_start":147,"line_end":147,"column_start":1,"column_end":69}},{"value":"/ framing, install plumbing, electric cabling, install insulation.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":110119,"byte_end":110187,"line_start":148,"line_end":148,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":110188,"byte_end":110191,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ The construction workers can only work during daytime, so they","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":110192,"byte_end":110258,"line_start":150,"line_end":150,"column_start":1,"column_end":67}},{"value":"/ need to pack up everything at night. Because they need to secure","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":110259,"byte_end":110327,"line_start":151,"line_end":151,"column_start":1,"column_end":69}},{"value":"/ their tools and move machines back to the garage, this process","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":110328,"byte_end":110394,"line_start":152,"line_end":152,"column_start":1,"column_end":67}},{"value":"/ takes much more time than the time it would take them to simply","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":110395,"byte_end":110462,"line_start":153,"line_end":153,"column_start":1,"column_end":68}},{"value":"/ switch to another task.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":110463,"byte_end":110490,"line_start":154,"line_end":154,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":110491,"byte_end":110494,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ You would like to make a list of tasks to execute every day based","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":110495,"byte_end":110564,"line_start":156,"line_end":156,"column_start":1,"column_end":70}},{"value":"/ on your estimates. You can model this with a program like this:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":110565,"byte_end":110632,"line_start":157,"line_end":157,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":110633,"byte_end":110636,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":110637,"byte_end":110644,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/ use textwrap::wrap_algorithms::wrap_first_fit;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":110645,"byte_end":110695,"line_start":160,"line_end":160,"column_start":1,"column_end":51}},{"value":"/ use textwrap::core::{Fragment, Word};","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":110696,"byte_end":110737,"line_start":161,"line_end":161,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":110738,"byte_end":110741,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug)]","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":110742,"byte_end":110762,"line_start":163,"line_end":163,"column_start":1,"column_end":21}},{"value":"/ struct Task<'a> {","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":110763,"byte_end":110784,"line_start":164,"line_end":164,"column_start":1,"column_end":22}},{"value":"/     name: &'a str,","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":110785,"byte_end":110807,"line_start":165,"line_end":165,"column_start":1,"column_end":23}},{"value":"/     hours: usize,   // Time needed to complete task.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":110808,"byte_end":110864,"line_start":166,"line_end":166,"column_start":1,"column_end":57}},{"value":"/     sweep: usize,   // Time needed for a quick sweep after task during the day.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":110865,"byte_end":110948,"line_start":167,"line_end":167,"column_start":1,"column_end":84}},{"value":"/     cleanup: usize, // Time needed for full cleanup if day ends with this task.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":110949,"byte_end":111032,"line_start":168,"line_end":168,"column_start":1,"column_end":84}},{"value":"/ }","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":111033,"byte_end":111038,"line_start":169,"line_end":169,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":111039,"byte_end":111042,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ impl Fragment for Task<'_> {","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":111043,"byte_end":111075,"line_start":171,"line_end":171,"column_start":1,"column_end":33}},{"value":"/     fn width(&self) -> usize { self.hours }","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":111076,"byte_end":111123,"line_start":172,"line_end":172,"column_start":1,"column_end":48}},{"value":"/     fn whitespace_width(&self) -> usize { self.sweep }","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":111124,"byte_end":111182,"line_start":173,"line_end":173,"column_start":1,"column_end":59}},{"value":"/     fn penalty_width(&self) -> usize { self.cleanup }","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":111183,"byte_end":111240,"line_start":174,"line_end":174,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":111241,"byte_end":111246,"line_start":175,"line_end":175,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":111247,"byte_end":111250,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ // The morning tasks","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":111251,"byte_end":111275,"line_start":177,"line_end":177,"column_start":1,"column_end":25}},{"value":"/ let tasks = vec![","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":111276,"byte_end":111297,"line_start":178,"line_end":178,"column_start":1,"column_end":22}},{"value":"/     Task { name: \"Foundation\",  hours: 4, sweep: 2, cleanup: 3 },","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":111298,"byte_end":111367,"line_start":179,"line_end":179,"column_start":1,"column_end":70}},{"value":"/     Task { name: \"Framing\",     hours: 3, sweep: 1, cleanup: 2 },","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":111368,"byte_end":111437,"line_start":180,"line_end":180,"column_start":1,"column_end":70}},{"value":"/     Task { name: \"Plumbing\",    hours: 2, sweep: 2, cleanup: 2 },","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":111438,"byte_end":111507,"line_start":181,"line_end":181,"column_start":1,"column_end":70}},{"value":"/     Task { name: \"Electrical\",  hours: 2, sweep: 1, cleanup: 2 },","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":111508,"byte_end":111577,"line_start":182,"line_end":182,"column_start":1,"column_end":70}},{"value":"/     Task { name: \"Insulation\",  hours: 2, sweep: 1, cleanup: 2 },","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":111578,"byte_end":111647,"line_start":183,"line_end":183,"column_start":1,"column_end":70}},{"value":"/     Task { name: \"Drywall\",     hours: 3, sweep: 1, cleanup: 2 },","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":111648,"byte_end":111717,"line_start":184,"line_end":184,"column_start":1,"column_end":70}},{"value":"/     Task { name: \"Floors\",      hours: 3, sweep: 1, cleanup: 2 },","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":111718,"byte_end":111787,"line_start":185,"line_end":185,"column_start":1,"column_end":70}},{"value":"/     Task { name: \"Countertops\", hours: 1, sweep: 1, cleanup: 2 },","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":111788,"byte_end":111857,"line_start":186,"line_end":186,"column_start":1,"column_end":70}},{"value":"/     Task { name: \"Bathrooms\",   hours: 2, sweep: 1, cleanup: 2 },","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":111858,"byte_end":111927,"line_start":187,"line_end":187,"column_start":1,"column_end":70}},{"value":"/ ];","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":111928,"byte_end":111934,"line_start":188,"line_end":188,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":111935,"byte_end":111938,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ // Fill tasks into days, taking `day_length` into account. The","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":111939,"byte_end":112005,"line_start":190,"line_end":190,"column_start":1,"column_end":67}},{"value":"/ // output shows the hours worked per day along with the names of","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":112006,"byte_end":112074,"line_start":191,"line_end":191,"column_start":1,"column_end":69}},{"value":"/ // the tasks for that day.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":112075,"byte_end":112105,"line_start":192,"line_end":192,"column_start":1,"column_end":31}},{"value":"/ fn assign_days<'a>(tasks: &[Task<'a>], day_length: usize) -> Vec<(usize, Vec<&'a str>)> {","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":112106,"byte_end":112199,"line_start":193,"line_end":193,"column_start":1,"column_end":94}},{"value":"/     let mut days = Vec::new();","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":112200,"byte_end":112234,"line_start":194,"line_end":194,"column_start":1,"column_end":35}},{"value":"/     // Assign tasks to days. The assignment is a vector of slices,","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":112235,"byte_end":112305,"line_start":195,"line_end":195,"column_start":1,"column_end":71}},{"value":"/     // with a slice per day.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":112306,"byte_end":112338,"line_start":196,"line_end":196,"column_start":1,"column_end":33}},{"value":"/     let assigned_days: Vec<&[Task<'a>]> = wrap_first_fit(&tasks, &[day_length]);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":112339,"byte_end":112423,"line_start":197,"line_end":197,"column_start":1,"column_end":85}},{"value":"/     for day in assigned_days.iter() {","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":112424,"byte_end":112465,"line_start":198,"line_end":198,"column_start":1,"column_end":42}},{"value":"/         let last = day.last().unwrap();","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":112466,"byte_end":112509,"line_start":199,"line_end":199,"column_start":1,"column_end":44}},{"value":"/         let work_hours: usize = day.iter().map(|t| t.hours + t.sweep).sum();","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":112510,"byte_end":112590,"line_start":200,"line_end":200,"column_start":1,"column_end":81}},{"value":"/         let names = day.iter().map(|t| t.name).collect::<Vec<_>>();","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":112591,"byte_end":112662,"line_start":201,"line_end":201,"column_start":1,"column_end":72}},{"value":"/         days.push((work_hours - last.sweep + last.cleanup, names));","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":112663,"byte_end":112734,"line_start":202,"line_end":202,"column_start":1,"column_end":72}},{"value":"/     }","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":112735,"byte_end":112744,"line_start":203,"line_end":203,"column_start":1,"column_end":10}},{"value":"/     days","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":112745,"byte_end":112757,"line_start":204,"line_end":204,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":112758,"byte_end":112763,"line_start":205,"line_end":205,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":112764,"byte_end":112767,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ // With a single crew working 8 hours a day:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":112768,"byte_end":112816,"line_start":207,"line_end":207,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":112817,"byte_end":112832,"line_start":208,"line_end":208,"column_start":1,"column_end":16}},{"value":"/     assign_days(&tasks, 8),","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":112833,"byte_end":112864,"line_start":209,"line_end":209,"column_start":1,"column_end":32}},{"value":"/     [","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":112865,"byte_end":112874,"line_start":210,"line_end":210,"column_start":1,"column_end":10}},{"value":"/         (7, vec![\"Foundation\"]),","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":112875,"byte_end":112911,"line_start":211,"line_end":211,"column_start":1,"column_end":37}},{"value":"/         (8, vec![\"Framing\", \"Plumbing\"]),","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":112912,"byte_end":112957,"line_start":212,"line_end":212,"column_start":1,"column_end":46}},{"value":"/         (7, vec![\"Electrical\", \"Insulation\"]),","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":112958,"byte_end":113008,"line_start":213,"line_end":213,"column_start":1,"column_end":51}},{"value":"/         (5, vec![\"Drywall\"]),","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":113009,"byte_end":113042,"line_start":214,"line_end":214,"column_start":1,"column_end":34}},{"value":"/         (7, vec![\"Floors\", \"Countertops\"]),","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":113043,"byte_end":113090,"line_start":215,"line_end":215,"column_start":1,"column_end":48}},{"value":"/         (4, vec![\"Bathrooms\"]),","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":113091,"byte_end":113126,"line_start":216,"line_end":216,"column_start":1,"column_end":36}},{"value":"/     ]","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":113127,"byte_end":113136,"line_start":217,"line_end":217,"column_start":1,"column_end":10}},{"value":"/ );","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":113137,"byte_end":113143,"line_start":218,"line_end":218,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":113144,"byte_end":113147,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ // With two crews working in shifts, 16 hours a day:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":113148,"byte_end":113204,"line_start":220,"line_end":220,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":113205,"byte_end":113220,"line_start":221,"line_end":221,"column_start":1,"column_end":16}},{"value":"/     assign_days(&tasks, 16),","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":113221,"byte_end":113253,"line_start":222,"line_end":222,"column_start":1,"column_end":33}},{"value":"/     [","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":113254,"byte_end":113263,"line_start":223,"line_end":223,"column_start":1,"column_end":10}},{"value":"/         (14, vec![\"Foundation\", \"Framing\", \"Plumbing\"]),","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":113264,"byte_end":113324,"line_start":224,"line_end":224,"column_start":1,"column_end":61}},{"value":"/         (15, vec![\"Electrical\", \"Insulation\", \"Drywall\", \"Floors\"]),","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":113325,"byte_end":113397,"line_start":225,"line_end":225,"column_start":1,"column_end":73}},{"value":"/         (6, vec![\"Countertops\", \"Bathrooms\"]),","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":113398,"byte_end":113448,"line_start":226,"line_end":226,"column_start":1,"column_end":51}},{"value":"/     ]","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":113449,"byte_end":113458,"line_start":227,"line_end":227,"column_start":1,"column_end":10}},{"value":"/ );","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":113459,"byte_end":113465,"line_start":228,"line_end":228,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":113466,"byte_end":113473,"line_start":229,"line_end":229,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":113474,"byte_end":113477,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ Apologies to anyone who actually knows how to build a house and","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":113478,"byte_end":113545,"line_start":231,"line_end":231,"column_start":1,"column_end":68}},{"value":"/ knows how long each step takes :-)","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":113546,"byte_end":113584,"line_start":232,"line_end":232,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"core","qualname":"::core","value":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":240},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":251},{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":138},{"krate":0,"index":142}],"decl_id":null,"docs":" Building blocks for advanced wrapping functionality.","sig":null,"attributes":[{"value":"/ Building blocks for advanced wrapping functionality.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":114425,"byte_end":114481,"line_start":1,"line_end":1,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":114482,"byte_end":114485,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The functions and structs in this module can be used to implement","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":114486,"byte_end":114555,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/ advanced wrapping functionality when the [`wrap`](super::wrap) and","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":114556,"byte_end":114626,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/ [`fill`](super::fill) function don't do what you want.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":114627,"byte_end":114685,"line_start":5,"line_end":5,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":114686,"byte_end":114689,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ In general, you want to follow these steps when wrapping","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":114690,"byte_end":114750,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/ something:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":114751,"byte_end":114765,"line_start":8,"line_end":8,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":114766,"byte_end":114769,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ 1. Split your input into [`Fragment`]s. These are abstract blocks","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":114770,"byte_end":114839,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/    of text or content which can be wrapped into lines. See","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":114840,"byte_end":114902,"line_start":11,"line_end":11,"column_start":1,"column_end":63}},{"value":"/    [`WordSeparator`](crate::word_separators::WordSeparator) for","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":114903,"byte_end":114970,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"/    how to do this for text.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":114971,"byte_end":115002,"line_start":13,"line_end":13,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":115003,"byte_end":115006,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ 2. Potentially split your fragments into smaller pieces. This","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":115007,"byte_end":115072,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"/    allows you to implement things like hyphenation. If you are","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":115073,"byte_end":115139,"line_start":16,"line_end":16,"column_start":1,"column_end":67}},{"value":"/    wrapping text represented as a sequence of [`Word`]s, then you","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":115140,"byte_end":115209,"line_start":17,"line_end":17,"column_start":1,"column_end":70}},{"value":"/    can use [`split_words`](crate::word_splitters::split_words) can","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":115210,"byte_end":115280,"line_start":18,"line_end":18,"column_start":1,"column_end":71}},{"value":"/    help you do this.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":115281,"byte_end":115305,"line_start":19,"line_end":19,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":115306,"byte_end":115309,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ 3. Potentially break apart fragments that are still too large to","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":115310,"byte_end":115378,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/    fit on a single line. This is implemented in [`break_words`].","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":115379,"byte_end":115447,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":115448,"byte_end":115451,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ 4. Finally take your fragments and put them into lines. There are","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":115452,"byte_end":115521,"line_start":24,"line_end":24,"column_start":1,"column_end":70}},{"value":"/    two algorithms for this in the","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":115522,"byte_end":115559,"line_start":25,"line_end":25,"column_start":1,"column_end":38}},{"value":"/    [`wrap_algorithms`](crate::wrap_algorithms) module:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":115560,"byte_end":115618,"line_start":26,"line_end":26,"column_start":1,"column_end":59}},{"value":"/    [`wrap_optimal_fit`](crate::wrap_algorithms::wrap_optimal_fit)","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":115619,"byte_end":115688,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/    and [`wrap_first_fit`](crate::wrap_algorithms::wrap_first_fit).","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":115689,"byte_end":115759,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/    The former produces better line breaks, the latter is faster.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":115760,"byte_end":115828,"line_start":29,"line_end":29,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":115829,"byte_end":115832,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ 5. Iterate through the slices returned by the wrapping functions","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":115833,"byte_end":115901,"line_start":31,"line_end":31,"column_start":1,"column_end":69}},{"value":"/    and construct your lines of output.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":115902,"byte_end":115944,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":115945,"byte_end":115948,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Please [open an issue](https://github.com/mgeisler/textwrap/) if","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":115949,"byte_end":116017,"line_start":34,"line_end":34,"column_start":1,"column_end":69}},{"value":"/ the functionality here is not sufficient or if you have ideas for","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":116018,"byte_end":116087,"line_start":35,"line_end":35,"column_start":1,"column_end":70}},{"value":"/ improving it. We would love to hear from you!","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":116088,"byte_end":116137,"line_start":36,"line_end":36,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":121623,"byte_end":121636,"line_start":176,"line_end":176,"column_start":8,"column_end":21},"name":"display_width","qualname":"::core::display_width","value":"pub fn display_width(&str) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Compute the display width of `text` while skipping over ANSI\n escape sequences.","sig":null,"attributes":[{"value":"/ Compute the display width of `text` while skipping over ANSI","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":117686,"byte_end":117750,"line_start":84,"line_end":84,"column_start":1,"column_end":65}},{"value":"/ escape sequences.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":117751,"byte_end":117772,"line_start":85,"line_end":85,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":117773,"byte_end":117776,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":117777,"byte_end":117791,"line_start":87,"line_end":87,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":117792,"byte_end":117795,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":117796,"byte_end":117803,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ use textwrap::core::display_width;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":117804,"byte_end":117842,"line_start":90,"line_end":90,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":117843,"byte_end":117846,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(display_width(\"Café Plain\"), 10);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":117847,"byte_end":117896,"line_start":92,"line_end":92,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(display_width(\"\\u{1b}[31mCafé Rouge\\u{1b}[0m\"), 10);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":117897,"byte_end":117965,"line_start":93,"line_end":93,"column_start":1,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":117966,"byte_end":117973,"line_start":94,"line_end":94,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":117974,"byte_end":117977,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ **Note:** When the `unicode-width` Cargo feature is disabled, the","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":117978,"byte_end":118047,"line_start":96,"line_end":96,"column_start":1,"column_end":70}},{"value":"/ width of a `char` is determined by a crude approximation which","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":118048,"byte_end":118114,"line_start":97,"line_end":97,"column_start":1,"column_end":67}},{"value":"/ simply counts chars below U+1100 as 1 column wide, and all other","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":118115,"byte_end":118183,"line_start":98,"line_end":98,"column_start":1,"column_end":69}},{"value":"/ characters as 2 columns wide. With the feature enabled, function","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":118184,"byte_end":118252,"line_start":99,"line_end":99,"column_start":1,"column_end":69}},{"value":"/ will correctly deal with [combining characters] in their","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":118253,"byte_end":118313,"line_start":100,"line_end":100,"column_start":1,"column_end":61}},{"value":"/ decomposed form (see [Unicode equivalence]).","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":118314,"byte_end":118362,"line_start":101,"line_end":101,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":118363,"byte_end":118366,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ An example of a decomposed character is “é”, which can be","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":118367,"byte_end":118433,"line_start":103,"line_end":103,"column_start":1,"column_end":62}},{"value":"/ decomposed into: “e” followed by a combining acute accent: “◌́”.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":118434,"byte_end":118513,"line_start":104,"line_end":104,"column_start":1,"column_end":69}},{"value":"/ Without the `unicode-width` Cargo feature, every `char` below","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":118514,"byte_end":118579,"line_start":105,"line_end":105,"column_start":1,"column_end":66}},{"value":"/ U+1100 has a width of 1. This includes the combining accent:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":118580,"byte_end":118644,"line_start":106,"line_end":106,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":118645,"byte_end":118648,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":118649,"byte_end":118656,"line_start":108,"line_end":108,"column_start":1,"column_end":8}},{"value":"/ use textwrap::core::display_width;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":118657,"byte_end":118695,"line_start":109,"line_end":109,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":118696,"byte_end":118699,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(display_width(\"Cafe Plain\"), 10);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":118700,"byte_end":118748,"line_start":111,"line_end":111,"column_start":1,"column_end":49}},{"value":"/ #[cfg(feature = \"unicode-width\")]","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":118749,"byte_end":118786,"line_start":112,"line_end":112,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(display_width(\"Cafe\\u{301} Plain\"), 10);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":118787,"byte_end":118842,"line_start":113,"line_end":113,"column_start":1,"column_end":56}},{"value":"/ #[cfg(not(feature = \"unicode-width\"))]","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":118843,"byte_end":118885,"line_start":114,"line_end":114,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(display_width(\"Cafe\\u{301} Plain\"), 11);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":118886,"byte_end":118941,"line_start":115,"line_end":115,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":118942,"byte_end":118949,"line_start":116,"line_end":116,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":118950,"byte_end":118953,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ ## Emojis and CJK Characters","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":118954,"byte_end":118986,"line_start":118,"line_end":118,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":118987,"byte_end":118990,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ Characters such as emojis and [CJK characters] used in the","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":118991,"byte_end":119053,"line_start":120,"line_end":120,"column_start":1,"column_end":63}},{"value":"/ Chinese, Japanese, and Korean langauges are seen as double-width,","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":119054,"byte_end":119123,"line_start":121,"line_end":121,"column_start":1,"column_end":70}},{"value":"/ even if the `unicode-width` feature is disabled:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":119124,"byte_end":119176,"line_start":122,"line_end":122,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":119177,"byte_end":119180,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":119181,"byte_end":119188,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ use textwrap::core::display_width;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":119189,"byte_end":119227,"line_start":125,"line_end":125,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":119228,"byte_end":119231,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(display_width(\"😂😭🥺🤣✨😍🙏🥰😊🔥\"), 20);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":119232,"byte_end":119309,"line_start":127,"line_end":127,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(display_width(\"你好\"), 4);  // “Nǐ hǎo” or “Hello” in Chinese","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":119310,"byte_end":119398,"line_start":128,"line_end":128,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":119399,"byte_end":119406,"line_start":129,"line_end":129,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":119407,"byte_end":119410,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ # Limitations","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":119411,"byte_end":119428,"line_start":131,"line_end":131,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":119429,"byte_end":119432,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ The displayed width of a string cannot always be computed from the","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":119433,"byte_end":119503,"line_start":133,"line_end":133,"column_start":1,"column_end":71}},{"value":"/ string alone. This is because the width depends on the rendering","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":119504,"byte_end":119572,"line_start":134,"line_end":134,"column_start":1,"column_end":69}},{"value":"/ engine used. This is particularly visible with [emoji modifier","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":119573,"byte_end":119639,"line_start":135,"line_end":135,"column_start":1,"column_end":67}},{"value":"/ sequences] where a base emoji is modified with, e.g., skin tone or","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":119640,"byte_end":119710,"line_start":136,"line_end":136,"column_start":1,"column_end":71}},{"value":"/ hair color modifiers. It is up to the rendering engine to detect","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":119711,"byte_end":119779,"line_start":137,"line_end":137,"column_start":1,"column_end":69}},{"value":"/ this and to produce a suitable emoji.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":119780,"byte_end":119821,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":119822,"byte_end":119825,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ A simple example is “❤️”, which consists of “❤” (U+2764: Black","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":119826,"byte_end":119906,"line_start":140,"line_end":140,"column_start":1,"column_end":67}},{"value":"/ Heart Symbol) followed by U+FE0F (Variation Selector-16). By","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":119907,"byte_end":119971,"line_start":141,"line_end":141,"column_start":1,"column_end":65}},{"value":"/ itself, “❤” is a black heart, but if you follow it with the","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":119972,"byte_end":120041,"line_start":142,"line_end":142,"column_start":1,"column_end":64}},{"value":"/ variant selector, you may get a wider red heart.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":120042,"byte_end":120094,"line_start":143,"line_end":143,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":120095,"byte_end":120098,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ A more complex example would be “👨‍🦰” which should depict a man","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":120099,"byte_end":120178,"line_start":145,"line_end":145,"column_start":1,"column_end":68}},{"value":"/ with red hair. Here the computed width is too large — and the","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":120179,"byte_end":120246,"line_start":146,"line_end":146,"column_start":1,"column_end":66}},{"value":"/ width differs depending on the use of the `unicode-width` feature:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":120247,"byte_end":120317,"line_start":147,"line_end":147,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":120318,"byte_end":120321,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":120322,"byte_end":120329,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/ use textwrap::core::display_width;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":120330,"byte_end":120368,"line_start":150,"line_end":150,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":120369,"byte_end":120372,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(\"👨‍🦰\".chars().collect::<Vec<char>>(), ['\\u{1f468}', '\\u{200d}', '\\u{1f9b0}']);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":120373,"byte_end":120474,"line_start":152,"line_end":152,"column_start":1,"column_end":94}},{"value":"/ #[cfg(feature = \"unicode-width\")]","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":120475,"byte_end":120512,"line_start":153,"line_end":153,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(display_width(\"👨‍🦰\"), 4);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":120513,"byte_end":120561,"line_start":154,"line_end":154,"column_start":1,"column_end":41}},{"value":"/ #[cfg(not(feature = \"unicode-width\"))]","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":120562,"byte_end":120604,"line_start":155,"line_end":155,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(display_width(\"👨‍🦰\"), 6);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":120605,"byte_end":120653,"line_start":156,"line_end":156,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":120654,"byte_end":120661,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":120662,"byte_end":120665,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ This happens because the grapheme consists of three code points:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":120666,"byte_end":120734,"line_start":159,"line_end":159,"column_start":1,"column_end":69}},{"value":"/ “👨” (U+1F468: Man), Zero Width Joiner (U+200D), and “🦰”","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":120735,"byte_end":120808,"line_start":160,"line_end":160,"column_start":1,"column_end":60}},{"value":"/ (U+1F9B0: Red Hair). You can see them above in the test. With","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":120809,"byte_end":120874,"line_start":161,"line_end":161,"column_start":1,"column_end":66}},{"value":"/ `unicode-width` enabled, the ZWJ is correctly seen as having zero","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":120875,"byte_end":120944,"line_start":162,"line_end":162,"column_start":1,"column_end":70}},{"value":"/ width, without it is counted as a double-width character.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":120945,"byte_end":121006,"line_start":163,"line_end":163,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":121007,"byte_end":121010,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ ## Terminal Support","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":121011,"byte_end":121034,"line_start":165,"line_end":165,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":121035,"byte_end":121038,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ Modern browsers typically do a great job at combining characters","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":121039,"byte_end":121107,"line_start":167,"line_end":167,"column_start":1,"column_end":69}},{"value":"/ as shown above, but terminals often struggle more. As an example,","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":121108,"byte_end":121177,"line_start":168,"line_end":168,"column_start":1,"column_end":70}},{"value":"/ Gnome Terminal version 3.38.1, shows “❤️” as a big red heart, but","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":121178,"byte_end":121255,"line_start":169,"line_end":169,"column_start":1,"column_end":70}},{"value":"/ shows \"👨‍🦰\" as “👨🦰”.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":121256,"byte_end":121298,"line_start":170,"line_end":170,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":121299,"byte_end":121302,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ [combining characters]: https://en.wikipedia.org/wiki/Combining_character","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":121303,"byte_end":121380,"line_start":172,"line_end":172,"column_start":1,"column_end":78}},{"value":"/ [Unicode equivalence]: https://en.wikipedia.org/wiki/Unicode_equivalence","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":121381,"byte_end":121457,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ [CJK characters]: https://en.wikipedia.org/wiki/CJK_characters","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":121458,"byte_end":121524,"line_start":174,"line_end":174,"column_start":1,"column_end":67}},{"value":"/ [emoji modifier sequences]: https://unicode.org/emoji/charts/full-emoji-modifiers.html","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":121525,"byte_end":121615,"line_start":175,"line_end":175,"column_start":1,"column_end":91}}]},{"kind":"Trait","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":122438,"byte_end":122446,"line_start":198,"line_end":198,"column_start":11,"column_end":19},"name":"Fragment","qualname":"::core::Fragment","value":"Fragment: std::fmt::Debug","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126}],"decl_id":null,"docs":" A (text) fragment denotes the unit which we wrap into lines.","sig":null,"attributes":[{"value":"/ A (text) fragment denotes the unit which we wrap into lines.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":121894,"byte_end":121958,"line_start":188,"line_end":188,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":121959,"byte_end":121962,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ Fragments represent an abstract _word_ plus the _whitespace_","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":121963,"byte_end":122027,"line_start":190,"line_end":190,"column_start":1,"column_end":65}},{"value":"/ following the word. In case the word falls at the end of the line,","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":122028,"byte_end":122098,"line_start":191,"line_end":191,"column_start":1,"column_end":71}},{"value":"/ the whitespace is dropped and a so-called _penalty_ is inserted","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":122099,"byte_end":122166,"line_start":192,"line_end":192,"column_start":1,"column_end":68}},{"value":"/ instead (typically `\"-\"` if the word was hyphenated).","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":122167,"byte_end":122224,"line_start":193,"line_end":193,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":122225,"byte_end":122228,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ For wrapping purposes, the precise content of the word, the","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":122229,"byte_end":122292,"line_start":195,"line_end":195,"column_start":1,"column_end":64}},{"value":"/ whitespace, and the penalty is irrelevant. All we need to know is","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":122293,"byte_end":122362,"line_start":196,"line_end":196,"column_start":1,"column_end":70}},{"value":"/ the displayed width of each part, which this trait provides.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":122363,"byte_end":122427,"line_start":197,"line_end":197,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":122535,"byte_end":122540,"line_start":200,"line_end":200,"column_start":8,"column_end":13},"name":"width","qualname":"::core::Fragment::width","value":"pub fn width(&Self) -> usize","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" Displayed width of word represented by this fragment.\n","sig":null,"attributes":[{"value":"/ Displayed width of word represented by this fragment.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":122470,"byte_end":122527,"line_start":199,"line_end":199,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":122685,"byte_end":122701,"line_start":204,"line_end":204,"column_start":8,"column_end":24},"name":"whitespace_width","qualname":"::core::Fragment::whitespace_width","value":"pub fn whitespace_width(&Self) -> usize","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" Displayed width of the whitespace that must follow the word\n when the word is not at the end of a line.\n","sig":null,"attributes":[{"value":"/ Displayed width of the whitespace that must follow the word","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":122563,"byte_end":122626,"line_start":202,"line_end":202,"column_start":5,"column_end":68}},{"value":"/ when the word is not at the end of a line.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":122631,"byte_end":122677,"line_start":203,"line_end":203,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":122836,"byte_end":122849,"line_start":208,"line_end":208,"column_start":8,"column_end":21},"name":"penalty_width","qualname":"::core::Fragment::penalty_width","value":"pub fn penalty_width(&Self) -> usize","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" Displayed width of the penalty that must be inserted if the\n word falls at the end of a line.\n","sig":null,"attributes":[{"value":"/ Displayed width of the penalty that must be inserted if the","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":122724,"byte_end":122787,"line_start":206,"line_end":206,"column_start":5,"column_end":68}},{"value":"/ word falls at the end of a line.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":122792,"byte_end":122828,"line_start":207,"line_end":207,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":123118,"byte_end":123122,"line_start":216,"line_end":216,"column_start":12,"column_end":16},"name":"Word","qualname":"::core::Word","value":"Word { word, whitespace, penalty }","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245}],"decl_id":null,"docs":" A piece of wrappable text, including any trailing whitespace.","sig":null,"attributes":[{"value":"/ A piece of wrappable text, including any trailing whitespace.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":122870,"byte_end":122935,"line_start":211,"line_end":211,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":122936,"byte_end":122939,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ A `Word` is an example of a [`Fragment`], so it has a width,","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":122940,"byte_end":123004,"line_start":213,"line_end":213,"column_start":1,"column_end":65}},{"value":"/ trailing whitespace, and potentially a penalty item.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":123005,"byte_end":123061,"line_start":214,"line_end":214,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":123159,"byte_end":123163,"line_start":218,"line_end":218,"column_start":9,"column_end":13},"name":"word","qualname":"::core::Word::word","value":"&'a str","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Word content.\n","sig":null,"attributes":[{"value":"/ Word content.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":123133,"byte_end":123150,"line_start":217,"line_end":217,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":123259,"byte_end":123269,"line_start":220,"line_end":220,"column_start":9,"column_end":19},"name":"whitespace","qualname":"::core::Word::whitespace","value":"&'a str","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Whitespace to insert if the word does not fall at the end of a line.\n","sig":null,"attributes":[{"value":"/ Whitespace to insert if the word does not fall at the end of a line.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":123178,"byte_end":123250,"line_start":219,"line_end":219,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":123361,"byte_end":123368,"line_start":222,"line_end":222,"column_start":9,"column_end":16},"name":"penalty","qualname":"::core::Word::penalty","value":"&'a str","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Penalty string to insert if the word falls at the end of a line.\n","sig":null,"attributes":[{"value":"/ Penalty string to insert if the word falls at the end of a line.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":123284,"byte_end":123352,"line_start":221,"line_end":221,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":123756,"byte_end":123760,"line_start":240,"line_end":240,"column_start":12,"column_end":16},"name":"from","qualname":"<Word>::from","value":"pub fn from(&str) -> Word","parent":null,"children":[],"decl_id":null,"docs":" Construct a `Word` from a string.","sig":null,"attributes":[{"value":"/ Construct a `Word` from a string.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":123593,"byte_end":123630,"line_start":236,"line_end":236,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":123635,"byte_end":123638,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ A trailing stretch of `' '` is automatically taken to be the","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":123643,"byte_end":123707,"line_start":238,"line_end":238,"column_start":5,"column_end":69}},{"value":"/ whitespace part of the word.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":123712,"byte_end":123744,"line_start":239,"line_end":239,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":124445,"byte_end":124456,"line_start":263,"line_end":263,"column_start":12,"column_end":23},"name":"break_apart","qualname":"<Word>::break_apart","value":"pub fn break_apart<'b>(&'b Self, usize) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Break this word into smaller words with a width of at most\n `line_width`. The whitespace and penalty from this `Word` is\n added to the last piece.","sig":null,"attributes":[{"value":"/ Break this word into smaller words with a width of at most","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":124017,"byte_end":124079,"line_start":250,"line_end":250,"column_start":5,"column_end":67}},{"value":"/ `line_width`. The whitespace and penalty from this `Word` is","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":124084,"byte_end":124148,"line_start":251,"line_end":251,"column_start":5,"column_end":69}},{"value":"/ added to the last piece.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":124153,"byte_end":124181,"line_start":252,"line_end":252,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":124186,"byte_end":124189,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":124194,"byte_end":124208,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":124213,"byte_end":124216,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":124221,"byte_end":124228,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ use textwrap::core::Word;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":124233,"byte_end":124262,"line_start":257,"line_end":257,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":124267,"byte_end":124282,"line_start":258,"line_end":258,"column_start":5,"column_end":20}},{"value":"/     Word::from(\"Hello!  \").break_apart(3).collect::<Vec<_>>(),","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":124287,"byte_end":124353,"line_start":259,"line_end":259,"column_start":5,"column_end":71}},{"value":"/     vec![Word::from(\"Hel\"), Word::from(\"lo!  \")]","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":124358,"byte_end":124410,"line_start":260,"line_end":260,"column_start":5,"column_end":57}},{"value":"/ );","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":124415,"byte_end":124421,"line_start":261,"line_end":261,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":124426,"byte_end":124433,"line_start":262,"line_end":262,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":142},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":126545,"byte_end":126556,"line_start":331,"line_end":331,"column_start":8,"column_end":19},"name":"break_words","qualname":"::core::break_words","value":"pub fn break_words<'a, I>(I, usize) -> Vec<Word> where I: IntoIterator<Item =\nWord>","parent":null,"children":[],"decl_id":null,"docs":" Forcibly break words wider than `line_width` into smaller words.","sig":null,"attributes":[{"value":"/ Forcibly break words wider than `line_width` into smaller words.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":126294,"byte_end":126362,"line_start":326,"line_end":326,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":126363,"byte_end":126366,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ This simply calls [`Word::break_apart`] on words that are too","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":126367,"byte_end":126432,"line_start":328,"line_end":328,"column_start":1,"column_end":66}},{"value":"/ wide. This means that no extra `'-'` is inserted, the word is","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":126433,"byte_end":126498,"line_start":329,"line_end":329,"column_start":1,"column_end":66}},{"value":"/ simply broken into smaller pieces.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":126499,"byte_end":126537,"line_start":330,"line_end":330,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":265},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":7136,"byte_end":7143,"line_start":230,"line_end":230,"column_start":12,"column_end":19},"name":"Options","qualname":"::Options","value":"Options { width, initial_indent, subsequent_indent, break_words, wrap_algorithm, word_separator, word_splitter }","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276}],"decl_id":null,"docs":" Holds settings for wrapping and filling text.\n","sig":null,"attributes":[{"value":"/ Holds settings for wrapping and filling text.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":7051,"byte_end":7100,"line_start":228,"line_end":228,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":270},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":7395,"byte_end":7400,"line_start":237,"line_end":237,"column_start":9,"column_end":14},"name":"width","qualname":"::Options::width","value":"usize","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" The width in columns at which the text will be wrapped.\n","sig":null,"attributes":[{"value":"/ The width in columns at which the text will be wrapped.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":7327,"byte_end":7386,"line_start":236,"line_end":236,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":271},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":7524,"byte_end":7538,"line_start":240,"line_end":240,"column_start":9,"column_end":23},"name":"initial_indent","qualname":"::Options::initial_indent","value":"&'a str","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Indentation used for the first line of output. See the\n [`Options::initial_indent`] method.\n","sig":null,"attributes":[{"value":"/ Indentation used for the first line of output. See the","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":7413,"byte_end":7471,"line_start":238,"line_end":238,"column_start":5,"column_end":63}},{"value":"/ [`Options::initial_indent`] method.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":7476,"byte_end":7515,"line_start":239,"line_end":239,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":272},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":7669,"byte_end":7686,"line_start":243,"line_end":243,"column_start":9,"column_end":26},"name":"subsequent_indent","qualname":"::Options::subsequent_indent","value":"&'a str","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Indentation used for subsequent lines of output. See the\n [`Options::subsequent_indent`] method.\n","sig":null,"attributes":[{"value":"/ Indentation used for subsequent lines of output. See the","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":7553,"byte_end":7613,"line_start":241,"line_end":241,"column_start":5,"column_end":65}},{"value":"/ [`Options::subsequent_indent`] method.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":7618,"byte_end":7660,"line_start":242,"line_end":242,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":273},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":7895,"byte_end":7906,"line_start":247,"line_end":247,"column_start":9,"column_end":20},"name":"break_words","qualname":"::Options::break_words","value":"bool","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Allow long words to be broken if they cannot fit on a line.\n When set to `false`, some lines may be longer than\n `self.width`. See the [`Options::break_words`] method.\n","sig":null,"attributes":[{"value":"/ Allow long words to be broken if they cannot fit on a line.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":7701,"byte_end":7764,"line_start":244,"line_end":244,"column_start":5,"column_end":68}},{"value":"/ When set to `false`, some lines may be longer than","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":7769,"byte_end":7823,"line_start":245,"line_end":245,"column_start":5,"column_end":59}},{"value":"/ `self.width`. See the [`Options::break_words`] method.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":7828,"byte_end":7886,"line_start":246,"line_end":246,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":274},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":8050,"byte_end":8064,"line_start":250,"line_end":250,"column_start":9,"column_end":23},"name":"wrap_algorithm","qualname":"::Options::wrap_algorithm","value":"WrapAlgo","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Wrapping algorithm to use, see the implementations of the\n [`wrap_algorithms::WrapAlgorithm`] trait for details.\n","sig":null,"attributes":[{"value":"/ Wrapping algorithm to use, see the implementations of the","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":7918,"byte_end":7979,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/ [`wrap_algorithms::WrapAlgorithm`] trait for details.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":7984,"byte_end":8041,"line_start":249,"line_end":249,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":8235,"byte_end":8249,"line_start":254,"line_end":254,"column_start":9,"column_end":23},"name":"word_separator","qualname":"::Options::word_separator","value":"WordSep","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" The line breaking algorithm to use, see\n [`word_separators::WordSeparator`] trait for an overview and\n possible implementations.\n","sig":null,"attributes":[{"value":"/ The line breaking algorithm to use, see","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":8080,"byte_end":8123,"line_start":251,"line_end":251,"column_start":5,"column_end":48}},{"value":"/ [`word_separators::WordSeparator`] trait for an overview and","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":8128,"byte_end":8192,"line_start":252,"line_end":252,"column_start":5,"column_end":69}},{"value":"/ possible implementations.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":8197,"byte_end":8226,"line_start":253,"line_end":253,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":276},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":8523,"byte_end":8536,"line_start":259,"line_end":259,"column_start":9,"column_end":22},"name":"word_splitter","qualname":"::Options::word_splitter","value":"WordSplit","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" The method for splitting words. This can be used to prohibit\n splitting words on hyphens, or it can be used to implement\n language-aware machine hyphenation. Please see the\n [`word_splitters::WordSplitter`] trait for details.\n","sig":null,"attributes":[{"value":"/ The method for splitting words. This can be used to prohibit","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":8264,"byte_end":8328,"line_start":255,"line_end":255,"column_start":5,"column_end":69}},{"value":"/ splitting words on hyphens, or it can be used to implement","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":8333,"byte_end":8395,"line_start":256,"line_end":256,"column_start":5,"column_end":67}},{"value":"/ language-aware machine hyphenation. Please see the","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":8400,"byte_end":8454,"line_start":257,"line_end":257,"column_start":5,"column_end":59}},{"value":"/ [`word_splitters::WordSplitter`] trait for details.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":8459,"byte_end":8514,"line_start":258,"line_end":258,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":13639,"byte_end":13642,"line_start":383,"line_end":383,"column_start":18,"column_end":21},"name":"new","qualname":"<Options>::new","value":"pub const fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Options`] with the specified width and static\n dispatch using the [`word_splitters::HyphenSplitter`].\n Equivalent to","sig":null,"attributes":[{"value":"/ Creates a new [`Options`] with the specified width and static","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":9644,"byte_end":9709,"line_start":299,"line_end":299,"column_start":5,"column_end":70}},{"value":"/ dispatch using the [`word_splitters::HyphenSplitter`].","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":9714,"byte_end":9772,"line_start":300,"line_end":300,"column_start":5,"column_end":63}},{"value":"/ Equivalent to","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":9777,"byte_end":9794,"line_start":301,"line_end":301,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":9799,"byte_end":9802,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":9807,"byte_end":9814,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"/ # use textwrap::word_splitters::{HyphenSplitter, WordSplitter};","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":9819,"byte_end":9886,"line_start":304,"line_end":304,"column_start":5,"column_end":72}},{"value":"/ # use textwrap::Options;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":9891,"byte_end":9919,"line_start":305,"line_end":305,"column_start":5,"column_end":33}},{"value":"/ # let width = 80;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":9924,"byte_end":9945,"line_start":306,"line_end":306,"column_start":5,"column_end":26}},{"value":"/ # let actual = Options::new(width);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":9950,"byte_end":9989,"line_start":307,"line_end":307,"column_start":5,"column_end":44}},{"value":"/ # let expected =","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":9994,"byte_end":10014,"line_start":308,"line_end":308,"column_start":5,"column_end":25}},{"value":"/ Options {","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":10019,"byte_end":10032,"line_start":309,"line_end":309,"column_start":5,"column_end":18}},{"value":"/     width: width,","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":10037,"byte_end":10058,"line_start":310,"line_end":310,"column_start":5,"column_end":26}},{"value":"/     initial_indent: \"\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":10063,"byte_end":10090,"line_start":311,"line_end":311,"column_start":5,"column_end":32}},{"value":"/     subsequent_indent: \"\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":10095,"byte_end":10125,"line_start":312,"line_end":312,"column_start":5,"column_end":35}},{"value":"/     break_words: true,","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":10130,"byte_end":10156,"line_start":313,"line_end":313,"column_start":5,"column_end":31}},{"value":"/     #[cfg(feature = \"unicode-linebreak\")]","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":10161,"byte_end":10206,"line_start":314,"line_end":314,"column_start":5,"column_end":50}},{"value":"/     word_separator: textwrap::word_separators::UnicodeBreakProperties,","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":10211,"byte_end":10285,"line_start":315,"line_end":315,"column_start":5,"column_end":79}},{"value":"/     #[cfg(not(feature = \"unicode-linebreak\"))]","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":10290,"byte_end":10340,"line_start":316,"line_end":316,"column_start":5,"column_end":55}},{"value":"/     word_separator: textwrap::word_separators::AsciiSpace,","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":10345,"byte_end":10407,"line_start":317,"line_end":317,"column_start":5,"column_end":67}},{"value":"/     #[cfg(feature = \"smawk\")]","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":10412,"byte_end":10445,"line_start":318,"line_end":318,"column_start":5,"column_end":38}},{"value":"/     wrap_algorithm: textwrap::wrap_algorithms::OptimalFit,","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":10450,"byte_end":10512,"line_start":319,"line_end":319,"column_start":5,"column_end":67}},{"value":"/     #[cfg(not(feature = \"smawk\"))]","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":10517,"byte_end":10555,"line_start":320,"line_end":320,"column_start":5,"column_end":43}},{"value":"/     wrap_algorithm: textwrap::wrap_algorithms::FirstFit,","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":10560,"byte_end":10620,"line_start":321,"line_end":321,"column_start":5,"column_end":65}},{"value":"/     word_splitter: textwrap::word_splitters::HyphenSplitter,","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":10625,"byte_end":10689,"line_start":322,"line_end":322,"column_start":5,"column_end":69}},{"value":"/ }","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":10694,"byte_end":10699,"line_start":323,"line_end":323,"column_start":5,"column_end":10}},{"value":"/ # ;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":10704,"byte_end":10711,"line_start":324,"line_end":324,"column_start":5,"column_end":12}},{"value":"/ # assert_eq!(actual.width, expected.width);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":10716,"byte_end":10763,"line_start":325,"line_end":325,"column_start":5,"column_end":52}},{"value":"/ # assert_eq!(actual.initial_indent, expected.initial_indent);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":10768,"byte_end":10833,"line_start":326,"line_end":326,"column_start":5,"column_end":70}},{"value":"/ # assert_eq!(actual.subsequent_indent, expected.subsequent_indent);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":10838,"byte_end":10909,"line_start":327,"line_end":327,"column_start":5,"column_end":76}},{"value":"/ # assert_eq!(actual.break_words, expected.break_words);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":10914,"byte_end":10973,"line_start":328,"line_end":328,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":10978,"byte_end":10985,"line_start":329,"line_end":329,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":10990,"byte_end":10993,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ Note that the default word separator and wrap algorithms","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":10998,"byte_end":11058,"line_start":331,"line_end":331,"column_start":5,"column_end":65}},{"value":"/ changes based on the available Cargo features. The best","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":11063,"byte_end":11122,"line_start":332,"line_end":332,"column_start":5,"column_end":64}},{"value":"/ available algorithm is used by default.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":11127,"byte_end":11170,"line_start":333,"line_end":333,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":11175,"byte_end":11178,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ Static dispatch means here, that the word splitter is stored as-is","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":11183,"byte_end":11253,"line_start":335,"line_end":335,"column_start":5,"column_end":75}},{"value":"/ and the type is known at compile-time. Thus the returned value","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":11258,"byte_end":11324,"line_start":336,"line_end":336,"column_start":5,"column_end":71}},{"value":"/ is actually a `Options<AsciiSpace, HyphenSplitter>`.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":11329,"byte_end":11385,"line_start":337,"line_end":337,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":11390,"byte_end":11393,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ Dynamic dispatch on the other hand, means that the word","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":11398,"byte_end":11457,"line_start":339,"line_end":339,"column_start":5,"column_end":64}},{"value":"/ separator and/or word splitter is stored as a trait object","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":11462,"byte_end":11524,"line_start":340,"line_end":340,"column_start":5,"column_end":67}},{"value":"/ such as a `Box<dyn word_splitters::WordSplitter>`. This way","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":11529,"byte_end":11592,"line_start":341,"line_end":341,"column_start":5,"column_end":68}},{"value":"/ the word splitter's inner type can be changed without changing","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":11597,"byte_end":11663,"line_start":342,"line_end":342,"column_start":5,"column_end":71}},{"value":"/ the type of this struct, which then would be just `Options` as","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":11668,"byte_end":11734,"line_start":343,"line_end":343,"column_start":5,"column_end":71}},{"value":"/ a short cut for `Options<Box<dyn","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":11739,"byte_end":11775,"line_start":344,"line_end":344,"column_start":5,"column_end":41}},{"value":"/ word_separators::WordSeparator>, Box<dyn","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":11780,"byte_end":11824,"line_start":345,"line_end":345,"column_start":5,"column_end":49}},{"value":"/ word_splitters::WordSplitter>>`.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":11829,"byte_end":11865,"line_start":346,"line_end":346,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":11870,"byte_end":11873,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ The value and type of the word splitter can be choose from the","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":11878,"byte_end":11944,"line_start":348,"line_end":348,"column_start":5,"column_end":71}},{"value":"/ start using the [`Options::with_word_splitter`] constructor or","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":11949,"byte_end":12015,"line_start":349,"line_end":349,"column_start":5,"column_end":71}},{"value":"/ changed afterwards using the [`Options::word_splitter`]","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":12020,"byte_end":12079,"line_start":350,"line_end":350,"column_start":5,"column_end":64}},{"value":"/ method. Whether static or dynamic dispatch is used, depends on","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":12084,"byte_end":12150,"line_start":351,"line_end":351,"column_start":5,"column_end":71}},{"value":"/ whether these functions are given a boxed","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":12155,"byte_end":12200,"line_start":352,"line_end":352,"column_start":5,"column_end":50}},{"value":"/ [`word_splitters::WordSplitter`] or not. Take for example:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":12205,"byte_end":12267,"line_start":353,"line_end":353,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":12272,"byte_end":12275,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":12280,"byte_end":12287,"line_start":355,"line_end":355,"column_start":5,"column_end":12}},{"value":"/ use textwrap::Options;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":12292,"byte_end":12318,"line_start":356,"line_end":356,"column_start":5,"column_end":31}},{"value":"/ use textwrap::word_splitters::{HyphenSplitter, NoHyphenation};","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":12323,"byte_end":12389,"line_start":357,"line_end":357,"column_start":5,"column_end":71}},{"value":"/ # use textwrap::word_splitters::WordSplitter;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":12394,"byte_end":12443,"line_start":358,"line_end":358,"column_start":5,"column_end":54}},{"value":"/ # use textwrap::word_separators::AsciiSpace;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":12448,"byte_end":12496,"line_start":359,"line_end":359,"column_start":5,"column_end":53}},{"value":"/ # let width = 80;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":12501,"byte_end":12522,"line_start":360,"line_end":360,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":12527,"byte_end":12530,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ // uses HyphenSplitter with static dispatch","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":12535,"byte_end":12582,"line_start":362,"line_end":362,"column_start":5,"column_end":52}},{"value":"/ // the actual type: Options<AsciiSpace, HyphenSplitter>","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":12587,"byte_end":12646,"line_start":363,"line_end":363,"column_start":5,"column_end":64}},{"value":"/ let opt = Options::new(width);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":12651,"byte_end":12685,"line_start":364,"line_end":364,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":12690,"byte_end":12693,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ // uses NoHyphenation with static dispatch","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":12698,"byte_end":12744,"line_start":366,"line_end":366,"column_start":5,"column_end":51}},{"value":"/ // the actual type: Options<AsciiSpace, NoHyphenation>","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":12749,"byte_end":12807,"line_start":367,"line_end":367,"column_start":5,"column_end":63}},{"value":"/ let opt = Options::new(width).word_splitter(NoHyphenation);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":12812,"byte_end":12875,"line_start":368,"line_end":368,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":12880,"byte_end":12883,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ // uses HyphenSplitter with dynamic dispatch","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":12888,"byte_end":12936,"line_start":370,"line_end":370,"column_start":5,"column_end":53}},{"value":"/ // the actual type: Options<AsciiSpace, Box<dyn word_splitters::WordSplitter>>","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":12941,"byte_end":13023,"line_start":371,"line_end":371,"column_start":5,"column_end":87}},{"value":"/ let opt: Options<_, _, _> = Options::new(width).word_splitter(Box::new(HyphenSplitter));","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":13028,"byte_end":13120,"line_start":372,"line_end":372,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":13125,"byte_end":13128,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ // uses NoHyphenation with dynamic dispatch","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":13133,"byte_end":13180,"line_start":374,"line_end":374,"column_start":5,"column_end":52}},{"value":"/ // the actual type: Options<AsciiSpace, Box<dyn word_splitters::WordSplitter>>","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":13185,"byte_end":13267,"line_start":375,"line_end":375,"column_start":5,"column_end":87}},{"value":"/ let opt: Options<_, _, _> = Options::new(width).word_splitter(Box::new(NoHyphenation));","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":13272,"byte_end":13363,"line_start":376,"line_end":376,"column_start":5,"column_end":96}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":13368,"byte_end":13375,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":13380,"byte_end":13383,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ Notice that the last two variables have the same type, despite","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":13388,"byte_end":13454,"line_start":379,"line_end":379,"column_start":5,"column_end":71}},{"value":"/ the different `WordSplitter` in use. Thus dynamic dispatch","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":13459,"byte_end":13521,"line_start":380,"line_end":380,"column_start":5,"column_end":67}},{"value":"/ allows to change the word splitter at run-time without","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":13526,"byte_end":13584,"line_start":381,"line_end":381,"column_start":5,"column_end":63}},{"value":"/ changing the variables type.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":13589,"byte_end":13621,"line_start":382,"line_end":382,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":18191,"byte_end":18209,"line_start":487,"line_end":487,"column_start":18,"column_end":36},"name":"with_word_splitter","qualname":"<Options>::with_word_splitter","value":"pub const fn with_word_splitter(usize, WordSplit) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Options`] with the specified width and\n word splitter. Equivalent to","sig":null,"attributes":[{"value":"/ Creates a new [`Options`] with the specified width and","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":14572,"byte_end":14630,"line_start":411,"line_end":411,"column_start":5,"column_end":63}},{"value":"/ word splitter. Equivalent to","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":14635,"byte_end":14667,"line_start":412,"line_end":412,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":14672,"byte_end":14675,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":14680,"byte_end":14687,"line_start":414,"line_end":414,"column_start":5,"column_end":12}},{"value":"/ # use textwrap::Options;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":14692,"byte_end":14720,"line_start":415,"line_end":415,"column_start":5,"column_end":33}},{"value":"/ # use textwrap::word_splitters::{NoHyphenation, HyphenSplitter};","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":14725,"byte_end":14793,"line_start":416,"line_end":416,"column_start":5,"column_end":73}},{"value":"/ # const word_splitter: NoHyphenation = NoHyphenation;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":14798,"byte_end":14855,"line_start":417,"line_end":417,"column_start":5,"column_end":62}},{"value":"/ # const width: usize = 80;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":14860,"byte_end":14890,"line_start":418,"line_end":418,"column_start":5,"column_end":35}},{"value":"/ # let actual = Options::with_word_splitter(width, word_splitter);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":14895,"byte_end":14964,"line_start":419,"line_end":419,"column_start":5,"column_end":74}},{"value":"/ # let expected =","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":14969,"byte_end":14989,"line_start":420,"line_end":420,"column_start":5,"column_end":25}},{"value":"/ Options {","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":14994,"byte_end":15007,"line_start":421,"line_end":421,"column_start":5,"column_end":18}},{"value":"/     width: width,","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":15012,"byte_end":15033,"line_start":422,"line_end":422,"column_start":5,"column_end":26}},{"value":"/     initial_indent: \"\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":15038,"byte_end":15065,"line_start":423,"line_end":423,"column_start":5,"column_end":32}},{"value":"/     subsequent_indent: \"\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":15070,"byte_end":15100,"line_start":424,"line_end":424,"column_start":5,"column_end":35}},{"value":"/     break_words: true,","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":15105,"byte_end":15131,"line_start":425,"line_end":425,"column_start":5,"column_end":31}},{"value":"/     #[cfg(feature = \"unicode-linebreak\")]","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":15136,"byte_end":15181,"line_start":426,"line_end":426,"column_start":5,"column_end":50}},{"value":"/     word_separator: textwrap::word_separators::UnicodeBreakProperties,","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":15186,"byte_end":15260,"line_start":427,"line_end":427,"column_start":5,"column_end":79}},{"value":"/     #[cfg(not(feature = \"unicode-linebreak\"))]","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":15265,"byte_end":15315,"line_start":428,"line_end":428,"column_start":5,"column_end":55}},{"value":"/     word_separator: textwrap::word_separators::AsciiSpace,","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":15320,"byte_end":15382,"line_start":429,"line_end":429,"column_start":5,"column_end":67}},{"value":"/     #[cfg(feature = \"smawk\")]","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":15387,"byte_end":15420,"line_start":430,"line_end":430,"column_start":5,"column_end":38}},{"value":"/     wrap_algorithm: textwrap::wrap_algorithms::OptimalFit,","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":15425,"byte_end":15487,"line_start":431,"line_end":431,"column_start":5,"column_end":67}},{"value":"/     #[cfg(not(feature = \"smawk\"))]","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":15492,"byte_end":15530,"line_start":432,"line_end":432,"column_start":5,"column_end":43}},{"value":"/     wrap_algorithm: textwrap::wrap_algorithms::FirstFit,","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":15535,"byte_end":15595,"line_start":433,"line_end":433,"column_start":5,"column_end":65}},{"value":"/     word_splitter: word_splitter,","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":15600,"byte_end":15637,"line_start":434,"line_end":434,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":15642,"byte_end":15647,"line_start":435,"line_end":435,"column_start":5,"column_end":10}},{"value":"/ # ;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":15652,"byte_end":15659,"line_start":436,"line_end":436,"column_start":5,"column_end":12}},{"value":"/ # assert_eq!(actual.width, expected.width);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":15664,"byte_end":15711,"line_start":437,"line_end":437,"column_start":5,"column_end":52}},{"value":"/ # assert_eq!(actual.initial_indent, expected.initial_indent);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":15716,"byte_end":15781,"line_start":438,"line_end":438,"column_start":5,"column_end":70}},{"value":"/ # assert_eq!(actual.subsequent_indent, expected.subsequent_indent);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":15786,"byte_end":15857,"line_start":439,"line_end":439,"column_start":5,"column_end":76}},{"value":"/ # assert_eq!(actual.break_words, expected.break_words);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":15862,"byte_end":15921,"line_start":440,"line_end":440,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":15926,"byte_end":15933,"line_start":441,"line_end":441,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":15938,"byte_end":15941,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ This constructor allows to specify the word splitter to be","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":15946,"byte_end":16008,"line_start":443,"line_end":443,"column_start":5,"column_end":67}},{"value":"/ used. It is like a short-cut for","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":16013,"byte_end":16049,"line_start":444,"line_end":444,"column_start":5,"column_end":41}},{"value":"/ `Options::new(w).word_splitter(s)`, but this function is a","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":16054,"byte_end":16116,"line_start":445,"line_end":445,"column_start":5,"column_end":67}},{"value":"/ `const fn`. The given word splitter may be in a [`Box`], which","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":16121,"byte_end":16187,"line_start":446,"line_end":446,"column_start":5,"column_end":71}},{"value":"/ then can be coerced into a trait object for dynamic dispatch:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":16192,"byte_end":16257,"line_start":447,"line_end":447,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":16262,"byte_end":16265,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":16270,"byte_end":16277,"line_start":449,"line_end":449,"column_start":5,"column_end":12}},{"value":"/ use textwrap::Options;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":16282,"byte_end":16308,"line_start":450,"line_end":450,"column_start":5,"column_end":31}},{"value":"/ use textwrap::word_splitters::{HyphenSplitter, NoHyphenation, WordSplitter};","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":16313,"byte_end":16393,"line_start":451,"line_end":451,"column_start":5,"column_end":85}},{"value":"/ # const width: usize = 80;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":16398,"byte_end":16428,"line_start":452,"line_end":452,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":16433,"byte_end":16436,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ // This opt contains a boxed trait object as splitter.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":16441,"byte_end":16499,"line_start":454,"line_end":454,"column_start":5,"column_end":63}},{"value":"/ // The type annotation is important, otherwise it will be not a trait object","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":16504,"byte_end":16584,"line_start":455,"line_end":455,"column_start":5,"column_end":85}},{"value":"/ let mut opt: Options<_, _, Box<dyn WordSplitter>>","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":16589,"byte_end":16642,"line_start":456,"line_end":456,"column_start":5,"column_end":58}},{"value":"/     = Options::with_word_splitter(width, Box::new(NoHyphenation));","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":16647,"byte_end":16717,"line_start":457,"line_end":457,"column_start":5,"column_end":75}},{"value":"/ // Its type is actually: `Options<AsciiSpace, Box<dyn word_splitters::WordSplitter>>`:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":16722,"byte_end":16812,"line_start":458,"line_end":458,"column_start":5,"column_end":95}},{"value":"/ let opt_coerced: Options<_, _, Box<dyn WordSplitter>> = opt;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":16817,"byte_end":16881,"line_start":459,"line_end":459,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":16886,"byte_end":16889,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ // Thus, it can be overridden with a different word splitter.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":16894,"byte_end":16959,"line_start":461,"line_end":461,"column_start":5,"column_end":70}},{"value":"/ opt = Options::with_word_splitter(width, Box::new(HyphenSplitter));","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":16964,"byte_end":17035,"line_start":462,"line_end":462,"column_start":5,"column_end":76}},{"value":"/ // Now, containing a `HyphenSplitter` instead.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":17040,"byte_end":17090,"line_start":463,"line_end":463,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":17095,"byte_end":17102,"line_start":464,"line_end":464,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":17107,"byte_end":17110,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ Since the word splitter is given by value, which determines","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":17115,"byte_end":17178,"line_start":466,"line_end":466,"column_start":5,"column_end":68}},{"value":"/ the generic type parameter, it can be used to produce both an","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":17183,"byte_end":17248,"line_start":467,"line_end":467,"column_start":5,"column_end":70}},{"value":"/ [`Options`] with static and dynamic dispatch, respectively.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":17253,"byte_end":17316,"line_start":468,"line_end":468,"column_start":5,"column_end":68}},{"value":"/ While dynamic dispatch allows to change the type of the inner","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":17321,"byte_end":17386,"line_start":469,"line_end":469,"column_start":5,"column_end":70}},{"value":"/ word splitter at run time as seen above, static dispatch","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":17391,"byte_end":17451,"line_start":470,"line_end":470,"column_start":5,"column_end":65}},{"value":"/ especially can store the word splitter directly, without the","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":17456,"byte_end":17520,"line_start":471,"line_end":471,"column_start":5,"column_end":69}},{"value":"/ need for a box. This in turn allows it to be used in constant","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":17525,"byte_end":17590,"line_start":472,"line_end":472,"column_start":5,"column_end":70}},{"value":"/ and static context:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":17595,"byte_end":17618,"line_start":473,"line_end":473,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":17623,"byte_end":17626,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":17631,"byte_end":17638,"line_start":475,"line_end":475,"column_start":5,"column_end":12}},{"value":"/ use textwrap::word_splitters::HyphenSplitter; use textwrap::{ Options};","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":17643,"byte_end":17718,"line_start":476,"line_end":476,"column_start":5,"column_end":80}},{"value":"/ use textwrap::word_separators::AsciiSpace;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":17723,"byte_end":17769,"line_start":477,"line_end":477,"column_start":5,"column_end":51}},{"value":"/ use textwrap::wrap_algorithms::FirstFit;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":17774,"byte_end":17818,"line_start":478,"line_end":478,"column_start":5,"column_end":49}},{"value":"/ # const width: usize = 80;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":17823,"byte_end":17853,"line_start":479,"line_end":479,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":17858,"byte_end":17861,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ # #[cfg(all(not(feature = \"smawk\"), not(feature = \"unicode-linebreak\")))] {","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":17866,"byte_end":17945,"line_start":481,"line_end":481,"column_start":5,"column_end":84}},{"value":"/ const FOO: Options<FirstFit, AsciiSpace, HyphenSplitter> =","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":17950,"byte_end":18012,"line_start":482,"line_end":482,"column_start":5,"column_end":67}},{"value":"/     Options::with_word_splitter(width, HyphenSplitter);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":18017,"byte_end":18076,"line_start":483,"line_end":483,"column_start":5,"column_end":64}},{"value":"/ static BAR: Options<FirstFit, AsciiSpace, HyphenSplitter> = FOO;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":18081,"byte_end":18149,"line_start":484,"line_end":484,"column_start":5,"column_end":73}},{"value":"/ # }","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":18154,"byte_end":18161,"line_start":485,"line_end":485,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":18166,"byte_end":18173,"line_start":486,"line_end":486,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":19303,"byte_end":19317,"line_start":519,"line_end":519,"column_start":12,"column_end":26},"name":"initial_indent","qualname":"<Options>::initial_indent","value":"pub fn initial_indent(Self, &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Change [`self.initial_indent`]. The initial indentation is\n used on the very first line of output.","sig":null,"attributes":[{"value":"/ Change [`self.initial_indent`]. The initial indentation is","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":18649,"byte_end":18711,"line_start":501,"line_end":501,"column_start":5,"column_end":67}},{"value":"/ used on the very first line of output.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":18716,"byte_end":18758,"line_start":502,"line_end":502,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":18763,"byte_end":18766,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":18771,"byte_end":18785,"line_start":504,"line_end":504,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":18790,"byte_end":18793,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ Classic paragraph indentation can be achieved by specifying an","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":18798,"byte_end":18864,"line_start":506,"line_end":506,"column_start":5,"column_end":71}},{"value":"/ initial indentation and wrapping each paragraph by itself:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":18869,"byte_end":18931,"line_start":507,"line_end":507,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":18936,"byte_end":18939,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":18944,"byte_end":18951,"line_start":509,"line_end":509,"column_start":5,"column_end":12}},{"value":"/ use textwrap::{Options, wrap};","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":18956,"byte_end":18990,"line_start":510,"line_end":510,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":18995,"byte_end":18998,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ let options = Options::new(16).initial_indent(\"    \");","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":19003,"byte_end":19061,"line_start":512,"line_end":512,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(wrap(\"This is a little example.\", options),","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":19066,"byte_end":19124,"line_start":513,"line_end":513,"column_start":5,"column_end":63}},{"value":"/            vec![\"    This is a\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":19129,"byte_end":19165,"line_start":514,"line_end":514,"column_start":5,"column_end":41}},{"value":"/                 \"little example.\"]);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":19170,"byte_end":19210,"line_start":515,"line_end":515,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":19215,"byte_end":19222,"line_start":516,"line_end":516,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":19227,"byte_end":19230,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ [`self.initial_indent`]: #structfield.initial_indent","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":19235,"byte_end":19291,"line_start":518,"line_end":518,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":20510,"byte_end":20527,"line_start":555,"line_end":555,"column_start":12,"column_end":29},"name":"subsequent_indent","qualname":"<Options>::subsequent_indent","value":"pub fn subsequent_indent(Self, &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Change [`self.subsequent_indent`]. The subsequent indentation\n is used on lines following the first line of output.","sig":null,"attributes":[{"value":"/ Change [`self.subsequent_indent`]. The subsequent indentation","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":19445,"byte_end":19510,"line_start":526,"line_end":526,"column_start":5,"column_end":70}},{"value":"/ is used on lines following the first line of output.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":19515,"byte_end":19571,"line_start":527,"line_end":527,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":19576,"byte_end":19579,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":19584,"byte_end":19598,"line_start":529,"line_end":529,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":19603,"byte_end":19606,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ Combining initial and subsequent indentation lets you format a","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":19611,"byte_end":19677,"line_start":531,"line_end":531,"column_start":5,"column_end":71}},{"value":"/ single paragraph as a bullet list:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":19682,"byte_end":19720,"line_start":532,"line_end":532,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":19725,"byte_end":19728,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":19733,"byte_end":19740,"line_start":534,"line_end":534,"column_start":5,"column_end":12}},{"value":"/ use textwrap::{Options, wrap};","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":19745,"byte_end":19779,"line_start":535,"line_end":535,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":19784,"byte_end":19787,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ let options = Options::new(12)","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":19792,"byte_end":19826,"line_start":537,"line_end":537,"column_start":5,"column_end":39}},{"value":"/     .initial_indent(\"* \")","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":19831,"byte_end":19860,"line_start":538,"line_end":538,"column_start":5,"column_end":34}},{"value":"/     .subsequent_indent(\"  \");","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":19865,"byte_end":19898,"line_start":539,"line_end":539,"column_start":5,"column_end":38}},{"value":"/ #[cfg(feature = \"smawk\")]","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":19903,"byte_end":19932,"line_start":540,"line_end":540,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(wrap(\"This is a little example.\", options),","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":19937,"byte_end":19995,"line_start":541,"line_end":541,"column_start":5,"column_end":63}},{"value":"/            vec![\"* This is\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":20000,"byte_end":20032,"line_start":542,"line_end":542,"column_start":5,"column_end":37}},{"value":"/                 \"  a little\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":20037,"byte_end":20070,"line_start":543,"line_end":543,"column_start":5,"column_end":38}},{"value":"/                 \"  example.\"]);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":20075,"byte_end":20110,"line_start":544,"line_end":544,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":20115,"byte_end":20118,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ // Without the `smawk` feature, the wrapping is a little different:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":20123,"byte_end":20194,"line_start":546,"line_end":546,"column_start":5,"column_end":76}},{"value":"/ #[cfg(not(feature = \"smawk\"))]","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":20199,"byte_end":20233,"line_start":547,"line_end":547,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(wrap(\"This is a little example.\", options),","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":20238,"byte_end":20296,"line_start":548,"line_end":548,"column_start":5,"column_end":63}},{"value":"/            vec![\"* This is a\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":20301,"byte_end":20335,"line_start":549,"line_end":549,"column_start":5,"column_end":39}},{"value":"/                 \"  little\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":20340,"byte_end":20371,"line_start":550,"line_end":550,"column_start":5,"column_end":36}},{"value":"/                 \"  example.\"]);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":20376,"byte_end":20411,"line_start":551,"line_end":551,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":20416,"byte_end":20423,"line_start":552,"line_end":552,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":20428,"byte_end":20431,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ [`self.subsequent_indent`]: #structfield.subsequent_indent","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":20436,"byte_end":20498,"line_start":554,"line_end":554,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":21322,"byte_end":21333,"line_start":582,"line_end":582,"column_start":12,"column_end":23},"name":"break_words","qualname":"<Options>::break_words","value":"pub fn break_words(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Change [`self.break_words`]. This controls if words longer\n than `self.width` can be broken, or if they will be left\n sticking out into the right margin.","sig":null,"attributes":[{"value":"/ Change [`self.break_words`]. This controls if words longer","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":20658,"byte_end":20720,"line_start":562,"line_end":562,"column_start":5,"column_end":67}},{"value":"/ than `self.width` can be broken, or if they will be left","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":20725,"byte_end":20785,"line_start":563,"line_end":563,"column_start":5,"column_end":65}},{"value":"/ sticking out into the right margin.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":20790,"byte_end":20829,"line_start":564,"line_end":564,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":20834,"byte_end":20837,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":20842,"byte_end":20856,"line_start":566,"line_end":566,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":20861,"byte_end":20864,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":20869,"byte_end":20876,"line_start":568,"line_end":568,"column_start":5,"column_end":12}},{"value":"/ use textwrap::{wrap, Options};","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":20881,"byte_end":20915,"line_start":569,"line_end":569,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":20920,"byte_end":20923,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ let options = Options::new(4).break_words(true);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":20928,"byte_end":20980,"line_start":571,"line_end":571,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(wrap(\"This is a little example.\", options),","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":20985,"byte_end":21043,"line_start":572,"line_end":572,"column_start":5,"column_end":63}},{"value":"/            vec![\"This\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":21048,"byte_end":21075,"line_start":573,"line_end":573,"column_start":5,"column_end":32}},{"value":"/                 \"is a\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":21080,"byte_end":21107,"line_start":574,"line_end":574,"column_start":5,"column_end":32}},{"value":"/                 \"litt\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":21112,"byte_end":21139,"line_start":575,"line_end":575,"column_start":5,"column_end":32}},{"value":"/                 \"le\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":21144,"byte_end":21169,"line_start":576,"line_end":576,"column_start":5,"column_end":30}},{"value":"/                 \"exam\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":21174,"byte_end":21201,"line_start":577,"line_end":577,"column_start":5,"column_end":32}},{"value":"/                 \"ple.\"]);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":21206,"byte_end":21235,"line_start":578,"line_end":578,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":21240,"byte_end":21247,"line_start":579,"line_end":579,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":21252,"byte_end":21255,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ [`self.break_words`]: #structfield.break_words","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":21260,"byte_end":21310,"line_start":581,"line_end":581,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":21656,"byte_end":21670,"line_start":594,"line_end":594,"column_start":12,"column_end":26},"name":"word_separator","qualname":"<Options>::word_separator","value":"pub fn word_separator<NewWordSep>(Self, NewWordSep) -> Options","parent":null,"children":[],"decl_id":null,"docs":" Change [`self.word_separator`].","sig":null,"attributes":[{"value":"/ Change [`self.word_separator`].","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":21457,"byte_end":21492,"line_start":589,"line_end":589,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":21497,"byte_end":21500,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ See [`word_separators::WordSeparator`] for details on the choices.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":21505,"byte_end":21575,"line_start":591,"line_end":591,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":21580,"byte_end":21583,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ [`self.word_separator`]: #structfield.word_separator","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":21588,"byte_end":21644,"line_start":593,"line_end":593,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":22364,"byte_end":22378,"line_start":615,"line_end":615,"column_start":12,"column_end":26},"name":"wrap_algorithm","qualname":"<Options>::wrap_algorithm","value":"pub fn wrap_algorithm<NewWrapAlgo>(Self, NewWrapAlgo) -> Options","parent":null,"children":[],"decl_id":null,"docs":" Change [`self.wrap_algorithm`].","sig":null,"attributes":[{"value":"/ Change [`self.wrap_algorithm`].","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":22147,"byte_end":22182,"line_start":609,"line_end":609,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":22187,"byte_end":22190,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ See the [`wrap_algorithms::WrapAlgorithm`] trait for details on","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":22195,"byte_end":22262,"line_start":611,"line_end":611,"column_start":5,"column_end":72}},{"value":"/ the choices.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":22267,"byte_end":22283,"line_start":612,"line_end":612,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":22288,"byte_end":22291,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ [`self.wrap_algorithm`]: #structfield.wrap_algorithm","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":22296,"byte_end":22352,"line_start":614,"line_end":614,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":23720,"byte_end":23733,"line_start":649,"line_end":649,"column_start":12,"column_end":25},"name":"word_splitter","qualname":"<Options>::word_splitter","value":"pub fn word_splitter<NewWordSplit>(Self, NewWordSplit) -> Options","parent":null,"children":[],"decl_id":null,"docs":" Change [`self.word_splitter`]. The\n [`word_splitters::WordSplitter`] is used to fit part of a word\n into the current line when wrapping text.","sig":null,"attributes":[{"value":"/ Change [`self.word_splitter`]. The","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":22857,"byte_end":22895,"line_start":630,"line_end":630,"column_start":5,"column_end":43}},{"value":"/ [`word_splitters::WordSplitter`] is used to fit part of a word","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":22900,"byte_end":22966,"line_start":631,"line_end":631,"column_start":5,"column_end":71}},{"value":"/ into the current line when wrapping text.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":22971,"byte_end":23016,"line_start":632,"line_end":632,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":23021,"byte_end":23024,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ This function may return a different type than `Self`. That is","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":23029,"byte_end":23095,"line_start":634,"line_end":634,"column_start":5,"column_end":71}},{"value":"/ the case when the given `splitter` is of a different type the","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":23100,"byte_end":23165,"line_start":635,"line_end":635,"column_start":5,"column_end":70}},{"value":"/ the currently stored one in the `splitter` field. Take for","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":23170,"byte_end":23232,"line_start":636,"line_end":636,"column_start":5,"column_end":67}},{"value":"/ example:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":23237,"byte_end":23249,"line_start":637,"line_end":637,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":23254,"byte_end":23257,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":23262,"byte_end":23269,"line_start":639,"line_end":639,"column_start":5,"column_end":12}},{"value":"/ use textwrap::word_splitters::{HyphenSplitter, NoHyphenation};","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":23274,"byte_end":23340,"line_start":640,"line_end":640,"column_start":5,"column_end":71}},{"value":"/ use textwrap::Options;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":23345,"byte_end":23371,"line_start":641,"line_end":641,"column_start":5,"column_end":31}},{"value":"/ // The default type returned by `new`:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":23376,"byte_end":23418,"line_start":642,"line_end":642,"column_start":5,"column_end":47}},{"value":"/ let opt: Options<_, _, HyphenSplitter> = Options::new(80);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":23423,"byte_end":23485,"line_start":643,"line_end":643,"column_start":5,"column_end":67}},{"value":"/ // Setting a different word splitter changes the type","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":23490,"byte_end":23547,"line_start":644,"line_end":644,"column_start":5,"column_end":62}},{"value":"/ let opt: Options<_, _, NoHyphenation> = opt.word_splitter(NoHyphenation);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":23552,"byte_end":23629,"line_start":645,"line_end":645,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":23634,"byte_end":23641,"line_start":646,"line_end":646,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":23646,"byte_end":23649,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ [`self.word_splitter`]: #structfield.word_splitter","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":23654,"byte_end":23708,"line_start":648,"line_end":648,"column_start":5,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":26027,"byte_end":26031,"line_start":726,"line_end":726,"column_start":8,"column_end":12},"name":"fill","qualname":"::fill","value":"pub fn fill<'a, WrapAlgo, WordSep, WordSplit, Opt>(&str, Opt) -> String where\nWrapAlgo: wrap_algorithms::WrapAlgorithm,\nWordSep: word_separators::WordSeparator,\nWordSplit: word_splitters::WordSplitter, Opt: Into<Options>","parent":null,"children":[],"decl_id":null,"docs":" Fill a line of text at a given width.","sig":null,"attributes":[{"value":"/ Fill a line of text at a given width.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":25124,"byte_end":25165,"line_start":694,"line_end":694,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":25166,"byte_end":25169,"line_start":695,"line_end":695,"column_start":1,"column_end":4}},{"value":"/ The result is a [`String`], complete with newlines between each","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":25170,"byte_end":25237,"line_start":696,"line_end":696,"column_start":1,"column_end":68}},{"value":"/ line. Use the [`wrap`] function if you need access to the","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":25238,"byte_end":25299,"line_start":697,"line_end":697,"column_start":1,"column_end":62}},{"value":"/ individual lines.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":25300,"byte_end":25321,"line_start":698,"line_end":698,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":25322,"byte_end":25325,"line_start":699,"line_end":699,"column_start":1,"column_end":4}},{"value":"/ The easiest way to use this function is to pass an integer for","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":25326,"byte_end":25392,"line_start":700,"line_end":700,"column_start":1,"column_end":67}},{"value":"/ `width_or_options`:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":25393,"byte_end":25416,"line_start":701,"line_end":701,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":25417,"byte_end":25420,"line_start":702,"line_end":702,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":25421,"byte_end":25428,"line_start":703,"line_end":703,"column_start":1,"column_end":8}},{"value":"/ use textwrap::fill;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":25429,"byte_end":25452,"line_start":704,"line_end":704,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":25453,"byte_end":25456,"line_start":705,"line_end":705,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":25457,"byte_end":25472,"line_start":706,"line_end":706,"column_start":1,"column_end":16}},{"value":"/     fill(\"Memory safety without garbage collection.\", 15),","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":25473,"byte_end":25535,"line_start":707,"line_end":707,"column_start":1,"column_end":63}},{"value":"/     \"Memory safety\\nwithout garbage\\ncollection.\"","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":25536,"byte_end":25589,"line_start":708,"line_end":708,"column_start":1,"column_end":54}},{"value":"/ );","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":25590,"byte_end":25596,"line_start":709,"line_end":709,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":25597,"byte_end":25604,"line_start":710,"line_end":710,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":25605,"byte_end":25608,"line_start":711,"line_end":711,"column_start":1,"column_end":4}},{"value":"/ If you need to customize the wrapping, you can pass an [`Options`]","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":25609,"byte_end":25679,"line_start":712,"line_end":712,"column_start":1,"column_end":71}},{"value":"/ instead of an `usize`:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":25680,"byte_end":25706,"line_start":713,"line_end":713,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":25707,"byte_end":25710,"line_start":714,"line_end":714,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":25711,"byte_end":25718,"line_start":715,"line_end":715,"column_start":1,"column_end":8}},{"value":"/ use textwrap::{fill, Options};","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":25719,"byte_end":25753,"line_start":716,"line_end":716,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":25754,"byte_end":25757,"line_start":717,"line_end":717,"column_start":1,"column_end":4}},{"value":"/ let options = Options::new(15)","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":25758,"byte_end":25792,"line_start":718,"line_end":718,"column_start":1,"column_end":35}},{"value":"/     .initial_indent(\"- \")","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":25793,"byte_end":25822,"line_start":719,"line_end":719,"column_start":1,"column_end":30}},{"value":"/     .subsequent_indent(\"  \");","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":25823,"byte_end":25856,"line_start":720,"line_end":720,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":25857,"byte_end":25872,"line_start":721,"line_end":721,"column_start":1,"column_end":16}},{"value":"/     fill(\"Memory safety without garbage collection.\", &options),","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":25873,"byte_end":25941,"line_start":722,"line_end":722,"column_start":1,"column_end":69}},{"value":"/     \"- Memory safety\\n  without\\n  garbage\\n  collection.\"","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":25942,"byte_end":26004,"line_start":723,"line_end":723,"column_start":1,"column_end":63}},{"value":"/ );","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":26005,"byte_end":26011,"line_start":724,"line_end":724,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":26012,"byte_end":26019,"line_start":725,"line_end":725,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":27979,"byte_end":27985,"line_start":793,"line_end":793,"column_start":8,"column_end":14},"name":"unfill","qualname":"::unfill","value":"pub fn unfill(&str)\n->\n    (String,\n     Options<, wrap_algorithms::FirstFit, word_separators::AsciiSpace,\n             word_splitters::HyphenSplitter>)","parent":null,"children":[],"decl_id":null,"docs":" Unpack a paragraph of already-wrapped text.","sig":null,"attributes":[{"value":"/ Unpack a paragraph of already-wrapped text.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":26652,"byte_end":26699,"line_start":747,"line_end":747,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":26700,"byte_end":26703,"line_start":748,"line_end":748,"column_start":1,"column_end":4}},{"value":"/ This function attempts to recover the original text from a single","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":26704,"byte_end":26773,"line_start":749,"line_end":749,"column_start":1,"column_end":70}},{"value":"/ paragraph of text produced by the [`fill`] function. This means","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":26774,"byte_end":26841,"line_start":750,"line_end":750,"column_start":1,"column_end":68}},{"value":"/ that it turns","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":26842,"byte_end":26859,"line_start":751,"line_end":751,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":26860,"byte_end":26863,"line_start":752,"line_end":752,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":26864,"byte_end":26875,"line_start":753,"line_end":753,"column_start":1,"column_end":12}},{"value":"/ textwrap: a small","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":26876,"byte_end":26897,"line_start":754,"line_end":754,"column_start":1,"column_end":22}},{"value":"/ library for","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":26898,"byte_end":26913,"line_start":755,"line_end":755,"column_start":1,"column_end":16}},{"value":"/ wrapping text.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":26914,"byte_end":26932,"line_start":756,"line_end":756,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":26933,"byte_end":26940,"line_start":757,"line_end":757,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":26941,"byte_end":26944,"line_start":758,"line_end":758,"column_start":1,"column_end":4}},{"value":"/ back into","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":26945,"byte_end":26958,"line_start":759,"line_end":759,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":26959,"byte_end":26962,"line_start":760,"line_end":760,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":26963,"byte_end":26974,"line_start":761,"line_end":761,"column_start":1,"column_end":12}},{"value":"/ textwrap: a small library for wrapping text.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":26975,"byte_end":27023,"line_start":762,"line_end":762,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":27024,"byte_end":27031,"line_start":763,"line_end":763,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":27032,"byte_end":27035,"line_start":764,"line_end":764,"column_start":1,"column_end":4}},{"value":"/ In addition, it will recognize a common prefix among the lines.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":27036,"byte_end":27103,"line_start":765,"line_end":765,"column_start":1,"column_end":68}},{"value":"/ The prefix of the first line is returned in","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":27104,"byte_end":27151,"line_start":766,"line_end":766,"column_start":1,"column_end":48}},{"value":"/ [`Options::initial_indent`] and the prefix (if any) of the the","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":27152,"byte_end":27218,"line_start":767,"line_end":767,"column_start":1,"column_end":67}},{"value":"/ other lines is returned in [`Options::subsequent_indent`].","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":27219,"byte_end":27281,"line_start":768,"line_end":768,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":27282,"byte_end":27285,"line_start":769,"line_end":769,"column_start":1,"column_end":4}},{"value":"/ In addition to `' '`, the prefixes can consist of characters used","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":27286,"byte_end":27355,"line_start":770,"line_end":770,"column_start":1,"column_end":70}},{"value":"/ for unordered lists (`'-'`, `'+'`, and `'*'`) and block quotes","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":27356,"byte_end":27422,"line_start":771,"line_end":771,"column_start":1,"column_end":67}},{"value":"/ (`'>'`) in Markdown as well as characters often used for inline","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":27423,"byte_end":27490,"line_start":772,"line_end":772,"column_start":1,"column_end":68}},{"value":"/ comments (`'#'` and `'/'`).","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":27491,"byte_end":27522,"line_start":773,"line_end":773,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":27523,"byte_end":27526,"line_start":774,"line_end":774,"column_start":1,"column_end":4}},{"value":"/ The text must come from a single wrapped paragraph. This means","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":27527,"byte_end":27593,"line_start":775,"line_end":775,"column_start":1,"column_end":67}},{"value":"/ that there can be no `\"\\n\\n\"` within the text.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":27594,"byte_end":27644,"line_start":776,"line_end":776,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":27645,"byte_end":27648,"line_start":777,"line_end":777,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":27649,"byte_end":27663,"line_start":778,"line_end":778,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":27664,"byte_end":27667,"line_start":779,"line_end":779,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":27668,"byte_end":27675,"line_start":780,"line_end":780,"column_start":1,"column_end":8}},{"value":"/ use textwrap::unfill;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":27676,"byte_end":27701,"line_start":781,"line_end":781,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":27702,"byte_end":27705,"line_start":782,"line_end":782,"column_start":1,"column_end":4}},{"value":"/ let (text, options) = unfill(\"\\","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":27706,"byte_end":27741,"line_start":783,"line_end":783,"column_start":1,"column_end":36}},{"value":"/ * This is an","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":27742,"byte_end":27758,"line_start":784,"line_end":784,"column_start":1,"column_end":17}},{"value":"/   example of","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":27759,"byte_end":27775,"line_start":785,"line_end":785,"column_start":1,"column_end":17}},{"value":"/   a list item.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":27776,"byte_end":27794,"line_start":786,"line_end":786,"column_start":1,"column_end":19}},{"value":"/ \");","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":27795,"byte_end":27802,"line_start":787,"line_end":787,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":27803,"byte_end":27806,"line_start":788,"line_end":788,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(text, \"This is an example of a list item.\\n\");","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":27807,"byte_end":27868,"line_start":789,"line_end":789,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(options.initial_indent, \"* \");","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":27869,"byte_end":27914,"line_start":790,"line_end":790,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(options.subsequent_indent, \"  \");","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":27915,"byte_end":27963,"line_start":791,"line_end":791,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":27964,"byte_end":27971,"line_start":792,"line_end":792,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":184},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":30776,"byte_end":30782,"line_start":893,"line_end":893,"column_start":8,"column_end":14},"name":"refill","qualname":"::refill","value":"pub fn refill<'a, WrapAlgo, WordSep, WordSplit, Opt>(&str, Opt) -> String\nwhere WrapAlgo: wrap_algorithms::WrapAlgorithm,\nWordSep: word_separators::WordSeparator,\nWordSplit: word_splitters::WordSplitter, Opt: Into<Options>","parent":null,"children":[],"decl_id":null,"docs":" Refill a paragraph of wrapped text with a new width.","sig":null,"attributes":[{"value":"/ Refill a paragraph of wrapped text with a new width.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":29537,"byte_end":29593,"line_start":839,"line_end":839,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":29594,"byte_end":29597,"line_start":840,"line_end":840,"column_start":1,"column_end":4}},{"value":"/ This function will first use the [`unfill`] function to remove","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":29598,"byte_end":29664,"line_start":841,"line_end":841,"column_start":1,"column_end":67}},{"value":"/ newlines from the text. Afterwards the text is filled again using","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":29665,"byte_end":29734,"line_start":842,"line_end":842,"column_start":1,"column_end":70}},{"value":"/ the [`fill`] function.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":29735,"byte_end":29761,"line_start":843,"line_end":843,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":29762,"byte_end":29765,"line_start":844,"line_end":844,"column_start":1,"column_end":4}},{"value":"/ The `new_width_or_options` argument specify the new width and can","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":29766,"byte_end":29835,"line_start":845,"line_end":845,"column_start":1,"column_end":70}},{"value":"/ specify other options as well — except for","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":29836,"byte_end":29884,"line_start":846,"line_end":846,"column_start":1,"column_end":47}},{"value":"/ [`Options::initial_indent`] and [`Options::subsequent_indent`],","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":29885,"byte_end":29952,"line_start":847,"line_end":847,"column_start":1,"column_end":68}},{"value":"/ which are deduced from `filled_text`.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":29953,"byte_end":29994,"line_start":848,"line_end":848,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":29995,"byte_end":29998,"line_start":849,"line_end":849,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":29999,"byte_end":30013,"line_start":850,"line_end":850,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":30014,"byte_end":30017,"line_start":851,"line_end":851,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":30018,"byte_end":30025,"line_start":852,"line_end":852,"column_start":1,"column_end":8}},{"value":"/ use textwrap::refill;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":30026,"byte_end":30051,"line_start":853,"line_end":853,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":30052,"byte_end":30055,"line_start":854,"line_end":854,"column_start":1,"column_end":4}},{"value":"/ // Some loosely wrapped text. The \"> \" prefix is recognized automatically.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":30056,"byte_end":30134,"line_start":855,"line_end":855,"column_start":1,"column_end":79}},{"value":"/ let text = \"\\","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":30135,"byte_end":30152,"line_start":856,"line_end":856,"column_start":1,"column_end":18}},{"value":"/ > Memory","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":30153,"byte_end":30165,"line_start":857,"line_end":857,"column_start":1,"column_end":13}},{"value":"/ > safety without garbage","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":30166,"byte_end":30194,"line_start":858,"line_end":858,"column_start":1,"column_end":29}},{"value":"/ > collection.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":30195,"byte_end":30212,"line_start":859,"line_end":859,"column_start":1,"column_end":18}},{"value":"/ \";","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":30213,"byte_end":30219,"line_start":860,"line_end":860,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":30220,"byte_end":30223,"line_start":861,"line_end":861,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(refill(text, 20), \"\\","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":30224,"byte_end":30259,"line_start":862,"line_end":862,"column_start":1,"column_end":36}},{"value":"/ > Memory safety","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":30260,"byte_end":30279,"line_start":863,"line_end":863,"column_start":1,"column_end":20}},{"value":"/ > without garbage","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":30280,"byte_end":30301,"line_start":864,"line_end":864,"column_start":1,"column_end":22}},{"value":"/ > collection.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":30302,"byte_end":30319,"line_start":865,"line_end":865,"column_start":1,"column_end":18}},{"value":"/ \");","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":30320,"byte_end":30327,"line_start":866,"line_end":866,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":30328,"byte_end":30331,"line_start":867,"line_end":867,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(refill(text, 40), \"\\","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":30332,"byte_end":30367,"line_start":868,"line_end":868,"column_start":1,"column_end":36}},{"value":"/ > Memory safety without garbage","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":30368,"byte_end":30403,"line_start":869,"line_end":869,"column_start":1,"column_end":36}},{"value":"/ > collection.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":30404,"byte_end":30421,"line_start":870,"line_end":870,"column_start":1,"column_end":18}},{"value":"/ \");","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":30422,"byte_end":30429,"line_start":871,"line_end":871,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":30430,"byte_end":30433,"line_start":872,"line_end":872,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(refill(text, 60), \"\\","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":30434,"byte_end":30469,"line_start":873,"line_end":873,"column_start":1,"column_end":36}},{"value":"/ > Memory safety without garbage collection.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":30470,"byte_end":30517,"line_start":874,"line_end":874,"column_start":1,"column_end":48}},{"value":"/ \");","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":30518,"byte_end":30525,"line_start":875,"line_end":875,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":30526,"byte_end":30533,"line_start":876,"line_end":876,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":30534,"byte_end":30537,"line_start":877,"line_end":877,"column_start":1,"column_end":4}},{"value":"/ You can also reshape bullet points:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":30538,"byte_end":30577,"line_start":878,"line_end":878,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":30578,"byte_end":30581,"line_start":879,"line_end":879,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":30582,"byte_end":30589,"line_start":880,"line_end":880,"column_start":1,"column_end":8}},{"value":"/ use textwrap::refill;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":30590,"byte_end":30615,"line_start":881,"line_end":881,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":30616,"byte_end":30619,"line_start":882,"line_end":882,"column_start":1,"column_end":4}},{"value":"/ let text = \"\\","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":30620,"byte_end":30637,"line_start":883,"line_end":883,"column_start":1,"column_end":18}},{"value":"/ - This is my","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":30638,"byte_end":30654,"line_start":884,"line_end":884,"column_start":1,"column_end":17}},{"value":"/   list item.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":30655,"byte_end":30671,"line_start":885,"line_end":885,"column_start":1,"column_end":17}},{"value":"/ \";","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":30672,"byte_end":30678,"line_start":886,"line_end":886,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":30679,"byte_end":30682,"line_start":887,"line_end":887,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(refill(text, 20), \"\\","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":30683,"byte_end":30718,"line_start":888,"line_end":888,"column_start":1,"column_end":36}},{"value":"/ - This is my list","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":30719,"byte_end":30740,"line_start":889,"line_end":889,"column_start":1,"column_end":22}},{"value":"/   item.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":30741,"byte_end":30752,"line_start":890,"line_end":890,"column_start":1,"column_end":12}},{"value":"/ \");","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":30753,"byte_end":30760,"line_start":891,"line_end":891,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":30761,"byte_end":30768,"line_start":892,"line_end":892,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":36955,"byte_end":36959,"line_start":1082,"line_end":1082,"column_start":8,"column_end":12},"name":"wrap","qualname":"::wrap","value":"pub fn wrap<'a, WrapAlgo, WordSep, WordSplit, Opt>(&str, Opt)\n-> Vec<Cow<, str>> where WrapAlgo: wrap_algorithms::WrapAlgorithm,\nWordSep: word_separators::WordSeparator,\nWordSplit: word_splitters::WordSplitter, Opt: Into<Options>","parent":null,"children":[],"decl_id":null,"docs":" Wrap a line of text at a given width.","sig":null,"attributes":[{"value":"/ Wrap a line of text at a given width.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":31482,"byte_end":31523,"line_start":913,"line_end":913,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":31524,"byte_end":31527,"line_start":914,"line_end":914,"column_start":1,"column_end":4}},{"value":"/ The result is a vector of lines, each line is of type [`Cow<'_,","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":31528,"byte_end":31595,"line_start":915,"line_end":915,"column_start":1,"column_end":68}},{"value":"/ str>`](Cow), which means that the line will borrow from the input","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":31596,"byte_end":31665,"line_start":916,"line_end":916,"column_start":1,"column_end":70}},{"value":"/ `&str` if possible. The lines do not have trailing whitespace,","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":31666,"byte_end":31732,"line_start":917,"line_end":917,"column_start":1,"column_end":67}},{"value":"/ including a final `'\\n'`. Please use the [`fill`] function if you","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":31733,"byte_end":31802,"line_start":918,"line_end":918,"column_start":1,"column_end":70}},{"value":"/ need a [`String`] instead.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":31803,"byte_end":31833,"line_start":919,"line_end":919,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":31834,"byte_end":31837,"line_start":920,"line_end":920,"column_start":1,"column_end":4}},{"value":"/ The easiest way to use this function is to pass an integer for","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":31838,"byte_end":31904,"line_start":921,"line_end":921,"column_start":1,"column_end":67}},{"value":"/ `width_or_options`:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":31905,"byte_end":31928,"line_start":922,"line_end":922,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":31929,"byte_end":31932,"line_start":923,"line_end":923,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":31933,"byte_end":31940,"line_start":924,"line_end":924,"column_start":1,"column_end":8}},{"value":"/ use textwrap::wrap;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":31941,"byte_end":31964,"line_start":925,"line_end":925,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":31965,"byte_end":31968,"line_start":926,"line_end":926,"column_start":1,"column_end":4}},{"value":"/ let lines = wrap(\"Memory safety without garbage collection.\", 15);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":31969,"byte_end":32039,"line_start":927,"line_end":927,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(lines, &[","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":32040,"byte_end":32064,"line_start":928,"line_end":928,"column_start":1,"column_end":25}},{"value":"/     \"Memory safety\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":32065,"byte_end":32089,"line_start":929,"line_end":929,"column_start":1,"column_end":25}},{"value":"/     \"without garbage\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":32090,"byte_end":32116,"line_start":930,"line_end":930,"column_start":1,"column_end":27}},{"value":"/     \"collection.\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":32117,"byte_end":32139,"line_start":931,"line_end":931,"column_start":1,"column_end":23}},{"value":"/ ]);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":32140,"byte_end":32147,"line_start":932,"line_end":932,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":32148,"byte_end":32155,"line_start":933,"line_end":933,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":32156,"byte_end":32159,"line_start":934,"line_end":934,"column_start":1,"column_end":4}},{"value":"/ If you need to customize the wrapping, you can pass an [`Options`]","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":32160,"byte_end":32230,"line_start":935,"line_end":935,"column_start":1,"column_end":71}},{"value":"/ instead of an `usize`:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":32231,"byte_end":32257,"line_start":936,"line_end":936,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":32258,"byte_end":32261,"line_start":937,"line_end":937,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":32262,"byte_end":32269,"line_start":938,"line_end":938,"column_start":1,"column_end":8}},{"value":"/ use textwrap::{wrap, Options};","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":32270,"byte_end":32304,"line_start":939,"line_end":939,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":32305,"byte_end":32308,"line_start":940,"line_end":940,"column_start":1,"column_end":4}},{"value":"/ let options = Options::new(15)","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":32309,"byte_end":32343,"line_start":941,"line_end":941,"column_start":1,"column_end":35}},{"value":"/     .initial_indent(\"- \")","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":32344,"byte_end":32373,"line_start":942,"line_end":942,"column_start":1,"column_end":30}},{"value":"/     .subsequent_indent(\"  \");","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":32374,"byte_end":32407,"line_start":943,"line_end":943,"column_start":1,"column_end":34}},{"value":"/ let lines = wrap(\"Memory safety without garbage collection.\", &options);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":32408,"byte_end":32484,"line_start":944,"line_end":944,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(lines, &[","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":32485,"byte_end":32509,"line_start":945,"line_end":945,"column_start":1,"column_end":25}},{"value":"/     \"- Memory safety\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":32510,"byte_end":32536,"line_start":946,"line_end":946,"column_start":1,"column_end":27}},{"value":"/     \"  without\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":32537,"byte_end":32557,"line_start":947,"line_end":947,"column_start":1,"column_end":21}},{"value":"/     \"  garbage\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":32558,"byte_end":32578,"line_start":948,"line_end":948,"column_start":1,"column_end":21}},{"value":"/     \"  collection.\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":32579,"byte_end":32603,"line_start":949,"line_end":949,"column_start":1,"column_end":25}},{"value":"/ ]);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":32604,"byte_end":32611,"line_start":950,"line_end":950,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":32612,"byte_end":32619,"line_start":951,"line_end":951,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":32620,"byte_end":32623,"line_start":952,"line_end":952,"column_start":1,"column_end":4}},{"value":"/ # Optimal-Fit Wrapping","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":32624,"byte_end":32650,"line_start":953,"line_end":953,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":32651,"byte_end":32654,"line_start":954,"line_end":954,"column_start":1,"column_end":4}},{"value":"/ By default, `wrap` will try to ensure an even right margin by","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":32655,"byte_end":32720,"line_start":955,"line_end":955,"column_start":1,"column_end":66}},{"value":"/ finding breaks which avoid short lines. We call this an","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":32721,"byte_end":32780,"line_start":956,"line_end":956,"column_start":1,"column_end":60}},{"value":"/ “optimal-fit algorithm” since the line breaks are computed by","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":32781,"byte_end":32850,"line_start":957,"line_end":957,"column_start":1,"column_end":66}},{"value":"/ considering all possible line breaks. The alternative is a","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":32851,"byte_end":32913,"line_start":958,"line_end":958,"column_start":1,"column_end":63}},{"value":"/ “first-fit algorithm” which simply accumulates words until they no","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":32914,"byte_end":32988,"line_start":959,"line_end":959,"column_start":1,"column_end":71}},{"value":"/ longer fit on the line.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":32989,"byte_end":33016,"line_start":960,"line_end":960,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":33017,"byte_end":33020,"line_start":961,"line_end":961,"column_start":1,"column_end":4}},{"value":"/ As an example, using the first-fit algorithm to wrap the famous","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":33021,"byte_end":33088,"line_start":962,"line_end":962,"column_start":1,"column_end":68}},{"value":"/ Hamlet quote “To be, or not to be: that is the question” in a","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":33089,"byte_end":33158,"line_start":963,"line_end":963,"column_start":1,"column_end":66}},{"value":"/ narrow column with room for only 10 characters looks like this:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":33159,"byte_end":33226,"line_start":964,"line_end":964,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":33227,"byte_end":33230,"line_start":965,"line_end":965,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":33231,"byte_end":33238,"line_start":966,"line_end":966,"column_start":1,"column_end":8}},{"value":"/ # use textwrap::{wrap_algorithms::FirstFit, Options, wrap};","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":33239,"byte_end":33302,"line_start":967,"line_end":967,"column_start":1,"column_end":64}},{"value":"/ #","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":33303,"byte_end":33308,"line_start":968,"line_end":968,"column_start":1,"column_end":6}},{"value":"/ # let lines = wrap(\"To be, or not to be: that is the question\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":33309,"byte_end":33376,"line_start":969,"line_end":969,"column_start":1,"column_end":68}},{"value":"/ #                  Options::new(10).wrap_algorithm(FirstFit));","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":33377,"byte_end":33443,"line_start":970,"line_end":970,"column_start":1,"column_end":67}},{"value":"/ # assert_eq!(lines.join(\"\\n\") + \"\\n\", \"\\","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":33444,"byte_end":33488,"line_start":971,"line_end":971,"column_start":1,"column_end":45}},{"value":"/ To be, or","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":33489,"byte_end":33502,"line_start":972,"line_end":972,"column_start":1,"column_end":14}},{"value":"/ not to be:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":33503,"byte_end":33517,"line_start":973,"line_end":973,"column_start":1,"column_end":15}},{"value":"/ that is","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":33518,"byte_end":33529,"line_start":974,"line_end":974,"column_start":1,"column_end":12}},{"value":"/ the","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":33530,"byte_end":33537,"line_start":975,"line_end":975,"column_start":1,"column_end":8}},{"value":"/ question","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":33538,"byte_end":33550,"line_start":976,"line_end":976,"column_start":1,"column_end":13}},{"value":"/ # \");","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":33551,"byte_end":33560,"line_start":977,"line_end":977,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":33561,"byte_end":33568,"line_start":978,"line_end":978,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":33569,"byte_end":33572,"line_start":979,"line_end":979,"column_start":1,"column_end":4}},{"value":"/ Notice how the second to last line is quite narrow because","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":33573,"byte_end":33635,"line_start":980,"line_end":980,"column_start":1,"column_end":63}},{"value":"/ “question” was too large to fit? The greedy first-fit algorithm","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":33636,"byte_end":33707,"line_start":981,"line_end":981,"column_start":1,"column_end":68}},{"value":"/ doesn’t look ahead, so it has no other option than to put","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":33708,"byte_end":33771,"line_start":982,"line_end":982,"column_start":1,"column_end":62}},{"value":"/ “question” onto its own line.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":33772,"byte_end":33809,"line_start":983,"line_end":983,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":33810,"byte_end":33813,"line_start":984,"line_end":984,"column_start":1,"column_end":4}},{"value":"/ With the optimal-fit wrapping algorithm, the previous lines are","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":33814,"byte_end":33881,"line_start":985,"line_end":985,"column_start":1,"column_end":68}},{"value":"/ shortened slightly in order to make the word “is” go into the","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":33882,"byte_end":33951,"line_start":986,"line_end":986,"column_start":1,"column_end":66}},{"value":"/ second last line:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":33952,"byte_end":33973,"line_start":987,"line_end":987,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":33974,"byte_end":33977,"line_start":988,"line_end":988,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":33978,"byte_end":33985,"line_start":989,"line_end":989,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"smawk\")] {","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":33986,"byte_end":34019,"line_start":990,"line_end":990,"column_start":1,"column_end":34}},{"value":"/ # use textwrap::{Options, wrap};","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":34020,"byte_end":34056,"line_start":991,"line_end":991,"column_start":1,"column_end":37}},{"value":"/ # use textwrap::wrap_algorithms::OptimalFit;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":34057,"byte_end":34105,"line_start":992,"line_end":992,"column_start":1,"column_end":49}},{"value":"/ #","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":34106,"byte_end":34111,"line_start":993,"line_end":993,"column_start":1,"column_end":6}},{"value":"/ # let lines = wrap(\"To be, or not to be: that is the question\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":34112,"byte_end":34179,"line_start":994,"line_end":994,"column_start":1,"column_end":68}},{"value":"/ #                  Options::new(10).wrap_algorithm(OptimalFit));","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":34180,"byte_end":34248,"line_start":995,"line_end":995,"column_start":1,"column_end":69}},{"value":"/ # assert_eq!(lines.join(\"\\n\") + \"\\n\", \"\\","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":34249,"byte_end":34293,"line_start":996,"line_end":996,"column_start":1,"column_end":45}},{"value":"/ To be,","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":34294,"byte_end":34304,"line_start":997,"line_end":997,"column_start":1,"column_end":11}},{"value":"/ or not to","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":34305,"byte_end":34318,"line_start":998,"line_end":998,"column_start":1,"column_end":14}},{"value":"/ be: that","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":34319,"byte_end":34331,"line_start":999,"line_end":999,"column_start":1,"column_end":13}},{"value":"/ is the","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":34332,"byte_end":34342,"line_start":1000,"line_end":1000,"column_start":1,"column_end":11}},{"value":"/ question","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":34343,"byte_end":34355,"line_start":1001,"line_end":1001,"column_start":1,"column_end":13}},{"value":"/ # \"); }","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":34356,"byte_end":34367,"line_start":1002,"line_end":1002,"column_start":1,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":34368,"byte_end":34375,"line_start":1003,"line_end":1003,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":34376,"byte_end":34379,"line_start":1004,"line_end":1004,"column_start":1,"column_end":4}},{"value":"/ Please see the [`wrap_algorithms::WrapAlgorithm`] trait for details.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":34380,"byte_end":34452,"line_start":1005,"line_end":1005,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":34453,"byte_end":34456,"line_start":1006,"line_end":1006,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":34457,"byte_end":34471,"line_start":1007,"line_end":1007,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":34472,"byte_end":34475,"line_start":1008,"line_end":1008,"column_start":1,"column_end":4}},{"value":"/ The returned iterator yields lines of type `Cow<'_, str>`. If","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":34476,"byte_end":34541,"line_start":1009,"line_end":1009,"column_start":1,"column_end":66}},{"value":"/ possible, the wrapped lines will borrow from the input string. As","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":34542,"byte_end":34611,"line_start":1010,"line_end":1010,"column_start":1,"column_end":70}},{"value":"/ an example, a hanging indentation, the first line can borrow from","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":34612,"byte_end":34681,"line_start":1011,"line_end":1011,"column_start":1,"column_end":70}},{"value":"/ the input, but the subsequent lines become owned strings:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":34682,"byte_end":34743,"line_start":1012,"line_end":1012,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":34744,"byte_end":34747,"line_start":1013,"line_end":1013,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":34748,"byte_end":34755,"line_start":1014,"line_end":1014,"column_start":1,"column_end":8}},{"value":"/ use std::borrow::Cow::{Borrowed, Owned};","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":34756,"byte_end":34800,"line_start":1015,"line_end":1015,"column_start":1,"column_end":45}},{"value":"/ use textwrap::{wrap, Options};","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":34801,"byte_end":34835,"line_start":1016,"line_end":1016,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":34836,"byte_end":34839,"line_start":1017,"line_end":1017,"column_start":1,"column_end":4}},{"value":"/ let options = Options::new(15).subsequent_indent(\"....\");","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":34840,"byte_end":34901,"line_start":1018,"line_end":1018,"column_start":1,"column_end":62}},{"value":"/ let lines = wrap(\"Wrapping text all day long.\", &options);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":34902,"byte_end":34964,"line_start":1019,"line_end":1019,"column_start":1,"column_end":63}},{"value":"/ let annotated = lines","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":34965,"byte_end":34990,"line_start":1020,"line_end":1020,"column_start":1,"column_end":26}},{"value":"/     .iter()","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":34991,"byte_end":35006,"line_start":1021,"line_end":1021,"column_start":1,"column_end":16}},{"value":"/     .map(|line| match line {","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":35007,"byte_end":35039,"line_start":1022,"line_end":1022,"column_start":1,"column_end":33}},{"value":"/         Borrowed(text) => format!(\"[Borrowed] {}\", text),","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":35040,"byte_end":35101,"line_start":1023,"line_end":1023,"column_start":1,"column_end":62}},{"value":"/         Owned(text) => format!(\"[Owned]    {}\", text),","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":35102,"byte_end":35160,"line_start":1024,"line_end":1024,"column_start":1,"column_end":59}},{"value":"/     })","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":35161,"byte_end":35171,"line_start":1025,"line_end":1025,"column_start":1,"column_end":11}},{"value":"/     .collect::<Vec<_>>();","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":35172,"byte_end":35201,"line_start":1026,"line_end":1026,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":35202,"byte_end":35217,"line_start":1027,"line_end":1027,"column_start":1,"column_end":16}},{"value":"/     annotated,","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":35218,"byte_end":35236,"line_start":1028,"line_end":1028,"column_start":1,"column_end":19}},{"value":"/     &[","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":35237,"byte_end":35247,"line_start":1029,"line_end":1029,"column_start":1,"column_end":11}},{"value":"/         \"[Borrowed] Wrapping text\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":35248,"byte_end":35287,"line_start":1030,"line_end":1030,"column_start":1,"column_end":40}},{"value":"/         \"[Owned]    ....all day\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":35288,"byte_end":35325,"line_start":1031,"line_end":1031,"column_start":1,"column_end":38}},{"value":"/         \"[Owned]    ....long.\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":35326,"byte_end":35361,"line_start":1032,"line_end":1032,"column_start":1,"column_end":36}},{"value":"/     ]","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":35362,"byte_end":35371,"line_start":1033,"line_end":1033,"column_start":1,"column_end":10}},{"value":"/ );","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":35372,"byte_end":35378,"line_start":1034,"line_end":1034,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":35379,"byte_end":35386,"line_start":1035,"line_end":1035,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":35387,"byte_end":35390,"line_start":1036,"line_end":1036,"column_start":1,"column_end":4}},{"value":"/ ## Leading and Trailing Whitespace","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":35391,"byte_end":35429,"line_start":1037,"line_end":1037,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":35430,"byte_end":35433,"line_start":1038,"line_end":1038,"column_start":1,"column_end":4}},{"value":"/ As a rule, leading whitespace (indentation) is preserved and","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":35434,"byte_end":35498,"line_start":1039,"line_end":1039,"column_start":1,"column_end":65}},{"value":"/ trailing whitespace is discarded.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":35499,"byte_end":35536,"line_start":1040,"line_end":1040,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":35537,"byte_end":35540,"line_start":1041,"line_end":1041,"column_start":1,"column_end":4}},{"value":"/ In more details, when wrapping words into lines, words are found","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":35541,"byte_end":35609,"line_start":1042,"line_end":1042,"column_start":1,"column_end":69}},{"value":"/ by splitting the input text on space characters. One or more","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":35610,"byte_end":35674,"line_start":1043,"line_end":1043,"column_start":1,"column_end":65}},{"value":"/ spaces (shown here as “␣”) are attached to the end of each word:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":35675,"byte_end":35749,"line_start":1044,"line_end":1044,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":35750,"byte_end":35753,"line_start":1045,"line_end":1045,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":35754,"byte_end":35765,"line_start":1046,"line_end":1046,"column_start":1,"column_end":12}},{"value":"/ \"Foo␣␣␣bar␣baz\" -> [\"Foo␣␣␣\", \"bar␣\", \"baz\"]","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":35766,"byte_end":35830,"line_start":1047,"line_end":1047,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":35831,"byte_end":35838,"line_start":1048,"line_end":1048,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":35839,"byte_end":35842,"line_start":1049,"line_end":1049,"column_start":1,"column_end":4}},{"value":"/ These words are then put into lines. The interword whitespace is","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":35843,"byte_end":35911,"line_start":1050,"line_end":1050,"column_start":1,"column_end":69}},{"value":"/ preserved, unless the lines are wrapped so that the `\"Foo␣␣␣\"`","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":35912,"byte_end":35984,"line_start":1051,"line_end":1051,"column_start":1,"column_end":67}},{"value":"/ word falls at the end of a line:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":35985,"byte_end":36021,"line_start":1052,"line_end":1052,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":36022,"byte_end":36025,"line_start":1053,"line_end":1053,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":36026,"byte_end":36033,"line_start":1054,"line_end":1054,"column_start":1,"column_end":8}},{"value":"/ use textwrap::wrap;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":36034,"byte_end":36057,"line_start":1055,"line_end":1055,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":36058,"byte_end":36061,"line_start":1056,"line_end":1056,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(wrap(\"Foo   bar baz\", 10), vec![\"Foo   bar\", \"baz\"]);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":36062,"byte_end":36130,"line_start":1057,"line_end":1057,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(wrap(\"Foo   bar baz\", 8), vec![\"Foo\", \"bar baz\"]);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":36131,"byte_end":36196,"line_start":1058,"line_end":1058,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":36197,"byte_end":36204,"line_start":1059,"line_end":1059,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":36205,"byte_end":36208,"line_start":1060,"line_end":1060,"column_start":1,"column_end":4}},{"value":"/ Notice how the trailing whitespace is removed in both case: in the","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":36209,"byte_end":36279,"line_start":1061,"line_end":1061,"column_start":1,"column_end":71}},{"value":"/ first example, `\"bar␣\"` becomes `\"bar\"` and in the second case","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":36280,"byte_end":36348,"line_start":1062,"line_end":1062,"column_start":1,"column_end":67}},{"value":"/ `\"Foo␣␣␣\"` becomes `\"Foo\"`.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":36349,"byte_end":36386,"line_start":1063,"line_end":1063,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":36387,"byte_end":36390,"line_start":1064,"line_end":1064,"column_start":1,"column_end":4}},{"value":"/ Leading whitespace is preserved when the following word fits on","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":36391,"byte_end":36458,"line_start":1065,"line_end":1065,"column_start":1,"column_end":68}},{"value":"/ the first line. To understand this, consider how words are found","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":36459,"byte_end":36527,"line_start":1066,"line_end":1066,"column_start":1,"column_end":69}},{"value":"/ in a text with leading spaces:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":36528,"byte_end":36562,"line_start":1067,"line_end":1067,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":36563,"byte_end":36566,"line_start":1068,"line_end":1068,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":36567,"byte_end":36578,"line_start":1069,"line_end":1069,"column_start":1,"column_end":12}},{"value":"/ \"␣␣foo␣bar\" -> [\"␣␣\", \"foo␣\", \"bar\"]","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":36579,"byte_end":36631,"line_start":1070,"line_end":1070,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":36632,"byte_end":36639,"line_start":1071,"line_end":1071,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":36640,"byte_end":36643,"line_start":1072,"line_end":1072,"column_start":1,"column_end":4}},{"value":"/ When put into lines, the indentation is preserved if `\"foo\"` fits","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":36644,"byte_end":36713,"line_start":1073,"line_end":1073,"column_start":1,"column_end":70}},{"value":"/ on the first line, otherwise you end up with an empty line:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":36714,"byte_end":36777,"line_start":1074,"line_end":1074,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":36778,"byte_end":36781,"line_start":1075,"line_end":1075,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":36782,"byte_end":36789,"line_start":1076,"line_end":1076,"column_start":1,"column_end":8}},{"value":"/ use textwrap::wrap;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":36790,"byte_end":36813,"line_start":1077,"line_end":1077,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":36814,"byte_end":36817,"line_start":1078,"line_end":1078,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(wrap(\"  foo bar\", 8), vec![\"  foo\", \"bar\"]);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":36818,"byte_end":36877,"line_start":1079,"line_end":1079,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(wrap(\"  foo bar\", 4), vec![\"\", \"foo\", \"bar\"]);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":36878,"byte_end":36939,"line_start":1080,"line_end":1080,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":36940,"byte_end":36947,"line_start":1081,"line_end":1081,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":42786,"byte_end":42798,"line_start":1230,"line_end":1230,"column_start":8,"column_end":20},"name":"wrap_columns","qualname":"::wrap_columns","value":"pub fn wrap_columns<'a, WrapAlgo, WordSep, WordSplit,\n                    Opt>(&str, usize, Opt, &str, &str, &str) -> Vec<String>\nwhere WrapAlgo: wrap_algorithms::WrapAlgorithm,\nWordSep: word_separators::WordSeparator,\nWordSplit: word_splitters::WordSplitter, Opt: Into<Options>","parent":null,"children":[],"decl_id":null,"docs":" Wrap text into columns with a given total width.","sig":null,"attributes":[{"value":"/ Wrap text into columns with a given total width.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":40409,"byte_end":40461,"line_start":1173,"line_end":1173,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":40462,"byte_end":40465,"line_start":1174,"line_end":1174,"column_start":1,"column_end":4}},{"value":"/ The `left_gap`, `middle_gap` and `right_gap` arguments specify the","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":40466,"byte_end":40536,"line_start":1175,"line_end":1175,"column_start":1,"column_end":71}},{"value":"/ strings to insert before, between, and after the columns. The","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":40537,"byte_end":40602,"line_start":1176,"line_end":1176,"column_start":1,"column_end":66}},{"value":"/ total width of all columns and all gaps is specified using the","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":40603,"byte_end":40669,"line_start":1177,"line_end":1177,"column_start":1,"column_end":67}},{"value":"/ `total_width_or_options` argument. This argument can simply be an","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":40670,"byte_end":40739,"line_start":1178,"line_end":1178,"column_start":1,"column_end":70}},{"value":"/ integer if you want to use default settings when wrapping, or it","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":40740,"byte_end":40808,"line_start":1179,"line_end":1179,"column_start":1,"column_end":69}},{"value":"/ can be a [`Options`] value if you want to customize the wrapping.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":40809,"byte_end":40878,"line_start":1180,"line_end":1180,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":40879,"byte_end":40882,"line_start":1181,"line_end":1181,"column_start":1,"column_end":4}},{"value":"/ If the columns are narrow, it is recommended to set","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":40883,"byte_end":40938,"line_start":1182,"line_end":1182,"column_start":1,"column_end":56}},{"value":"/ [`Options::break_words`] to `true` to prevent words from","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":40939,"byte_end":40999,"line_start":1183,"line_end":1183,"column_start":1,"column_end":61}},{"value":"/ protruding into the margins.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":41000,"byte_end":41032,"line_start":1184,"line_end":1184,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":41033,"byte_end":41036,"line_start":1185,"line_end":1185,"column_start":1,"column_end":4}},{"value":"/ The per-column width is computed like this:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":41037,"byte_end":41084,"line_start":1186,"line_end":1186,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":41085,"byte_end":41088,"line_start":1187,"line_end":1187,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":41089,"byte_end":41096,"line_start":1188,"line_end":1188,"column_start":1,"column_end":8}},{"value":"/ # let (left_gap, middle_gap, right_gap) = (\"\", \"\", \"\");","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":41097,"byte_end":41156,"line_start":1189,"line_end":1189,"column_start":1,"column_end":60}},{"value":"/ # let columns = 2;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":41157,"byte_end":41179,"line_start":1190,"line_end":1190,"column_start":1,"column_end":23}},{"value":"/ # let options = textwrap::Options::new(80);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":41180,"byte_end":41227,"line_start":1191,"line_end":1191,"column_start":1,"column_end":48}},{"value":"/ let inner_width = options.width","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":41228,"byte_end":41263,"line_start":1192,"line_end":1192,"column_start":1,"column_end":36}},{"value":"/     - textwrap::core::display_width(left_gap)","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":41264,"byte_end":41313,"line_start":1193,"line_end":1193,"column_start":1,"column_end":50}},{"value":"/     - textwrap::core::display_width(right_gap)","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":41314,"byte_end":41364,"line_start":1194,"line_end":1194,"column_start":1,"column_end":51}},{"value":"/     - textwrap::core::display_width(middle_gap) * (columns - 1);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":41365,"byte_end":41433,"line_start":1195,"line_end":1195,"column_start":1,"column_end":69}},{"value":"/ let column_width = inner_width / columns;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":41434,"byte_end":41479,"line_start":1196,"line_end":1196,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":41480,"byte_end":41487,"line_start":1197,"line_end":1197,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":41488,"byte_end":41491,"line_start":1198,"line_end":1198,"column_start":1,"column_end":4}},{"value":"/ The `text` is wrapped using [`wrap`] and the given `options`","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":41492,"byte_end":41556,"line_start":1199,"line_end":1199,"column_start":1,"column_end":65}},{"value":"/ argument, but the width is overwritten to the computed","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":41557,"byte_end":41615,"line_start":1200,"line_end":1200,"column_start":1,"column_end":59}},{"value":"/ `column_width`.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":41616,"byte_end":41635,"line_start":1201,"line_end":1201,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":41636,"byte_end":41639,"line_start":1202,"line_end":1202,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":41640,"byte_end":41652,"line_start":1203,"line_end":1203,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":41653,"byte_end":41656,"line_start":1204,"line_end":1204,"column_start":1,"column_end":4}},{"value":"/ Panics if `columns` is zero.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":41657,"byte_end":41689,"line_start":1205,"line_end":1205,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":41690,"byte_end":41693,"line_start":1206,"line_end":1206,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":41694,"byte_end":41708,"line_start":1207,"line_end":1207,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":41709,"byte_end":41712,"line_start":1208,"line_end":1208,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":41713,"byte_end":41720,"line_start":1209,"line_end":1209,"column_start":1,"column_end":8}},{"value":"/ use textwrap::wrap_columns;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":41721,"byte_end":41752,"line_start":1210,"line_end":1210,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":41753,"byte_end":41756,"line_start":1211,"line_end":1211,"column_start":1,"column_end":4}},{"value":"/ let text = \"\\","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":41757,"byte_end":41774,"line_start":1212,"line_end":1212,"column_start":1,"column_end":18}},{"value":"/ This is an example text, which is wrapped into three columns. \\","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":41775,"byte_end":41842,"line_start":1213,"line_end":1213,"column_start":1,"column_end":68}},{"value":"/ Notice how the final column can be shorter than the others.\";","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":41843,"byte_end":41908,"line_start":1214,"line_end":1214,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":41909,"byte_end":41912,"line_start":1215,"line_end":1215,"column_start":1,"column_end":4}},{"value":"/ #[cfg(feature = \"smawk\")]","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":41913,"byte_end":41942,"line_start":1216,"line_end":1216,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(wrap_columns(text, 3, 50, \"| \", \" | \", \" |\"),","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":41943,"byte_end":42003,"line_start":1217,"line_end":1217,"column_start":1,"column_end":61}},{"value":"/            vec![\"| This is       | into three    | column can be  |\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":42004,"byte_end":42077,"line_start":1218,"line_end":1218,"column_start":1,"column_end":74}},{"value":"/                 \"| an example    | columns.      | shorter than   |\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":42078,"byte_end":42151,"line_start":1219,"line_end":1219,"column_start":1,"column_end":74}},{"value":"/                 \"| text, which   | Notice how    | the others.    |\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":42152,"byte_end":42225,"line_start":1220,"line_end":1220,"column_start":1,"column_end":74}},{"value":"/                 \"| is wrapped    | the final     |                |\"]);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":42226,"byte_end":42301,"line_start":1221,"line_end":1221,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":42302,"byte_end":42305,"line_start":1222,"line_end":1222,"column_start":1,"column_end":4}},{"value":"/ // Without the `smawk` feature, the middle column is a little more uneven:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":42306,"byte_end":42384,"line_start":1223,"line_end":1223,"column_start":1,"column_end":79}},{"value":"/ #[cfg(not(feature = \"smawk\"))]","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":42385,"byte_end":42419,"line_start":1224,"line_end":1224,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(wrap_columns(text, 3, 50, \"| \", \" | \", \" |\"),","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":42420,"byte_end":42480,"line_start":1225,"line_end":1225,"column_start":1,"column_end":61}},{"value":"/            vec![\"| This is an    | three         | column can be  |\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":42481,"byte_end":42554,"line_start":1226,"line_end":1226,"column_start":1,"column_end":74}},{"value":"/                 \"| example text, | columns.      | shorter than   |\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":42555,"byte_end":42628,"line_start":1227,"line_end":1227,"column_start":1,"column_end":74}},{"value":"/                 \"| which is      | Notice how    | the others.    |\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":42629,"byte_end":42702,"line_start":1228,"line_end":1228,"column_start":1,"column_end":74}},{"value":"/                 \"| wrapped into  | the final     |                |\"]);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":42703,"byte_end":42778,"line_start":1229,"line_end":1229,"column_start":1,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":203},"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":46753,"byte_end":46765,"line_start":1340,"line_end":1340,"column_start":8,"column_end":20},"name":"fill_inplace","qualname":"::fill_inplace","value":"pub fn fill_inplace(&mut String, usize)","parent":null,"children":[],"decl_id":null,"docs":" Fill `text` in-place without reallocating the input string.","sig":null,"attributes":[{"value":"/ Fill `text` in-place without reallocating the input string.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":44653,"byte_end":44716,"line_start":1286,"line_end":1286,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":44717,"byte_end":44720,"line_start":1287,"line_end":1287,"column_start":1,"column_end":4}},{"value":"/ This function works by modifying the input string: some `' '`","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":44721,"byte_end":44786,"line_start":1288,"line_end":1288,"column_start":1,"column_end":66}},{"value":"/ characters will be replaced by `'\\n'` characters. The rest of the","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":44787,"byte_end":44856,"line_start":1289,"line_end":1289,"column_start":1,"column_end":70}},{"value":"/ text remains untouched.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":44857,"byte_end":44884,"line_start":1290,"line_end":1290,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":44885,"byte_end":44888,"line_start":1291,"line_end":1291,"column_start":1,"column_end":4}},{"value":"/ Since we can only replace existing whitespace in the input with","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":44889,"byte_end":44956,"line_start":1292,"line_end":1292,"column_start":1,"column_end":68}},{"value":"/ `'\\n'`, we cannot do hyphenation nor can we split words longer","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":44957,"byte_end":45023,"line_start":1293,"line_end":1293,"column_start":1,"column_end":67}},{"value":"/ than the line width. We also need to use `AsciiSpace` as the word","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":45024,"byte_end":45093,"line_start":1294,"line_end":1294,"column_start":1,"column_end":70}},{"value":"/ separator since we need `' '` characters between words in order to","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":45094,"byte_end":45164,"line_start":1295,"line_end":1295,"column_start":1,"column_end":71}},{"value":"/ replace some of them with a `'\\n'`. Indentation is also ruled out.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":45165,"byte_end":45235,"line_start":1296,"line_end":1296,"column_start":1,"column_end":71}},{"value":"/ In other words, `fill_inplace(width)` behaves as if you had called","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":45236,"byte_end":45306,"line_start":1297,"line_end":1297,"column_start":1,"column_end":71}},{"value":"/ [`fill`] with these options:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":45307,"byte_end":45339,"line_start":1298,"line_end":1298,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":45340,"byte_end":45343,"line_start":1299,"line_end":1299,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":45344,"byte_end":45351,"line_start":1300,"line_end":1300,"column_start":1,"column_end":8}},{"value":"/ # use textwrap::{core, Options};","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":45352,"byte_end":45388,"line_start":1301,"line_end":1301,"column_start":1,"column_end":37}},{"value":"/ # use textwrap::{word_separators, word_splitters, wrap_algorithms};","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":45389,"byte_end":45460,"line_start":1302,"line_end":1302,"column_start":1,"column_end":72}},{"value":"/ # let width = 80;","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":45461,"byte_end":45482,"line_start":1303,"line_end":1303,"column_start":1,"column_end":22}},{"value":"/ Options {","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":45483,"byte_end":45496,"line_start":1304,"line_end":1304,"column_start":1,"column_end":14}},{"value":"/     width: width,","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":45497,"byte_end":45518,"line_start":1305,"line_end":1305,"column_start":1,"column_end":22}},{"value":"/     initial_indent: \"\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":45519,"byte_end":45546,"line_start":1306,"line_end":1306,"column_start":1,"column_end":28}},{"value":"/     subsequent_indent: \"\",","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":45547,"byte_end":45577,"line_start":1307,"line_end":1307,"column_start":1,"column_end":31}},{"value":"/     break_words: false,","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":45578,"byte_end":45605,"line_start":1308,"line_end":1308,"column_start":1,"column_end":28}},{"value":"/     word_separator: word_separators::AsciiSpace,","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":45606,"byte_end":45658,"line_start":1309,"line_end":1309,"column_start":1,"column_end":53}},{"value":"/     wrap_algorithm: wrap_algorithms::FirstFit,","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":45659,"byte_end":45709,"line_start":1310,"line_end":1310,"column_start":1,"column_end":51}},{"value":"/     word_splitter: word_splitters::NoHyphenation,","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":45710,"byte_end":45763,"line_start":1311,"line_end":1311,"column_start":1,"column_end":54}},{"value":"/ };","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":45764,"byte_end":45770,"line_start":1312,"line_end":1312,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":45771,"byte_end":45778,"line_start":1313,"line_end":1313,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":45779,"byte_end":45782,"line_start":1314,"line_end":1314,"column_start":1,"column_end":4}},{"value":"/ The wrap algorithm is [`wrap_algorithms::FirstFit`] since this","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":45783,"byte_end":45849,"line_start":1315,"line_end":1315,"column_start":1,"column_end":67}},{"value":"/ is the fastest algorithm — and the main reason to use","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":45850,"byte_end":45909,"line_start":1316,"line_end":1316,"column_start":1,"column_end":58}},{"value":"/ `fill_inplace` is to get the string broken into newlines as fast","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":45910,"byte_end":45978,"line_start":1317,"line_end":1317,"column_start":1,"column_end":69}},{"value":"/ as possible.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":45979,"byte_end":45995,"line_start":1318,"line_end":1318,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":45996,"byte_end":45999,"line_start":1319,"line_end":1319,"column_start":1,"column_end":4}},{"value":"/ A last difference is that (unlike [`fill`]) `fill_inplace` can","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":46000,"byte_end":46066,"line_start":1320,"line_end":1320,"column_start":1,"column_end":67}},{"value":"/ leave trailing whitespace on lines. This is because we wrap by","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":46067,"byte_end":46133,"line_start":1321,"line_end":1321,"column_start":1,"column_end":67}},{"value":"/ inserting a `'\\n'` at the final whitespace in the input string:","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":46134,"byte_end":46201,"line_start":1322,"line_end":1322,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":46202,"byte_end":46205,"line_start":1323,"line_end":1323,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":46206,"byte_end":46213,"line_start":1324,"line_end":1324,"column_start":1,"column_end":8}},{"value":"/ let mut text = String::from(\"Hello   World!\");","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":46214,"byte_end":46264,"line_start":1325,"line_end":1325,"column_start":1,"column_end":51}},{"value":"/ textwrap::fill_inplace(&mut text, 10);","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":46265,"byte_end":46307,"line_start":1326,"line_end":1326,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(text, \"Hello  \\nWorld!\");","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":46308,"byte_end":46348,"line_start":1327,"line_end":1327,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":46349,"byte_end":46356,"line_start":1328,"line_end":1328,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":46357,"byte_end":46360,"line_start":1329,"line_end":1329,"column_start":1,"column_end":4}},{"value":"/ If we didn't do this, the word `World!` would end up being","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":46361,"byte_end":46423,"line_start":1330,"line_end":1330,"column_start":1,"column_end":63}},{"value":"/ indented. You can avoid this if you make sure that your input text","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":46424,"byte_end":46494,"line_start":1331,"line_end":1331,"column_start":1,"column_end":71}},{"value":"/ has no double spaces.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":46495,"byte_end":46520,"line_start":1332,"line_end":1332,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":46521,"byte_end":46524,"line_start":1333,"line_end":1333,"column_start":1,"column_end":4}},{"value":"/ # Performance","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":46525,"byte_end":46542,"line_start":1334,"line_end":1334,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":46543,"byte_end":46546,"line_start":1335,"line_end":1335,"column_start":1,"column_end":4}},{"value":"/ In benchmarks, `fill_inplace` is about twice as fast as [`fill`].","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":46547,"byte_end":46616,"line_start":1336,"line_end":1336,"column_start":1,"column_end":70}},{"value":"/ Please see the [`linear`","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":46617,"byte_end":46645,"line_start":1337,"line_end":1337,"column_start":1,"column_end":29}},{"value":"/ benchmark](https://github.com/mgeisler/textwrap/blob/master/benches/linear.rs)","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":46646,"byte_end":46728,"line_start":1338,"line_end":1338,"column_start":1,"column_end":83}},{"value":"/ for details.","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":46729,"byte_end":46745,"line_start":1339,"line_end":1339,"column_start":1,"column_end":17}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":83069,"byte_end":83070,"line_start":58,"line_end":58,"column_start":65,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":83180,"byte_end":83183,"line_start":64,"line_end":64,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":83347,"byte_end":83350,"line_start":71,"line_end":71,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":84069,"byte_end":84079,"line_start":94,"line_end":94,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":97214,"byte_end":97215,"line_start":67,"line_end":67,"column_start":63,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":97324,"byte_end":97327,"line_start":73,"line_end":73,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":97459,"byte_end":97462,"line_start":79,"line_end":79,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":98155,"byte_end":98168,"line_start":103,"line_end":103,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":98883,"byte_end":98897,"line_start":124,"line_end":124,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":106752,"byte_end":106753,"line_start":52,"line_end":52,"column_start":65,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":106863,"byte_end":106866,"line_start":58,"line_end":58,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":107030,"byte_end":107033,"line_start":65,"line_end":65,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":107536,"byte_end":107544,"line_start":80,"line_end":80,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":123468,"byte_end":123472,"line_start":227,"line_end":227,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":123578,"byte_end":123582,"line_start":235,"line_end":235,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":125792,"byte_end":125796,"line_start":305,"line_end":305,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":8651,"byte_end":8658,"line_start":263,"line_end":263,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":9273,"byte_end":9280,"line_start":283,"line_end":283,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":9544,"byte_end":9551,"line_start":297,"line_end":297,"column_start":5,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":14493,"byte_end":14500,"line_start":410,"line_end":410,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":18601,"byte_end":18608,"line_start":500,"line_end":500,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":173},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":6323,"byte_end":6338,"line_start":192,"line_end":192,"column_start":9,"column_end":24},"ref_id":{"krate":0,"index":16}},{"kind":"Mod","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":6348,"byte_end":6362,"line_start":193,"line_end":193,"column_start":9,"column_end":23},"ref_id":{"krate":0,"index":43}},{"kind":"Mod","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":6372,"byte_end":6387,"line_start":194,"line_end":194,"column_start":9,"column_end":24},"ref_id":{"krate":0,"index":78}},{"kind":"Mod","span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":6398,"byte_end":6402,"line_start":196,"line_end":196,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":115}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":82263,"byte_end":82281,"line_start":41,"line_end":41,"column_start":26,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":23},"to":{"krate":0,"index":20}},{"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":82294,"byte_end":82299,"line_start":41,"line_end":41,"column_start":57,"column_end":62},"kind":"SuperTrait","from":{"krate":2,"index":9401},"to":{"krate":0,"index":20}},{"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":83069,"byte_end":83070,"line_start":58,"line_end":58,"column_start":65,"column_end":66},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":26},"to":{"krate":0,"index":23}},{"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":83180,"byte_end":83183,"line_start":64,"line_end":64,"column_start":16,"column_end":19},"kind":{"Impl":{"id":1}},"from":{"krate":5,"index":313},"to":{"krate":2,"index":2637}},{"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":83347,"byte_end":83350,"line_start":71,"line_end":71,"column_start":24,"column_end":27},"kind":{"Impl":{"id":2}},"from":{"krate":5,"index":313},"to":{"krate":0,"index":20}},{"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_separators.rs","byte_start":84069,"byte_end":84079,"line_start":94,"line_end":94,"column_start":24,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":208},"to":{"krate":0,"index":20}},{"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":96081,"byte_end":96098,"line_start":40,"line_end":40,"column_start":25,"column_end":42},"kind":"SuperTrait","from":{"krate":0,"index":56},"to":{"krate":0,"index":54}},{"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":96111,"byte_end":96116,"line_start":40,"line_end":40,"column_start":55,"column_end":60},"kind":"SuperTrait","from":{"krate":2,"index":9401},"to":{"krate":0,"index":54}},{"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":97214,"byte_end":97215,"line_start":67,"line_end":67,"column_start":63,"column_end":64},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":59},"to":{"krate":0,"index":56}},{"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":97324,"byte_end":97327,"line_start":73,"line_end":73,"column_start":16,"column_end":19},"kind":{"Impl":{"id":5}},"from":{"krate":5,"index":313},"to":{"krate":2,"index":2637}},{"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":97459,"byte_end":97462,"line_start":79,"line_end":79,"column_start":23,"column_end":26},"kind":{"Impl":{"id":6}},"from":{"krate":5,"index":313},"to":{"krate":0,"index":54}},{"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":98155,"byte_end":98168,"line_start":103,"line_end":103,"column_start":23,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":217},"to":{"krate":0,"index":54}},{"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\word_splitters.rs","byte_start":98883,"byte_end":98897,"line_start":124,"line_end":124,"column_start":23,"column_end":37},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":224},"to":{"krate":0,"index":54}},{"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":105881,"byte_end":105899,"line_start":32,"line_end":32,"column_start":26,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":90},"to":{"krate":0,"index":86}},{"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":105912,"byte_end":105917,"line_start":32,"line_end":32,"column_start":57,"column_end":62},"kind":"SuperTrait","from":{"krate":2,"index":9401},"to":{"krate":0,"index":86}},{"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":106752,"byte_end":106753,"line_start":52,"line_end":52,"column_start":65,"column_end":66},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":93},"to":{"krate":0,"index":90}},{"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":106863,"byte_end":106866,"line_start":58,"line_end":58,"column_start":16,"column_end":19},"kind":{"Impl":{"id":10}},"from":{"krate":5,"index":313},"to":{"krate":2,"index":2637}},{"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":107030,"byte_end":107033,"line_start":65,"line_end":65,"column_start":24,"column_end":27},"kind":{"Impl":{"id":11}},"from":{"krate":5,"index":313},"to":{"krate":0,"index":86}},{"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\wrap_algorithms.rs","byte_start":107536,"byte_end":107544,"line_start":80,"line_end":80,"column_start":24,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":231},"to":{"krate":0,"index":86}},{"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":122458,"byte_end":122463,"line_start":198,"line_end":198,"column_start":31,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":9401},"to":{"krate":0,"index":123}},{"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":123468,"byte_end":123472,"line_start":227,"line_end":227,"column_start":26,"column_end":30},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":240},"to":{"krate":2,"index":3227}},{"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":123578,"byte_end":123582,"line_start":235,"line_end":235,"column_start":10,"column_end":14},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":240},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\core.rs","byte_start":125792,"byte_end":125796,"line_start":305,"line_end":305,"column_start":19,"column_end":23},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":240},"to":{"krate":0,"index":123}},{"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":8651,"byte_end":8658,"line_start":263,"line_end":263,"column_start":9,"column_end":16},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":265},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":9273,"byte_end":9280,"line_start":283,"line_end":283,"column_start":9,"column_end":16},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":265},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":9544,"byte_end":9551,"line_start":297,"line_end":297,"column_start":5,"column_end":12},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":14493,"byte_end":14500,"line_start":410,"line_end":410,"column_start":21,"column_end":28},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\ifEls\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.14.2\\src\\lib.rs","byte_start":18601,"byte_end":18608,"line_start":500,"line_end":500,"column_start":40,"column_end":47},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":265},"to":{"krate":4294967295,"index":4294967295}}]}